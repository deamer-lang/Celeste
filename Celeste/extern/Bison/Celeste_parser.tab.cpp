/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Skeleton implementation for Bison GLR parsers in C

   Copyright (C) 2002-2015, 2018-2021 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C GLR parser skeleton written by Paul Hilfinger.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "glr.c"

/* Pure parsers.  */
#define YYPURE 0




/* Substitute the variable and function names.  */
#define yyparse Celesteparse
#define yylex   Celestelex
#define yyerror Celesteerror
#define yydebug Celestedebug
#define yylval  Celestelval
#define yychar  Celestechar
#define yynerrs Celestenerrs

/* First part of user prologue.  */
#line 5 "./Celeste_parser.y"

#include <iostream>
#include <vector>
#include <string>
#include <cstring>
#include <stdio.h>
#include <Deamer/External/Cpp/Lexer/TerminalObject.h>
#include <Deamer/External/Cpp/Ast/Node.h>
#include "Celeste/Bison/Parser.h"
#define YY_NO_UNISTD_H
#include "Flex/Celeste_lexer.h"
#undef YY_NO_UNISTD_H
#include "Celeste/Ast/Enum/Type.h"
#include "Celeste/Ast/Node/SINGLE_COMMENT.h"
#include "Celeste/Ast/Node/CONSTANT.h"
#include "Celeste/Ast/Node/FUNCTION.h"
#include "Celeste/Ast/Node/CLASS.h"
#include "Celeste/Ast/Node/ENUM.h"
#include "Celeste/Ast/Node/CONDITIONAL.h"
#include "Celeste/Ast/Node/CODE.h"
#include "Celeste/Ast/Node/ATTRIBUTETOK.h"
#include "Celeste/Ast/Node/RUNTIME.h"
#include "Celeste/Ast/Node/STATIC.h"
#include "Celeste/Ast/Node/AUTO.h"
#include "Celeste/Ast/Node/AUTOTYPE.h"
#include "Celeste/Ast/Node/TEMPLATE.h"
#include "Celeste/Ast/Node/NAMESPACE.h"
#include "Celeste/Ast/Node/OPERATORNAME.h"
#include "Celeste/Ast/Node/OVERRIDE.h"
#include "Celeste/Ast/Node/VIRTUAL.h"
#include "Celeste/Ast/Node/PURE.h"
#include "Celeste/Ast/Node/AS.h"
#include "Celeste/Ast/Node/IN.h"
#include "Celeste/Ast/Node/DISPLAY.h"
#include "Celeste/Ast/Node/RETURN.h"
#include "Celeste/Ast/Node/FOR.h"
#include "Celeste/Ast/Node/IF.h"
#include "Celeste/Ast/Node/ELSEIF.h"
#include "Celeste/Ast/Node/ELSE.h"
#include "Celeste/Ast/Node/INLINE.h"
#include "Celeste/Ast/Node/CONSTRUCTOR.h"
#include "Celeste/Ast/Node/FILE_.h"
#include "Celeste/Ast/Node/PROGRAM_.h"
#include "Celeste/Ast/Node/IMPORT.h"
#include "Celeste/Ast/Node/PUBLIC.h"
#include "Celeste/Ast/Node/PROTECTED.h"
#include "Celeste/Ast/Node/PRIVATE.h"
#include "Celeste/Ast/Node/INHERIT.h"
#include "Celeste/Ast/Node/COMPOSITE.h"
#include "Celeste/Ast/Node/LEFT_BRACKET.h"
#include "Celeste/Ast/Node/RIGHT_BRACKET.h"
#include "Celeste/Ast/Node/LEFT_SQUARE_BRACKET.h"
#include "Celeste/Ast/Node/RIGHT_SQUARE_BRACKET.h"
#include "Celeste/Ast/Node/LEFT_PARANTHESIS.h"
#include "Celeste/Ast/Node/RIGHT_PARANTHESIS.h"
#include "Celeste/Ast/Node/COLON.h"
#include "Celeste/Ast/Node/SEMICOLON.h"
#include "Celeste/Ast/Node/COMMA.h"
#include "Celeste/Ast/Node/DOT.h"
#include "Celeste/Ast/Node/LTEQ.h"
#include "Celeste/Ast/Node/GTEQ.h"
#include "Celeste/Ast/Node/LT.h"
#include "Celeste/Ast/Node/GT.h"
#include "Celeste/Ast/Node/PLUSEQ.h"
#include "Celeste/Ast/Node/MINUSEQ.h"
#include "Celeste/Ast/Node/MULTIPLYEQ.h"
#include "Celeste/Ast/Node/DIVIDEEQ.h"
#include "Celeste/Ast/Node/EQEQ.h"
#include "Celeste/Ast/Node/EQ.h"
#include "Celeste/Ast/Node/NOTEQ.h"
#include "Celeste/Ast/Node/NOT.h"
#include "Celeste/Ast/Node/PLUSPLUS.h"
#include "Celeste/Ast/Node/PLUS.h"
#include "Celeste/Ast/Node/MINUSMINUS.h"
#include "Celeste/Ast/Node/MINUS.h"
#include "Celeste/Ast/Node/DIVIDE.h"
#include "Celeste/Ast/Node/MULTIPLY.h"
#include "Celeste/Ast/Node/VARNAME.h"
#include "Celeste/Ast/Node/NUMBER.h"
#include "Celeste/Ast/Node/DECIMAL.h"
#include "Celeste/Ast/Node/TEXT.h"
#include "Celeste/Ast/Node/ESCAPE_CHARS.h"


#include "Celeste/Ast/Node/program.h"
#include "Celeste/Ast/Node/root_program.h"
#include "Celeste/Ast/Node/standard_block.h"
#include "Celeste/Ast/Node/deamerreserved_star__stmt__.h"
#include "Celeste/Ast/Node/stmt.h"
#include "Celeste/Ast/Node/import_statement.h"
#include "Celeste/Ast/Node/file_import.h"
#include "Celeste/Ast/Node/mutation_group.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__symbol_reference__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__symbol_reference__.h"
#include "Celeste/Ast/Node/assignment.h"
#include "Celeste/Ast/Node/assignment_operator.h"
#include "Celeste/Ast/Node/conditional_if.h"
#include "Celeste/Ast/Node/conditional_else_if.h"
#include "Celeste/Ast/Node/conditional_else.h"
#include "Celeste/Ast/Node/conditional_block.h"
#include "Celeste/Ast/Node/template_conditional_function_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__template_parameter__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__template_parameter__.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__conditional_function_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__conditional_function_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__function_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__function_argument__.h"
#include "Celeste/Ast/Node/conditional_function_declaration.h"
#include "Celeste/Ast/Node/template_code_function_declaration.h"
#include "Celeste/Ast/Node/code_function_declaration.h"
#include "Celeste/Ast/Node/return_statement.h"
#include "Celeste/Ast/Node/symbol_increase.h"
#include "Celeste/Ast/Node/symbol_decrease.h"
#include "Celeste/Ast/Node/expression.h"
#include "Celeste/Ast/Node/expression_no_value.h"
#include "Celeste/Ast/Node/t_expression.h"
#include "Celeste/Ast/Node/f_expression.h"
#include "Celeste/Ast/Node/display_call.h"
#include "Celeste/Ast/Node/for_loop.h"
#include "Celeste/Ast/Node/for_iteration_loop.h"
#include "Celeste/Ast/Node/for_each_loop.h"
#include "Celeste/Ast/Node/for_variable.h"
#include "Celeste/Ast/Node/iterator.h"
#include "Celeste/Ast/Node/for_block.h"
#include "Celeste/Ast/Node/namespace_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__namespace_name__.h"
#include "Celeste/Ast/Node/deamerreserved_star__DOT__namespace_name__.h"
#include "Celeste/Ast/Node/namespace_block.h"
#include "Celeste/Ast/Node/namespace_name.h"
#include "Celeste/Ast/Node/inline_class_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__inline_class_declaration_composite__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__inline_class_declaration_composite__.h"
#include "Celeste/Ast/Node/inline_class_declaration_composite.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__inline_class_declaration_composite_alias__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__inline_class_declaration_composite_alias__.h"
#include "Celeste/Ast/Node/inline_class_declaration_composite_alias.h"
#include "Celeste/Ast/Node/inline_class_declaration_composite_name.h"
#include "Celeste/Ast/Node/created_class_name.h"
#include "Celeste/Ast/Node/code_block.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__code_block_input_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__code_block_input_argument__.h"
#include "Celeste/Ast/Node/code_block_input_argument.h"
#include "Celeste/Ast/Node/code_block_argument.h"
#include "Celeste/Ast/Node/code_block_argument_name.h"
#include "Celeste/Ast/Node/code_block_program.h"
#include "Celeste/Ast/Node/variable_declaration.h"
#include "Celeste/Ast/Node/array_declaration.h"
#include "Celeste/Ast/Node/variable_name.h"
#include "Celeste/Ast/Node/template_function_declaration.h"
#include "Celeste/Ast/Node/function_declaration.h"
#include "Celeste/Ast/Node/trailing_return_type.h"
#include "Celeste/Ast/Node/return_type.h"
#include "Celeste/Ast/Node/conditional_function_argument.h"
#include "Celeste/Ast/Node/function_argument.h"
#include "Celeste/Ast/Node/function_argument_type.h"
#include "Celeste/Ast/Node/function_argument_name.h"
#include "Celeste/Ast/Node/condition_modifier_function_call.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__condition_modifier_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__condition_modifier_argument__.h"
#include "Celeste/Ast/Node/condition_modifier_name.h"
#include "Celeste/Ast/Node/condition_modifier_argument.h"
#include "Celeste/Ast/Node/function_body.h"
#include "Celeste/Ast/Node/function_name.h"
#include "Celeste/Ast/Node/template_class_declaration.h"
#include "Celeste/Ast/Node/template_parameter.h"
#include "Celeste/Ast/Node/template_parameter_name.h"
#include "Celeste/Ast/Node/class_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__class_inherit_base__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__class_inherit_base__.h"
#include "Celeste/Ast/Node/class_name.h"
#include "Celeste/Ast/Node/execution_keyword_permutation.h"
#include "Celeste/Ast/Node/class_body.h"
#include "Celeste/Ast/Node/deamerreserved_star__class_stmt__.h"
#include "Celeste/Ast/Node/class_stmt.h"
#include "Celeste/Ast/Node/class_stmt_member_field_declaration.h"
#include "Celeste/Ast/Node/member_field_name.h"
#include "Celeste/Ast/Node/class_stmt_member_function.h"
#include "Celeste/Ast/Node/class_stmt_member_template_function.h"
#include "Celeste/Ast/Node/template_class_stmt_constructor.h"
#include "Celeste/Ast/Node/class_stmt_constructor.h"
#include "Celeste/Ast/Node/accessibility.h"
#include "Celeste/Ast/Node/class_inherit_base.h"
#include "Celeste/Ast/Node/inherit_base.h"
#include "Celeste/Ast/Node/inherit_base_name.h"
#include "Celeste/Ast/Node/compound_base.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__compound_base_alias__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__compound_base_alias__.h"
#include "Celeste/Ast/Node/compound_base_name.h"
#include "Celeste/Ast/Node/compound_base_alias.h"
#include "Celeste/Ast/Node/attribute_section.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__attribute__.h"
#include "Celeste/Ast/Node/deamerreserved_star__deamerreserved_optional__COMMA____attribute__.h"
#include "Celeste/Ast/Node/attribute.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__attribute_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__attribute_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__attribute_template_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__attribute_template_argument__.h"
#include "Celeste/Ast/Node/attribute_argument.h"
#include "Celeste/Ast/Node/attribute_template_argument.h"
#include "Celeste/Ast/Node/attribute_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__attribute_function_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__attribute_function_argument__.h"
#include "Celeste/Ast/Node/attribute_function_argument.h"
#include "Celeste/Ast/Node/attribute_name.h"
#include "Celeste/Ast/Node/enum_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_star__enumeration__.h"
#include "Celeste/Ast/Node/enum_name.h"
#include "Celeste/Ast/Node/enumeration.h"
#include "Celeste/Ast/Node/enumeration_name.h"
#include "Celeste/Ast/Node/enumeration_value.h"
#include "Celeste/Ast/Node/symbol_reference.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__symbol__.h"
#include "Celeste/Ast/Node/deamerreserved_star__DOT__symbol_secondary__.h"
#include "Celeste/Ast/Node/symbol_secondary.h"
#include "Celeste/Ast/Node/deamerreserved_star__symbol_access__.h"
#include "Celeste/Ast/Node/symbol.h"
#include "Celeste/Ast/Node/symbol_access.h"
#include "Celeste/Ast/Node/auto_deduce_array.h"
#include "Celeste/Ast/Node/symbol_name_secondary.h"
#include "Celeste/Ast/Node/symbol_name.h"
#include "Celeste/Ast/Node/function_access.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__expression__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__expression__.h"
#include "Celeste/Ast/Node/index_access.h"
#include "Celeste/Ast/Node/anonymous_access.h"
#include "Celeste/Ast/Node/type.h"
#include "Celeste/Ast/Node/deamerreserved_star__type_modifier__.h"
#include "Celeste/Ast/Node/type_modifier.h"
#include "Celeste/Ast/Node/value_list.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__full_value__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__full_value__.h"
#include "Celeste/Ast/Node/full_value.h"
#include "Celeste/Ast/Node/value.h"
#include "Celeste/Ast/Node/tuple.h"


#ifndef YY_parse_NERRS
#define YY_parse_NERRS Celestenerrs
#endif //YY_parse_NERRS
#ifndef YY_parse_LLOC
#define YY_parse_LLOC Celestelloc
#endif //YY_parse_LLOC
#define YYERROR_VERBOSE 1

#define YYDEBUG 1

void Celesteerror(const char* s);
int Celestelex();
static ::deamer::external::cpp::ast::Tree* outputTree = nullptr;

extern int Celestelineno;
extern int Celeste_column;

static const std::string* Celeste_input_text = nullptr;

#line 321 "Celeste_parser.tab.c"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "Celeste_parser.tab.h"

/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_SINGLE_COMMENT = 3,             /* SINGLE_COMMENT  */
  YYSYMBOL_CONSTANT = 4,                   /* CONSTANT  */
  YYSYMBOL_FUNCTION = 5,                   /* FUNCTION  */
  YYSYMBOL_CLASS = 6,                      /* CLASS  */
  YYSYMBOL_ENUM = 7,                       /* ENUM  */
  YYSYMBOL_CONDITIONAL = 8,                /* CONDITIONAL  */
  YYSYMBOL_CODE = 9,                       /* CODE  */
  YYSYMBOL_ATTRIBUTETOK = 10,              /* ATTRIBUTETOK  */
  YYSYMBOL_RUNTIME = 11,                   /* RUNTIME  */
  YYSYMBOL_STATIC = 12,                    /* STATIC  */
  YYSYMBOL_AUTO = 13,                      /* AUTO  */
  YYSYMBOL_AUTOTYPE = 14,                  /* AUTOTYPE  */
  YYSYMBOL_TEMPLATE = 15,                  /* TEMPLATE  */
  YYSYMBOL_NAMESPACE = 16,                 /* NAMESPACE  */
  YYSYMBOL_OPERATORNAME = 17,              /* OPERATORNAME  */
  YYSYMBOL_OVERRIDE = 18,                  /* OVERRIDE  */
  YYSYMBOL_VIRTUAL = 19,                   /* VIRTUAL  */
  YYSYMBOL_PURE = 20,                      /* PURE  */
  YYSYMBOL_AS = 21,                        /* AS  */
  YYSYMBOL_IN = 22,                        /* IN  */
  YYSYMBOL_DISPLAY = 23,                   /* DISPLAY  */
  YYSYMBOL_RETURN = 24,                    /* RETURN  */
  YYSYMBOL_FOR = 25,                       /* FOR  */
  YYSYMBOL_IF = 26,                        /* IF  */
  YYSYMBOL_ELSEIF = 27,                    /* ELSEIF  */
  YYSYMBOL_ELSE = 28,                      /* ELSE  */
  YYSYMBOL_INLINE = 29,                    /* INLINE  */
  YYSYMBOL_CONSTRUCTOR = 30,               /* CONSTRUCTOR  */
  YYSYMBOL_FILE_ = 31,                     /* FILE_  */
  YYSYMBOL_PROGRAM_ = 32,                  /* PROGRAM_  */
  YYSYMBOL_IMPORT = 33,                    /* IMPORT  */
  YYSYMBOL_PUBLIC = 34,                    /* PUBLIC  */
  YYSYMBOL_PROTECTED = 35,                 /* PROTECTED  */
  YYSYMBOL_PRIVATE = 36,                   /* PRIVATE  */
  YYSYMBOL_INHERIT = 37,                   /* INHERIT  */
  YYSYMBOL_COMPOSITE = 38,                 /* COMPOSITE  */
  YYSYMBOL_LEFT_BRACKET = 39,              /* LEFT_BRACKET  */
  YYSYMBOL_RIGHT_BRACKET = 40,             /* RIGHT_BRACKET  */
  YYSYMBOL_LEFT_SQUARE_BRACKET = 41,       /* LEFT_SQUARE_BRACKET  */
  YYSYMBOL_RIGHT_SQUARE_BRACKET = 42,      /* RIGHT_SQUARE_BRACKET  */
  YYSYMBOL_LEFT_PARANTHESIS = 43,          /* LEFT_PARANTHESIS  */
  YYSYMBOL_RIGHT_PARANTHESIS = 44,         /* RIGHT_PARANTHESIS  */
  YYSYMBOL_COLON = 45,                     /* COLON  */
  YYSYMBOL_SEMICOLON = 46,                 /* SEMICOLON  */
  YYSYMBOL_COMMA = 47,                     /* COMMA  */
  YYSYMBOL_DOT = 48,                       /* DOT  */
  YYSYMBOL_LTEQ = 49,                      /* LTEQ  */
  YYSYMBOL_GTEQ = 50,                      /* GTEQ  */
  YYSYMBOL_LT = 51,                        /* LT  */
  YYSYMBOL_GT = 52,                        /* GT  */
  YYSYMBOL_PLUSEQ = 53,                    /* PLUSEQ  */
  YYSYMBOL_MINUSEQ = 54,                   /* MINUSEQ  */
  YYSYMBOL_MULTIPLYEQ = 55,                /* MULTIPLYEQ  */
  YYSYMBOL_DIVIDEEQ = 56,                  /* DIVIDEEQ  */
  YYSYMBOL_EQEQ = 57,                      /* EQEQ  */
  YYSYMBOL_EQ = 58,                        /* EQ  */
  YYSYMBOL_NOTEQ = 59,                     /* NOTEQ  */
  YYSYMBOL_NOT = 60,                       /* NOT  */
  YYSYMBOL_PLUSPLUS = 61,                  /* PLUSPLUS  */
  YYSYMBOL_PLUS = 62,                      /* PLUS  */
  YYSYMBOL_MINUSMINUS = 63,                /* MINUSMINUS  */
  YYSYMBOL_MINUS = 64,                     /* MINUS  */
  YYSYMBOL_DIVIDE = 65,                    /* DIVIDE  */
  YYSYMBOL_MULTIPLY = 66,                  /* MULTIPLY  */
  YYSYMBOL_VARNAME = 67,                   /* VARNAME  */
  YYSYMBOL_NUMBER = 68,                    /* NUMBER  */
  YYSYMBOL_DECIMAL = 69,                   /* DECIMAL  */
  YYSYMBOL_TEXT = 70,                      /* TEXT  */
  YYSYMBOL_ESCAPE_CHARS = 71,              /* ESCAPE_CHARS  */
  YYSYMBOL_YYACCEPT = 72,                  /* $accept  */
  YYSYMBOL_program = 73,                   /* program  */
  YYSYMBOL_root_program = 74,              /* root_program  */
  YYSYMBOL_standard_block = 75,            /* standard_block  */
  YYSYMBOL_deamerreserved_star__stmt__ = 76, /* deamerreserved_star__stmt__  */
  YYSYMBOL_stmt = 77,                      /* stmt  */
  YYSYMBOL_import_statement = 78,          /* import_statement  */
  YYSYMBOL_file_import = 79,               /* file_import  */
  YYSYMBOL_mutation_group = 80,            /* mutation_group  */
  YYSYMBOL_deamerreserved_arrow__symbol_reference__ = 81, /* deamerreserved_arrow__symbol_reference__  */
  YYSYMBOL_deamerreserved_star__COMMA__symbol_reference__ = 82, /* deamerreserved_star__COMMA__symbol_reference__  */
  YYSYMBOL_assignment = 83,                /* assignment  */
  YYSYMBOL_assignment_operator = 84,       /* assignment_operator  */
  YYSYMBOL_conditional_if = 85,            /* conditional_if  */
  YYSYMBOL_conditional_else_if = 86,       /* conditional_else_if  */
  YYSYMBOL_conditional_else = 87,          /* conditional_else  */
  YYSYMBOL_conditional_block = 88,         /* conditional_block  */
  YYSYMBOL_template_conditional_function_declaration = 89, /* template_conditional_function_declaration  */
  YYSYMBOL_deamerreserved_arrow__template_parameter__ = 90, /* deamerreserved_arrow__template_parameter__  */
  YYSYMBOL_deamerreserved_star__COMMA__template_parameter__ = 91, /* deamerreserved_star__COMMA__template_parameter__  */
  YYSYMBOL_deamerreserved_arrow__conditional_function_argument__ = 92, /* deamerreserved_arrow__conditional_function_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__conditional_function_argument__ = 93, /* deamerreserved_star__COMMA__conditional_function_argument__  */
  YYSYMBOL_deamerreserved_arrow__function_argument__ = 94, /* deamerreserved_arrow__function_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__function_argument__ = 95, /* deamerreserved_star__COMMA__function_argument__  */
  YYSYMBOL_conditional_function_declaration = 96, /* conditional_function_declaration  */
  YYSYMBOL_template_code_function_declaration = 97, /* template_code_function_declaration  */
  YYSYMBOL_code_function_declaration = 98, /* code_function_declaration  */
  YYSYMBOL_return_statement = 99,          /* return_statement  */
  YYSYMBOL_symbol_increase = 100,          /* symbol_increase  */
  YYSYMBOL_symbol_decrease = 101,          /* symbol_decrease  */
  YYSYMBOL_expression = 102,               /* expression  */
  YYSYMBOL_expression_no_value = 103,      /* expression_no_value  */
  YYSYMBOL_t_expression = 104,             /* t_expression  */
  YYSYMBOL_f_expression = 105,             /* f_expression  */
  YYSYMBOL_display_call = 106,             /* display_call  */
  YYSYMBOL_for_loop = 107,                 /* for_loop  */
  YYSYMBOL_for_iteration_loop = 108,       /* for_iteration_loop  */
  YYSYMBOL_for_each_loop = 109,            /* for_each_loop  */
  YYSYMBOL_for_variable = 110,             /* for_variable  */
  YYSYMBOL_iterator = 111,                 /* iterator  */
  YYSYMBOL_for_block = 112,                /* for_block  */
  YYSYMBOL_namespace_declaration = 113,    /* namespace_declaration  */
  YYSYMBOL_deamerreserved_arrow__namespace_name__ = 114, /* deamerreserved_arrow__namespace_name__  */
  YYSYMBOL_deamerreserved_star__DOT__namespace_name__ = 115, /* deamerreserved_star__DOT__namespace_name__  */
  YYSYMBOL_namespace_block = 116,          /* namespace_block  */
  YYSYMBOL_namespace_name = 117,           /* namespace_name  */
  YYSYMBOL_inline_class_declaration = 118, /* inline_class_declaration  */
  YYSYMBOL_deamerreserved_arrow__inline_class_declaration_composite__ = 119, /* deamerreserved_arrow__inline_class_declaration_composite__  */
  YYSYMBOL_deamerreserved_star__COMMA__inline_class_declaration_composite__ = 120, /* deamerreserved_star__COMMA__inline_class_declaration_composite__  */
  YYSYMBOL_inline_class_declaration_composite = 121, /* inline_class_declaration_composite  */
  YYSYMBOL_deamerreserved_arrow__inline_class_declaration_composite_alias__ = 122, /* deamerreserved_arrow__inline_class_declaration_composite_alias__  */
  YYSYMBOL_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__ = 123, /* deamerreserved_star__COMMA__inline_class_declaration_composite_alias__  */
  YYSYMBOL_inline_class_declaration_composite_alias = 124, /* inline_class_declaration_composite_alias  */
  YYSYMBOL_inline_class_declaration_composite_name = 125, /* inline_class_declaration_composite_name  */
  YYSYMBOL_created_class_name = 126,       /* created_class_name  */
  YYSYMBOL_code_block = 127,               /* code_block  */
  YYSYMBOL_deamerreserved_arrow__code_block_input_argument__ = 128, /* deamerreserved_arrow__code_block_input_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__code_block_input_argument__ = 129, /* deamerreserved_star__COMMA__code_block_input_argument__  */
  YYSYMBOL_code_block_input_argument = 130, /* code_block_input_argument  */
  YYSYMBOL_code_block_argument = 131,      /* code_block_argument  */
  YYSYMBOL_code_block_argument_name = 132, /* code_block_argument_name  */
  YYSYMBOL_code_block_program = 133,       /* code_block_program  */
  YYSYMBOL_variable_declaration = 134,     /* variable_declaration  */
  YYSYMBOL_array_declaration = 135,        /* array_declaration  */
  YYSYMBOL_variable_name = 136,            /* variable_name  */
  YYSYMBOL_template_function_declaration = 137, /* template_function_declaration  */
  YYSYMBOL_function_declaration = 138,     /* function_declaration  */
  YYSYMBOL_trailing_return_type = 139,     /* trailing_return_type  */
  YYSYMBOL_return_type = 140,              /* return_type  */
  YYSYMBOL_conditional_function_argument = 141, /* conditional_function_argument  */
  YYSYMBOL_function_argument = 142,        /* function_argument  */
  YYSYMBOL_function_argument_type = 143,   /* function_argument_type  */
  YYSYMBOL_function_argument_name = 144,   /* function_argument_name  */
  YYSYMBOL_condition_modifier_function_call = 145, /* condition_modifier_function_call  */
  YYSYMBOL_deamerreserved_arrow__condition_modifier_argument__ = 146, /* deamerreserved_arrow__condition_modifier_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__condition_modifier_argument__ = 147, /* deamerreserved_star__COMMA__condition_modifier_argument__  */
  YYSYMBOL_condition_modifier_name = 148,  /* condition_modifier_name  */
  YYSYMBOL_condition_modifier_argument = 149, /* condition_modifier_argument  */
  YYSYMBOL_function_body = 150,            /* function_body  */
  YYSYMBOL_function_name = 151,            /* function_name  */
  YYSYMBOL_template_class_declaration = 152, /* template_class_declaration  */
  YYSYMBOL_template_parameter = 153,       /* template_parameter  */
  YYSYMBOL_template_parameter_name = 154,  /* template_parameter_name  */
  YYSYMBOL_class_declaration = 155,        /* class_declaration  */
  YYSYMBOL_deamerreserved_arrow__class_inherit_base__ = 156, /* deamerreserved_arrow__class_inherit_base__  */
  YYSYMBOL_deamerreserved_star__COMMA__class_inherit_base__ = 157, /* deamerreserved_star__COMMA__class_inherit_base__  */
  YYSYMBOL_class_name = 158,               /* class_name  */
  YYSYMBOL_execution_keyword_permutation = 159, /* execution_keyword_permutation  */
  YYSYMBOL_class_body = 160,               /* class_body  */
  YYSYMBOL_deamerreserved_star__class_stmt__ = 161, /* deamerreserved_star__class_stmt__  */
  YYSYMBOL_class_stmt = 162,               /* class_stmt  */
  YYSYMBOL_class_stmt_member_field_declaration = 163, /* class_stmt_member_field_declaration  */
  YYSYMBOL_member_field_name = 164,        /* member_field_name  */
  YYSYMBOL_class_stmt_member_function = 165, /* class_stmt_member_function  */
  YYSYMBOL_class_stmt_member_template_function = 166, /* class_stmt_member_template_function  */
  YYSYMBOL_template_class_stmt_constructor = 167, /* template_class_stmt_constructor  */
  YYSYMBOL_class_stmt_constructor = 168,   /* class_stmt_constructor  */
  YYSYMBOL_accessibility = 169,            /* accessibility  */
  YYSYMBOL_class_inherit_base = 170,       /* class_inherit_base  */
  YYSYMBOL_inherit_base = 171,             /* inherit_base  */
  YYSYMBOL_inherit_base_name = 172,        /* inherit_base_name  */
  YYSYMBOL_compound_base = 173,            /* compound_base  */
  YYSYMBOL_deamerreserved_arrow__compound_base_alias__ = 174, /* deamerreserved_arrow__compound_base_alias__  */
  YYSYMBOL_deamerreserved_star__COMMA__compound_base_alias__ = 175, /* deamerreserved_star__COMMA__compound_base_alias__  */
  YYSYMBOL_compound_base_name = 176,       /* compound_base_name  */
  YYSYMBOL_compound_base_alias = 177,      /* compound_base_alias  */
  YYSYMBOL_attribute_section = 178,        /* attribute_section  */
  YYSYMBOL_deamerreserved_arrow__attribute__ = 179, /* deamerreserved_arrow__attribute__  */
  YYSYMBOL_deamerreserved_star__deamerreserved_optional__COMMA____attribute__ = 180, /* deamerreserved_star__deamerreserved_optional__COMMA____attribute__  */
  YYSYMBOL_attribute = 181,                /* attribute  */
  YYSYMBOL_deamerreserved_arrow__attribute_argument__ = 182, /* deamerreserved_arrow__attribute_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__attribute_argument__ = 183, /* deamerreserved_star__COMMA__attribute_argument__  */
  YYSYMBOL_deamerreserved_arrow__attribute_template_argument__ = 184, /* deamerreserved_arrow__attribute_template_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__attribute_template_argument__ = 185, /* deamerreserved_star__COMMA__attribute_template_argument__  */
  YYSYMBOL_attribute_argument = 186,       /* attribute_argument  */
  YYSYMBOL_attribute_template_argument = 187, /* attribute_template_argument  */
  YYSYMBOL_attribute_declaration = 188,    /* attribute_declaration  */
  YYSYMBOL_deamerreserved_arrow__attribute_function_argument__ = 189, /* deamerreserved_arrow__attribute_function_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__attribute_function_argument__ = 190, /* deamerreserved_star__COMMA__attribute_function_argument__  */
  YYSYMBOL_attribute_function_argument = 191, /* attribute_function_argument  */
  YYSYMBOL_attribute_name = 192,           /* attribute_name  */
  YYSYMBOL_enum_declaration = 193,         /* enum_declaration  */
  YYSYMBOL_deamerreserved_star__enumeration__ = 194, /* deamerreserved_star__enumeration__  */
  YYSYMBOL_enum_name = 195,                /* enum_name  */
  YYSYMBOL_enumeration = 196,              /* enumeration  */
  YYSYMBOL_enumeration_name = 197,         /* enumeration_name  */
  YYSYMBOL_enumeration_value = 198,        /* enumeration_value  */
  YYSYMBOL_symbol_reference = 199,         /* symbol_reference  */
  YYSYMBOL_deamerreserved_arrow__symbol__ = 200, /* deamerreserved_arrow__symbol__  */
  YYSYMBOL_deamerreserved_star__DOT__symbol_secondary__ = 201, /* deamerreserved_star__DOT__symbol_secondary__  */
  YYSYMBOL_symbol_secondary = 202,         /* symbol_secondary  */
  YYSYMBOL_deamerreserved_star__symbol_access__ = 203, /* deamerreserved_star__symbol_access__  */
  YYSYMBOL_symbol = 204,                   /* symbol  */
  YYSYMBOL_symbol_access = 205,            /* symbol_access  */
  YYSYMBOL_auto_deduce_array = 206,        /* auto_deduce_array  */
  YYSYMBOL_symbol_name_secondary = 207,    /* symbol_name_secondary  */
  YYSYMBOL_symbol_name = 208,              /* symbol_name  */
  YYSYMBOL_function_access = 209,          /* function_access  */
  YYSYMBOL_deamerreserved_arrow__expression__ = 210, /* deamerreserved_arrow__expression__  */
  YYSYMBOL_deamerreserved_star__COMMA__expression__ = 211, /* deamerreserved_star__COMMA__expression__  */
  YYSYMBOL_index_access = 212,             /* index_access  */
  YYSYMBOL_anonymous_access = 213,         /* anonymous_access  */
  YYSYMBOL_type = 214,                     /* type  */
  YYSYMBOL_deamerreserved_star__type_modifier__ = 215, /* deamerreserved_star__type_modifier__  */
  YYSYMBOL_type_modifier = 216,            /* type_modifier  */
  YYSYMBOL_value_list = 217,               /* value_list  */
  YYSYMBOL_deamerreserved_arrow__full_value__ = 218, /* deamerreserved_arrow__full_value__  */
  YYSYMBOL_deamerreserved_star__COMMA__full_value__ = 219, /* deamerreserved_star__COMMA__full_value__  */
  YYSYMBOL_full_value = 220,               /* full_value  */
  YYSYMBOL_value = 221,                    /* value  */
  YYSYMBOL_tuple = 222                     /* tuple  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;


/* Default (constant) value used for initialization for null
   right-hand sides.  Unlike the standard yacc.c template, here we set
   the default value of $$ to a zeroed-out value.  Since the default
   value is undefined, this behavior is technically correct.  */
static YYSTYPE yyval_default;



#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif
#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YYFREE
# define YYFREE free
#endif
#ifndef YYMALLOC
# define YYMALLOC malloc
#endif
#ifndef YYREALLOC
# define YYREALLOC realloc
#endif

#ifdef __cplusplus
  typedef bool yybool;
# define yytrue true
# define yyfalse false
#else
  /* When we move to stdbool, get rid of the various casts to yybool.  */
  typedef signed char yybool;
# define yytrue 1
# define yyfalse 0
#endif

#ifndef YYSETJMP
# include <setjmp.h>
# define YYJMP_BUF jmp_buf
# define YYSETJMP(Env) setjmp (Env)
/* Pacify Clang and ICC.  */
# define YYLONGJMP(Env, Val)                    \
 do {                                           \
   longjmp (Env, Val);                          \
   YY_ASSERT (0);                               \
 } while (yyfalse)
#endif

#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* The _Noreturn keyword of C11.  */
#ifndef _Noreturn
# if (defined __cplusplus \
      && ((201103 <= __cplusplus && !(__GNUC__ == 4 && __GNUC_MINOR__ == 7)) \
          || (defined _MSC_VER && 1900 <= _MSC_VER)))
#  define _Noreturn [[noreturn]]
# elif ((!defined __cplusplus || defined __clang__) \
        && (201112 <= (defined __STDC_VERSION__ ? __STDC_VERSION__ : 0) \
            || (!defined __STRICT_ANSI__ \
                && (4 < __GNUC__ + (7 <= __GNUC_MINOR__) \
                    || (defined __apple_build_version__ \
                        ? 6000000 <= __apple_build_version__ \
                        : 3 < __clang_major__ + (5 <= __clang_minor__))))))
   /* _Noreturn works as-is.  */
# elif (2 < __GNUC__ + (8 <= __GNUC_MINOR__) || defined __clang__ \
        || 0x5110 <= __SUNPRO_C)
#  define _Noreturn __attribute__ ((__noreturn__))
# elif 1200 <= (defined _MSC_VER ? _MSC_VER : 0)
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  103
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   17642

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  72
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  151
/* YYNRULES -- Number of rules.  */
#define YYNRULES  621
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  2207
/* YYMAXRHS -- Maximum number of symbols on right-hand side of rule.  */
#define YYMAXRHS 19
/* YYMAXLEFT -- Maximum number of symbols to the left of a handle
   accessed by $0, $-1, etc., in any rule.  */
#define YYMAXLEFT 0

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   326

/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int8 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71
};

#if YYDEBUG
/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,   712,   712,   723,   733,   743,   749,   759,   765,   771,
     777,   783,   789,   795,   801,   807,   813,   820,   826,   832,
     838,   844,   850,   856,   862,   868,   874,   880,   886,   892,
     898,   904,   910,   921,   931,   941,   954,   966,   979,   991,
    1005,  1015,  1022,  1032,  1042,  1048,  1054,  1060,  1066,  1076,
    1090,  1100,  1114,  1126,  1136,  1152,  1167,  1183,  1198,  1213,
    1227,  1242,  1256,  1272,  1287,  1303,  1318,  1333,  1347,  1362,
    1376,  1389,  1401,  1414,  1426,  1442,  1457,  1473,  1488,  1503,
    1517,  1532,  1546,  1562,  1577,  1593,  1608,  1623,  1637,  1652,
    1666,  1679,  1691,  1704,  1720,  1730,  1737,  1747,  1757,  1764,
    1774,  1784,  1791,  1801,  1815,  1828,  1842,  1855,  1868,  1880,
    1893,  1905,  1919,  1932,  1946,  1959,  1972,  1984,  1997,  2009,
    2020,  2030,  2041,  2055,  2068,  2080,  2093,  2105,  2118,  2130,
    2143,  2159,  2170,  2180,  2191,  2205,  2215,  2225,  2235,  2245,
    2251,  2257,  2267,  2273,  2279,  2285,  2291,  2297,  2303,  2309,
    2315,  2321,  2331,  2339,  2349,  2359,  2365,  2375,  2387,  2397,
    2412,  2422,  2432,  2442,  2454,  2464,  2471,  2481,  2491,  2501,
    2509,  2516,  2524,  2535,  2545,  2552,  2562,  2568,  2576,  2585,
    2597,  2608,  2620,  2635,  2645,  2652,  2662,  2672,  2682,  2692,
    2703,  2713,  2724,  2734,  2746,  2756,  2763,  2773,  2783,  2789,
    2799,  2809,  2819,  2825,  2831,  2837,  2847,  2859,  2869,  2882,
    2895,  2907,  2919,  2932,  2945,  2957,  2969,  2982,  2995,  3007,
    3019,  3032,  3045,  3057,  3069,  3082,  3095,  3107,  3119,  3132,
    3145,  3157,  3169,  3182,  3195,  3207,  3219,  3232,  3245,  3257,
    3269,  3282,  3295,  3307,  3319,  3332,  3345,  3357,  3369,  3382,
    3395,  3407,  3419,  3432,  3445,  3457,  3469,  3482,  3495,  3507,
    3519,  3532,  3545,  3557,  3569,  3582,  3595,  3607,  3619,  3632,
    3645,  3657,  3673,  3684,  3695,  3705,  3715,  3726,  3737,  3747,
    3757,  3768,  3779,  3789,  3799,  3810,  3821,  3831,  3845,  3855,
    3865,  3875,  3881,  3887,  3893,  3903,  3913,  3923,  3934,  3944,
    3955,  3965,  3977,  3987,  3994,  4004,  4014,  4024,  4034,  4044,
    4054,  4064,  4074,  4084,  4094,  4104,  4114,  4124,  4134,  4144,
    4154,  4164,  4174,  4184,  4194,  4208,  4218,  4228,  4236,  4244,
    4252,  4264,  4274,  4281,  4291,  4301,  4307,  4313,  4319,  4325,
    4335,  4345,  4351,  4361,  4367,  4373,  4379,  4385,  4391,  4401,
    4408,  4415,  4422,  4429,  4436,  4443,  4450,  4457,  4463,  4469,
    4475,  4485,  4495,  4501,  4507,  4513,  4519,  4525,  4535,  4541,
    4547,  4553,  4559,  4565,  4575,  4588,  4600,  4613,  4625,  4638,
    4650,  4663,  4675,  4688,  4700,  4713,  4725,  4738,  4750,  4763,
    4775,  4788,  4800,  4813,  4825,  4838,  4850,  4863,  4875,  4888,
    4900,  4913,  4925,  4938,  4950,  4963,  4975,  4988,  5000,  5013,
    5025,  5038,  5050,  5063,  5075,  5088,  5100,  5113,  5125,  5138,
    5150,  5163,  5175,  5188,  5200,  5213,  5225,  5238,  5250,  5263,
    5275,  5288,  5300,  5313,  5325,  5338,  5350,  5363,  5375,  5388,
    5400,  5413,  5425,  5438,  5450,  5463,  5475,  5488,  5500,  5513,
    5525,  5538,  5550,  5563,  5575,  5588,  5600,  5613,  5625,  5638,
    5650,  5663,  5675,  5688,  5700,  5713,  5725,  5738,  5750,  5763,
    5779,  5790,  5800,  5811,  5821,  5832,  5842,  5853,  5863,  5874,
    5884,  5895,  5905,  5916,  5926,  5937,  5947,  5958,  5968,  5979,
    5989,  6000,  6010,  6021,  6035,  6041,  6047,  6057,  6063,  6073,
    6083,  6093,  6099,  6105,  6114,  6122,  6131,  6143,  6153,  6160,
    6170,  6180,  6190,  6200,  6214,  6224,  6231,  6237,  6247,  6253,
    6261,  6269,  6279,  6289,  6299,  6313,  6323,  6330,  6340,  6350,
    6357,  6367,  6377,  6387,  6398,  6409,  6419,  6429,  6440,  6451,
    6461,  6471,  6482,  6493,  6503,  6513,  6524,  6535,  6545,  6559,
    6569,  6576,  6586,  6596,  6606,  6618,  6624,  6634,  6644,  6651,
    6657,  6664,  6674,  6684,  6694,  6704,  6714,  6721,  6731,  6741,
    6747,  6757,  6767,  6773,  6779,  6785,  6795,  6807,  6813,  6819,
    6825,  6831,  6837,  6843,  6849,  6859,  6865,  6871,  6877,  6887,
    6896,  6904,  6913,  6925,  6935,  6942,  6952,  6964,  6976,  6982,
    6988,  6994,  7000,  7010,  7016,  7026,  7032,  7038,  7048,  7055,
    7065,  7075,  7082,  7092,  7102,  7108,  7114,  7120,  7126,  7132,
    7142,  7151
};
#endif

#define YYPACT_NINF (-616)
#define YYTABLE_NINF (-605)

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const yytype_int16 yypact[] =
{
      31,  -616,   283,   222,    18,  -616,   -33,  -616,   279,   783,
    1552,    48,    68,    42,  -616,    89,    86,   104,   269,  -616,
     138,   198,  -616,  -616,  -616,   904,  -616,  -616,  -616,  -616,
    -616,  -616,  -616,  -616,  -616,  -616,  -616,  -616,  -616,  -616,
    -616,  -616,  -616,  -616,  -616,  -616,   189,  -616,  -616,  -616,
    -616,  -616,   248,  2801,  -616,  -616,  1862,  -616,   216,   580,
     279,   266,   122,  -616,  -616,   168,  -616,   226,  -616,  -616,
     252,  -616,  -616,   238,   255,  -616,  1078,   175,   106,  -616,
    -616,  -616,  -616,    23,  2662,  -616,  -616,  -616,  -616,  -616,
     656,   280,   783,   783,   285,  1261,   253,  1806,   127,   293,
     294,   152,   296,  -616,  -616,   330,   122,   279,   279,   304,
     279,   347,   438,   279,  -616,  -616,  -616,  -616,  -616,  -616,
    -616,  -616,   783,   284,  -616,   783,   798,  1139,  -616,   689,
    -616,  -616,  -616,  -616,   311,  -616,   339,   339,  -616,  -616,
     279,   349,   290,   372,  -616,   279,  -616,   173,   270,  1654,
     -33,  -616,  -616,   393,   399,   405,  -616,   206,   316,   408,
    -616,   375,   320,   436,  -616,   783,   783,   106,   106,   106,
     106,   106,   106,   106,   106,   423,  1927,   454,   458,   783,
    -616,   476,  -616,   481,   486,   505,   331,   166,   512,   497,
     528,   527,   279,  -616,    22,  -616,   532,   540,   570,  -616,
     279,  -616,   520,  -616,   552,  -616,    37,   561,  -616,   122,
     279,   279,   569,   567,  -616,  -616,  -616,  -616,  -616,  -616,
    -616,  -616,  -616,   216,   700,   594,  -616,   585,  -616,   592,
     596,   344,  -616,   783,   783,  -616,  -616,   602,   279,   279,
     618,   122,  -616,    81,  -616,   627,   635,   364,   657,   669,
     691,   382,  -616,   675,   255,  -616,  3170,   681,  -616,   692,
     712,   122,  -616,  -616,  -616,  -616,   716,   783,  -616,  2662,
    2662,  -616,  -616,  -616,  -616,  -616,  -616,  -616,  -616,   417,
       7,  -616,   750,   726,   764,   765,  -616,   777,  -616,   779,
     279,  -616,   331,  1321,   957,  3323,   788,   792,   803,   797,
      88,  -616,   811,  -616,    58,  -616,   820,   826,   279,   279,
     398,   834,   840,  -616,  -616,   643,   564,   872,   877,   859,
     279,   279,   614,   891,    61,   783,  -616,  -616,  -616,  -616,
    -616,   783,  -616,  -616,   898,  -616,   893,   915,   690,   906,
     910,   279,   912,   279,   783,   905,  3418,   944,   946,   934,
     122,  -616,  3491,   950,   955,   959,  -616,  -616,   969,  3567,
    3654,   975,   981,  -616,   987,   783,   783,  -616,  3703,  3799,
    1001,  -616,  -616,   331,  -616,  1005,  -616,  1002,   999,  -616,
    -616,  1008,  1013,  1033,  3869,  3963,  1015,  -616,  1032,  1043,
     139,  1050,   279,  1052,  1041,  1003,  -616,  -616,  1093,  -616,
     310,  1075,   184,   184,   467,  -616,  -616,  -616,  1100,  1105,
    1082,    77,  1104,  -616,   510,  -616,  -616,  -616,  -616,  -616,
    -616,    21,   279,  1424,   440,  -616,    57,  1083,  -616,   424,
    1099,   488,   370,   537,   240,   590,   122,  -616,  -616,  -616,
    1122,   279,    90,  -616,  1110,  1506,  1140,  1037,   184,  1175,
    -616,  1138,  -616,  -616,  -616,  1184,  1180,   425,  1125,  1147,
    1188,  -616,   617,  -616,  -616,   783,  -616,  1198,  4036,  4136,
    1210,  1212,  1221,  4181,  4230,  1227,  -616,  1225,  1229,  4275,
    -616,  -616,  1248,  -616,  1271,  1289,  1303,  4311,  -616,  1425,
    1262,   783,  -616,  -616,   783,  -616,  1305,  1291,  1315,  4356,
     279,  1306,  1328,  1336,  1041,  -616,  1344,  -616,  1350,   323,
    1338,   631,    35,   412,  1375,  1381,   240,  1391,  1395,  1166,
    1373,  -616,  -616,  1185,  1376,  -616,  -616,  1380,   539,  1382,
     153,   279,   183,  -616,  1383,   840,  4392,  1388,  -616,   337,
     446,  1387,   122,  -616,  1251,  1403,  1413,   122,   279,   609,
     624,   370,   678,   240,   877,  -616,  -616,  -616,   783,  1252,
    1411,  2735,   762,  1417,   645,   771,   240,   184,  -616,  4437,
    1423,  1431,  1429,  1435,  1433,   651,  1439,  1446,   674,  1264,
    1307,  -616,  -616,  -616,  1427,  1456,  4482,  -616,  -616,  1460,
    1463,  4527,  -616,  -616,  1465,  1470,  1473,  -616,  -616,  1476,
    -616,  1483,  1547,   999,  1013,  -616,  1480,  1494,  1502,  1513,
     279,   279,  1503,  1512,  -616,  -616,  4572,  1521,   867,   948,
    1518,   179,  -616,  -616,   395,  1523,  -616,  -616,  -616,  -616,
    1524,  1522,   701,  1356,  1532,  1531,   720,   491,   495,  1408,
    1533,  1428,  1538,   343,  -616,  -616,   783,  -616,  -616,  1543,
    4617,  4662,  1542,  4707,  1545,  1006,  1540,   279,  1548,   725,
    1475,  1599,   279,   760,   122,   279,  1625,  1554,  1558,   122,
     279,   843,  -616,  1555,  -616,  1025,  1560,   739,  -616,  1568,
    4752,  1571,  1059,  1126,  1569,   122,   279,   896,  1017,   240,
    1578,  4797,  4842,  1584,  4887,  1602,  1603,  1600,  4932,  1606,
    1610,  1608,  1611,  1612,   740,  1620,  1613,   213,  1626,  -616,
    -616,  -616,  1634,  -616,  -616,  1645,  -616,  4977,  5022,  -616,
    -616,  -616,  1642,  -616,  -616,  -616,  -616,  1652,  -616,  1649,
    1664,   279,  -616,  1668,  5067,  5112,  1670,  5157,  1673,  1159,
    -616,  1687,   234,  1667,   639,  1691,   471,   551,  5202,  1696,
    1697,  1694,  1712,  1709,   741,  5247,  1716,  1718,  1721,   184,
    1700,   553,  1720,  1736,  1722,   784,  1672,  1739,  1724,   791,
     634,  -616,  -616,   783,  1022,  -616,  1741,  1744,  5292,  1750,
    5337,  5382,  1740,  -616,  1745,   279,   279,  1749,  1755,  1753,
     810,  1759,  1758,   831,  1762,  2859,  1764,   279,  1163,   279,
    1763,   845,  1699,  1703,   279,  1443,   122,   279,  -616,  5427,
    1767,  1223,  1367,  1765,  -616,  1771,  5472,  5517,  1773,  5562,
    1787,  1368,   279,  1500,   122,   279,   122,   279,  1127,  -616,
    1797,  1798,  5607,  1802,  5652,  5697,  1788,  1811,  5742,  5787,
    1807,  5832,  1814,  1815,  1813,  -616,  1818,  1821,  1824,   783,
    -616,  -616,  -616,  1827,  1829,  -616,  -616,  -616,  -616,  1828,
    -616,  1834,  1837,  5877,  1844,  5922,  5967,  1853,  -616,  -616,
    1855,  1835,  -616,  1727,  1863,  1729,   671,  1868,   684,  1870,
     727,  1874,  6012,  6057,  1882,  6102,  1885,  1887,  1878,  1894,
    6147,  6192,  1903,  1941,   240,   184,   738,  1904,   745,   587,
    6237,  1909,  1918,  1914,  1922,  1920,   847,  6282,  1926,  1930,
    1928,   184,  1857,  1121,  -616,  -616,  -616,  -616,  1934,  -616,
    1942,  1945,  6327,  1757,  1938,  1944,   279,  6372,  1956,  1959,
    1958,  6417,  1964,  1968,  1962,  1796,  1970,  2945,  1965,  3004,
    1976,  1975,   279,   279,  1978,  1980,  1981,   863,  1985,  1984,
     892,  1990, 17167,  1998,   279,  1593,  1996,  6462,  6507,  1999,
    6552,  2003,  1459,  -616,  2007,  2010,  6597,  2012,  6642,  6687,
    2004,  2016, 17201,  2014,   279,  1601,   279,  1651,   122,   279,
    -616,  -616,  2015,  -616,  2022,  2024,  6732,  -616,  2025,  2032,
    6777,  2035,  6822,  6867,  2037,  -616,  -616,  2036,  2039,  -616,
    -616,  -616,  -616,  -616,  2048,  -616,  2050,  2057,  6912,  -616,
    2047,  2040,  2055,   894,  1812,  2061,  2059,   907,  1832,  2065,
    1846,  1856,  2075,  1860,   793,  2076,  -616,  2069,  2084,  6957,
    2086,  7002,  7047,  2077,  -616,  2087,  2089,  7092,  2129,  2132,
     240,  1883,  2095,  1933,   838,  2098,   855,  2099,   939,  2104,
    7137,  7182,  2106,  7227,  2109,  2113,  2112,  2110,  7272,  7317,
    2124,  2160,   240,   184,  -616,  -616,  -616,  -616,  -616,  2126,
    2128,  2136,   911,  1967,  1987,  2125,  2143,  7362,  7407,  2133,
    2146,  7452,  7497,  2149,  1485,  2150,   928,  -616,  2163,  1988,
    2164, 17235,  1997,  2147,  2166,   279,  7542,  2171,  2177,  2178,
    7587,  2184,  2186,  2185,  2001,  2188, 17269,  2191, 17303,  2193,
    -616,  2197,  2200,  7632,  2201,  7677,  7722,  2205,  -616,  -616,
    2206,  -616,  2210,  2215,  7767,  2045,  2218, 17337,  2221, 17371,
    2229,  2230, 17405,  2241,   279,  1685,  -616,  -616,  -616,  2246,
    -616,  -616,  2247,  -616,  2264,  2265,  7812,  -616,  -616,  -616,
    -616,  -616,  2266,  -616,  7857,  2242,  2256,  2271,  2269,  2276,
     932,  7902,  2270,  2285,  2286,  2293,  2290,   949,  2054,  2296,
    2294,   961,  2298,  2295,   965,  2066,  2302,  2299,   986,  2073,
    2267,  2092,  -616,  -616,  2305,  -616,  2308,  2311,  7947,  -616,
    -616,  2312,  2337,  2314,  2316,  1014,  2102,  2319,  2320,  1026,
    2111,  2323,  2131,  2167,  2325,  2173,   868,  2328,  -616,  2333,
    2334,  7992,  2335,  8037,  8082,  2324,  -616,  2336,  2340,  8127,
    2376,  2379,   240,  -616,  8172,  2349,  2350,  2348,  2356,  2373,
    1049,  2381,  2377,  1065,  2183,  -616,  2385,  2387,  8217,  -616,
    2391,  2392,  8262,  8307,  2397,  1539,  1541,  2382,  -616,  1622,
    2393,  1066,  -616,  2404,  2408,  2407,  1087,  2189,  2195,  2405,
    2410,  8352,  8397,  2415,  2417,  8442,  8487,  2420,  1698,  2418,
    1095,  -616,  2425,  2209,  2429, 17439,  -616,  -616,  2431,  -616,
    2432,  2433,  8532,  -616,  -616,  -616,  2434,  1701,  2436,  1113,
    -616,  2435,  2231,  2438, 17473,  2245,  2449, 17507,  2452, 17541,
    2437,  -616,  -616,  -616,  -616,  2462,  -616,  2471,  8577,  8622,
    2478,  8667,  2479,  2481,  2477,  2482,  8712,  8757,  2484,  8802,
    2485,  2488,  2489,  2493,  2494,  1114,  8847,  2498,  2503,  2501,
    8892,  2505,  2509,  2508,  2515,  2512,  1143,  8937,  2518,  2519,
    2517,  2520,  2521,  1172,  2278,  2525,  2522,  1174,  -616,  -616,
    -616,  2533,  -616,  8982,  2535,  2536,  2534,  2546,  2542,  1181,
    9027,  2556,  2557,  2553,  2559,  2558,  1186,  2284,  2562,  2565,
    1196,  2567,  2566,  1207,  2289,  2572,  2574,  1213,  2353,  2577,
    2375,  -616,  -616,  2579,  -616,  2582,  2584,  9072,  -616,  -616,
    2586,  2624,  2591,  9117,  9162,  2593,  9207,  2596,  2600,  2597,
    9252,  2601,  2605,  2602,  2608,  2606,  1235,  -616,  -616,  2613,
    -616,  -616,  2614,  2616,  9297,  9342,  2618,  9387,  2619,  1748,
    9432,  2620,  1760,  1859,  2617,  -616,  9477,  2623,  2626,  2625,
    2629,  2627,  1259,  2631,  2632,  1265,  2386,  -616,  2633,  2637,
    9522,  -616,  2642,  2643,  9567,  9612,  2645,  2017,  2118,  2641,
    -616,  2255,  2647,  1266,  -616,  2646,  -616,  -616,  -616,  2649,
    -616,  9657,  2648,  2287,  2315,  2650,  -616,  2317,  2653,  1275,
    -616,  2652,  2406,  2654,  1279,  -616,  2660,  2395,  2663, 17575,
    -616,  -616,  2664,  2665,  9702,  2667,  9747,  9792,  2670,  -616,
    2675,  2677,  9837,  2680,  9882,  9927,  2671,  9972,  2683,  2684,
    2658,  2685, 10017, 10062,  2690,  2691, 10107, 10152,  2693, 10197,
    2695,  2699,  2686,  2702, 10242, 10287,  2704, 10332,  2706,  2709,
    2705,  2712,  2714,  1287, 10377,  2717,  2724,  2722,  -616,  2713,
   10422, 10467,  2728, 10512,  2729,  2733,  2730,  2738, 10557, 10602,
    2742, 10647,  2743,  2744,  2741,  2747,  2745,  1293, 10692,  2748,
    2749,  2746, 10737,  2753,  2754,  2750,  2757,  2755,  1295, 10782,
    2761,  2762,  2759,  2765,  2770,  1297,  2399,  2776,  2773,  1308,
    -616,  -616,  -616,  2769,  -616,  -616,  2778,  2779, 10827,  2780,
   10872, 10917,  2782,  2783, 10962, 11007,  2786, 11052,  2787,  2788,
    2789,  -616,  -616,  -616,  2791,  2792, 11097,  2797, 11142, 11187,
    2799,  2800, 11232, 11277,  2802, 11322,  2803,  2448,  2805, 11367,
   11412,  2804, 11457,  2807,  2808,  2795, 11502,  2809,  2810,  2806,
    2812,  2813,  1309,  -616,  -616,  2814,  -616,  -616,  2816,  2818,
   11547, 11592,  2820, 11637,  2822,  2454, 11682,  2823,  2480,  2486,
    2821,  -616,  -616,  2827, 11727, 11772,  2836, 11817,  2838,  2487,
   11862,  2841,  2500,  2502,  2837,  -616, 11907,  2843,  2524,  2531,
    2839,  -616,  2564,  2846,  1340,  -616,  2845,  -616,  -616,  2851,
    -616,  2852,  2856, 11952,  -616,  -616,  2862,  -616,  2866,  2867,
   11997,  2868, 12042, 12087,  2870,  -616,  2872,  2875, 12132,  -616,
    2880,  2881, 12177,  2883, 12222, 12267,  2871,  -616,  2884,  2888,
   12312,  2890, 12357, 12402,  2893, 12447,  2895,  2896,  2894,  2897,
   12492, 12537,  2901,  -616,  2902,  2903, 12582,  2904, 12627, 12672,
    2906,  -616,  2907,  2915, 12717,  2918, 12762, 12807,  2920, 12852,
    2922,  2924,  2923,  2928, 12897, 12942,  2930,  2932, 12987, 13032,
    2934, 13077,  2937,  2938,  2939,  2942, 13122, 13167,  2948, 13212,
    2949,  2950,  2940,  2951,  2957,  1361, 13257,  2963,  2964,  2960,
    -616,  -616,  -616,  2966,  -616,  2967,  2970, 13302,  -616,  2971,
    2974, 13347,  2977, 13392, 13437,  2981,  -616,  -616,  2982,  -616,
    2985,  2987, 13482,  -616,  2988,  2990, 13527,  2991, 13572, 13617,
    2993,  -616,  2995,  2997, 13662,  3001, 13707, 13752,  3003,  3006,
   13797, 13842,  3008, 13887,  3009,  3010,  2999,  -616,  -616,  -616,
    3011,  3012, 13932,  3013, 13977, 14022,  3015,  3016, 14067, 14112,
    3019, 14157,  3022,  2575,  -616,  3023,  3026, 14202,  3027, 14247,
   14292,  3029,  3030, 14337, 14382,  3033, 14427,  3034,  2576,  3035,
   14472, 14517,  3037, 14562,  3038,  2578, 14607,  3039,  2604,  2609,
    3018,  -616,  -616,  -616,  -616,  3040,  -616,  -616,  -616,  3041,
    -616,  3042,  3043, 14652,  -616,  -616,  3044,  -616,  -616,  3046,
    -616,  3050,  3051, 14697,  -616,  -616,  3052,  -616,  3054,  3055,
   14742,  3056, 14787, 14832,  3058,  -616,  3060,  3064, 14877,  -616,
    -616,  3065,  -616,  3066,  3067, 14922,  -616,  -616,  3070,  -616,
    3071,  3073, 14967,  3074, 15012, 15057,  3059,  -616,  3075,  3076,
   15102,  -616,  3077,  3078, 15147,  3081, 15192, 15237,  3083,  -616,
    3084,  3085, 15282,  3086, 15327, 15372,  3088, 15417,  3089,  3090,
    3025,  3091, 15462, 15507,  3093,  -616,  -616,  -616,  3097,  -616,
    -616,  3098,  -616,  3099,  3100, 15552,  -616,  -616,  -616,  3101,
    -616,  -616,  3102,  -616,  3103,  3104, 15597,  -616,  -616,  3105,
    -616,  3108,  3109, 15642,  -616,  3110,  3112, 15687,  3113, 15732,
   15777,  3094,  -616,  -616,  3114,  -616,  3115,  3116, 15822,  -616,
    3119,  3120, 15867,  3121, 15912, 15957,  3123,  -616,  -616,  3124,
    -616,  3125,  3126, 16002,  -616,  3128,  3131, 16047,  3132, 16092,
   16137,  3134,  -616,  3135,  3136, 16182,  3137, 16227, 16272,  3141,
    3145, 16317, 16362,  3149, 16407,  3150,  2651,  -616,  -616,  -616,
    -616,  3160,  -616,  -616,  -616,  -616,  3161,  -616,  -616,  -616,
    3162,  -616,  3164,  3165, 16452,  -616,  -616,  3166,  -616,  -616,
    -616,  3167,  -616,  -616,  -616,  3168,  -616,  3174,  3175, 16497,
    -616,  -616,  3177,  -616,  -616,  3179,  -616,  3180,  3183, 16542,
    -616,  -616,  3184,  -616,  3185,  3186, 16587,  3187, 16632, 16677,
    3151,  -616,  3188,  3189, 16722,  -616,  -616,  -616,  -616,  3191,
    -616,  -616,  -616,  -616,  3192,  -616,  -616,  -616,  3193,  -616,
    -616,  3194,  -616,  3195,  3196, 16767,  -616,  -616,  -616,  3198,
    -616,  -616,  3199,  -616,  3201,  3202, 16812,  -616,  -616,  -616,
    3203,  -616,  -616,  3204,  -616,  3205,  3206, 16857,  -616,  -616,
    3210,  -616,  3211,  3212, 16902,  -616,  3213,  3214, 16947,  3215,
   16992, 17037,  3171,  -616,  -616,  -616,  -616,  -616,  3216,  -616,
    -616,  -616,  -616,  -616,  3219,  -616,  -616,  -616,  -616,  3220,
    -616,  -616,  -616,  3221,  -616,  3222,  3223, 17082,  -616,  -616,
    3224,  -616,  -616,  -616,  -616,  -616,  -616,  3225,  -616,  -616,
    -616,  -616,  3226,  -616,  -616,  -616,  -616,  3228,  -616,  -616,
    -616,  3229,  -616,  -616,  3230,  -616,  3232,  3234, 17127,  -616,
    -616,  -616,  -616,  -616,  -616,  3235,  -616,  -616,  -616,  -616,
    -616,  -616,  -616,  -616,  3236,  -616,  -616
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
     339,   606,     0,   588,   336,   605,     0,   587,     0,     0,
     586,     0,     0,     0,   607,     0,     0,     0,     0,    32,
     585,     0,     2,     3,     4,   339,    31,    33,    30,    29,
      26,    27,    28,    24,    25,    22,    23,    21,    19,    20,
      18,    17,   156,   155,    15,    14,     0,    13,     7,     9,
       8,    11,     0,   604,    10,    12,     0,   564,   567,   570,
       0,     0,   604,   588,   586,   604,   585,     0,   308,   337,
       0,   338,   168,     0,   166,   154,   339,   604,     0,   614,
     615,   616,   135,   138,   141,   151,   618,   617,   153,   619,
     604,     0,     0,     0,     0,   339,     0,   339,     0,     0,
       0,     0,    42,     1,     5,   172,   604,     0,     0,     0,
       0,   335,     0,     0,    16,    44,    45,    46,    47,    48,
     136,   137,     0,     0,   565,     0,     0,     0,   571,   570,
     575,   574,   572,   573,   205,   207,   602,   600,   598,   603,
       0,     0,     0,    99,   290,     0,   295,   604,   604,   339,
       0,   164,   201,     0,     0,     0,   613,   138,     0,   196,
     197,   199,     0,   612,   150,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   199,   339,     0,     0,     0,
      53,     0,    34,     0,     0,     0,   517,   518,     0,     0,
       0,     0,     0,    40,     0,   171,   170,   175,   176,   187,
       0,   289,     0,   334,     0,   553,   604,     0,   557,   604,
       0,     0,     0,   203,    43,   579,   584,   583,   578,   580,
     581,   582,   577,   567,   570,     0,   576,     0,   592,     0,
     595,     0,   569,     0,     0,   601,   599,     0,     0,     0,
       0,   604,    97,   294,   296,     0,     0,     0,   102,     0,
       0,     0,   167,     0,   166,   193,   339,     0,   152,     0,
       0,   604,   194,   200,   198,   621,     0,     0,   610,   139,
     140,   144,   145,   146,   147,   148,   149,   143,   142,   160,
       0,   162,     0,     0,     0,     0,    52,     0,   513,     0,
       0,   514,   517,     0,     0,   339,     0,     0,     0,    42,
       0,   186,     0,   169,     0,   173,     0,     0,     0,     0,
     604,     0,   333,   497,   498,   604,   339,     0,    96,     0,
     556,     0,     0,     0,   604,     0,   566,   568,   597,   596,
     591,     0,   593,   590,     0,   204,   609,     0,   604,     0,
       0,     0,    99,     0,     0,   292,   339,     0,     0,     0,
     604,   100,   339,     0,     0,     0,   163,   165,     0,   339,
     339,     0,   196,   620,   612,     0,     0,   157,   339,   339,
       0,    39,   512,   517,   516,     0,   532,     0,   530,   520,
     531,     0,   527,     0,   339,   339,     0,    41,     0,     0,
       0,   185,     0,   175,     0,   604,   499,   500,   501,   510,
     588,     0,   339,   339,     0,   494,   495,   496,   373,   367,
       0,     0,     0,   340,   604,   344,   345,   346,   348,   347,
     343,   604,     0,   604,     0,   331,   604,     0,   552,     0,
     551,     0,   335,     0,   339,   339,   604,    94,   326,   325,
       0,   556,   561,   562,     0,   604,     0,   604,   339,     0,
     202,   595,   589,   608,   206,     0,     0,     0,   604,   604,
       0,    98,     0,   305,   293,     0,   307,     0,   339,   339,
       0,   102,     0,   339,   339,     0,   192,     0,     0,   339,
     195,   611,     0,   161,     0,     0,     0,   339,   515,     0,
       0,     0,   528,   519,     0,   525,     0,     0,     0,   339,
       0,     0,     0,     0,     0,   183,     0,   174,     0,   604,
       0,     0,     0,   604,   369,   363,   339,   371,   365,   604,
       0,   372,   366,   604,     0,   330,   341,     0,     0,     0,
       0,     0,   360,   361,     0,   333,   339,     0,   288,   604,
     604,     0,   604,   549,   604,     0,     0,   604,     0,     0,
       0,   335,     0,   339,    96,   554,   555,   560,     0,   604,
       0,   604,   604,     0,     0,     0,   339,   339,   594,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   604,
       0,   301,   291,   122,     0,     0,   339,   101,   134,     0,
       0,   339,   191,   190,     0,     0,     0,    49,    50,     0,
     524,     0,     0,   530,   527,    38,     0,     0,     0,     0,
       0,     0,     0,   185,   178,   177,   339,     0,   604,   604,
       0,     0,   511,   502,     0,     0,   368,   362,   370,   364,
       0,     0,     0,   604,     0,     0,     0,   604,   604,   604,
       0,   604,     0,   358,   356,   352,     0,   329,   332,     0,
     339,   339,     0,   339,     0,   604,   551,     0,     0,     0,
     604,   604,     0,     0,   604,     0,   604,     0,     0,   604,
       0,     0,    95,   559,   563,   604,     0,     0,   328,     0,
     339,     0,   604,   604,     0,   604,     0,     0,     0,   339,
       0,   339,   339,     0,   339,     0,     0,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   304,   306,
     121,   120,     0,   133,   132,     0,   189,   339,   339,    51,
     523,   522,     0,   529,   526,    37,    36,     0,   182,     0,
       0,     0,   184,     0,   339,   339,     0,   339,     0,   604,
     506,     0,     0,   509,     0,     0,     0,     0,   339,     0,
       0,     0,     0,     0,     0,   339,     0,     0,     0,   339,
       0,     0,     0,     0,     0,     0,   604,     0,     0,     0,
     604,   354,   350,     0,   359,   548,     0,     0,   339,     0,
     339,   339,     0,   550,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   604,     0,     0,     0,     0,
       0,     0,   604,   604,     0,     0,   604,     0,   558,   339,
       0,   604,   604,     0,   327,     0,   339,   339,     0,   339,
       0,   604,     0,     0,   604,     0,   604,     0,     0,   118,
       0,     0,   339,     0,   339,   339,     0,     0,   339,   339,
       0,   339,     0,     0,     0,   300,     0,     0,     0,     0,
     302,   119,   131,     0,     0,   521,    35,   181,   180,     0,
     287,     0,     0,   339,     0,   339,   339,     0,   505,   504,
       0,     0,   507,   604,     0,   604,     0,     0,     0,     0,
       0,     0,   339,   339,     0,   339,     0,     0,     0,     0,
     339,   339,     0,     0,   339,   339,     0,     0,     0,     0,
     339,     0,     0,     0,     0,     0,     0,   339,     0,     0,
       0,   339,     0,   357,   355,   351,   547,   546,     0,   544,
       0,     0,   339,   604,     0,     0,     0,   339,     0,     0,
       0,   339,     0,     0,     0,   604,     0,   604,     0,   604,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   604,     0,     0,     0,     0,   339,   339,     0,
     339,     0,   604,   540,     0,     0,   339,     0,   339,   339,
       0,     0,   604,     0,     0,     0,     0,     0,   604,     0,
     117,   116,     0,   114,     0,     0,   339,   110,     0,     0,
     339,     0,   339,   339,     0,   299,   298,     0,   304,   158,
     159,   179,   286,   285,     0,   283,     0,     0,   339,   503,
     509,     0,     0,     0,   604,     0,     0,     0,   604,     0,
     604,   604,     0,   604,     0,     0,   493,     0,     0,   339,
       0,   339,   339,     0,   477,     0,     0,   339,     0,     0,
     339,   604,     0,   604,     0,     0,     0,     0,     0,     0,
     339,   339,     0,   339,     0,     0,     0,     0,   339,   339,
       0,     0,   339,   339,   353,   349,   545,   543,   542,     0,
       0,     0,     0,   604,   604,     0,     0,   339,   339,     0,
       0,   339,   339,     0,   604,     0,     0,   324,     0,   604,
       0,   604,   604,     0,     0,     0,   339,     0,     0,     0,
     339,     0,     0,     0,   604,     0,   604,     0,   604,     0,
     279,     0,     0,   339,     0,   339,   339,     0,   539,   538,
       0,   536,     0,     0,   339,   604,     0,   604,     0,   604,
       0,     0,   604,     0,     0,     0,   115,   113,   112,     0,
     109,   108,     0,   106,     0,     0,   339,   297,   303,   284,
     282,   281,     0,   508,   339,     0,     0,     0,     0,     0,
       0,   339,     0,     0,     0,     0,     0,     0,   604,     0,
       0,     0,     0,     0,     0,   604,     0,     0,     0,   604,
       0,   604,   492,   491,     0,   489,     0,     0,   339,   476,
     475,     0,     0,     0,     0,     0,   604,     0,     0,     0,
     604,     0,   604,   604,     0,   604,     0,     0,   485,     0,
       0,   339,     0,   339,   339,     0,   473,     0,     0,   339,
       0,     0,   339,   541,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   604,    93,     0,     0,   339,   130,
       0,     0,   339,   339,     0,   604,   604,     0,   323,   604,
       0,     0,   322,     0,     0,     0,     0,   604,   604,     0,
       0,   339,   339,     0,     0,   339,   339,     0,   604,     0,
       0,   320,     0,   604,     0,   604,   278,   277,     0,   275,
       0,     0,   339,   537,   535,   534,     0,   604,     0,     0,
     316,     0,   604,     0,   604,   604,     0,   604,     0,   604,
       0,   111,   107,   105,   104,     0,   280,     0,   339,   339,
       0,   339,     0,     0,     0,     0,   339,   339,     0,   339,
       0,     0,     0,     0,     0,     0,   339,     0,     0,     0,
     339,     0,     0,     0,     0,     0,     0,   339,     0,     0,
       0,     0,     0,     0,   604,     0,     0,     0,   490,   488,
     487,     0,   474,   339,     0,     0,     0,     0,     0,     0,
     339,     0,     0,     0,     0,     0,     0,   604,     0,     0,
       0,     0,     0,     0,   604,     0,     0,     0,   604,     0,
     604,   484,   483,     0,   481,     0,     0,   339,   472,   471,
       0,     0,     0,   339,   339,     0,   339,     0,     0,     0,
     339,     0,     0,     0,     0,     0,     0,    92,    91,     0,
     129,   128,     0,     0,   339,   339,     0,   339,     0,   604,
     339,     0,   604,   604,     0,   321,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   604,    73,     0,     0,
     339,   126,     0,     0,   339,   339,     0,   604,   604,     0,
     319,   604,     0,     0,   318,     0,   276,   274,   273,     0,
     533,   339,     0,   604,   604,     0,   315,   604,     0,     0,
     314,     0,   604,     0,     0,   312,     0,   604,     0,   604,
     103,   469,     0,     0,   339,     0,   339,   339,     0,   405,
       0,     0,   339,     0,   339,   339,     0,   339,     0,     0,
       0,     0,   339,   339,     0,     0,   339,   339,     0,   339,
       0,     0,     0,     0,   339,   339,     0,   339,     0,     0,
       0,     0,     0,     0,   339,     0,     0,     0,   486,     0,
     339,   339,     0,   339,     0,     0,     0,     0,   339,   339,
       0,   339,     0,     0,     0,     0,     0,     0,   339,     0,
       0,     0,   339,     0,     0,     0,     0,     0,     0,   339,
       0,     0,     0,     0,     0,     0,   604,     0,     0,     0,
     482,   480,   479,     0,   470,    89,     0,     0,   339,     0,
     339,   339,     0,     0,   339,   339,     0,   339,     0,     0,
       0,    90,   127,   271,     0,     0,   339,     0,   339,   339,
       0,     0,   339,   339,     0,   339,     0,   604,     0,   339,
     339,     0,   339,     0,     0,     0,   339,     0,     0,     0,
       0,     0,     0,    72,    71,     0,   125,   124,     0,     0,
     339,   339,     0,   339,     0,   604,   339,     0,   604,   604,
       0,   317,   272,     0,   339,   339,     0,   339,     0,   604,
     339,     0,   604,   604,     0,   313,   339,     0,   604,   604,
       0,   311,   604,     0,     0,   310,     0,   468,   467,     0,
     465,     0,     0,   339,   404,   403,     0,   461,     0,     0,
     339,     0,   339,   339,     0,   401,     0,     0,   339,   453,
       0,     0,   339,     0,   339,   339,     0,   397,     0,     0,
     339,     0,   339,   339,     0,   339,     0,     0,     0,     0,
     339,   339,     0,   437,     0,     0,   339,     0,   339,   339,
       0,   389,     0,     0,   339,     0,   339,   339,     0,   339,
       0,     0,     0,     0,   339,   339,     0,     0,   339,   339,
       0,   339,     0,     0,     0,     0,   339,   339,     0,   339,
       0,     0,     0,     0,     0,     0,   339,     0,     0,     0,
     478,    88,    87,     0,    85,     0,     0,   339,    81,     0,
       0,   339,     0,   339,   339,     0,   270,   269,     0,   267,
       0,     0,   339,   263,     0,     0,   339,     0,   339,   339,
       0,    69,     0,     0,   339,     0,   339,   339,     0,     0,
     339,   339,     0,   339,     0,     0,     0,    70,   123,   255,
       0,     0,   339,     0,   339,   339,     0,     0,   339,   339,
       0,   339,     0,   604,   239,     0,     0,   339,     0,   339,
     339,     0,     0,   339,   339,     0,   339,     0,   604,     0,
     339,   339,     0,   339,     0,   604,   339,     0,   604,   604,
       0,   309,   466,   464,   463,     0,   402,   460,   459,     0,
     457,     0,     0,   339,   400,   399,     0,   452,   451,     0,
     449,     0,     0,   339,   396,   395,     0,   445,     0,     0,
     339,     0,   339,   339,     0,   393,     0,     0,   339,   436,
     435,     0,   433,     0,     0,   339,   388,   387,     0,   429,
       0,     0,   339,     0,   339,   339,     0,   385,     0,     0,
     339,   421,     0,     0,   339,     0,   339,   339,     0,   381,
       0,     0,   339,     0,   339,   339,     0,   339,     0,     0,
       0,     0,   339,   339,     0,    86,    84,    83,     0,    80,
      79,     0,    77,     0,     0,   339,   268,   266,   265,     0,
     262,   261,     0,   259,     0,     0,   339,    68,    67,     0,
      65,     0,     0,   339,    61,     0,     0,   339,     0,   339,
     339,     0,   254,   253,     0,   251,     0,     0,   339,   247,
       0,     0,   339,     0,   339,   339,     0,   238,   237,     0,
     235,     0,     0,   339,   231,     0,     0,   339,     0,   339,
     339,     0,   223,     0,     0,   339,     0,   339,   339,     0,
       0,   339,   339,     0,   339,     0,   604,   462,   458,   456,
     455,     0,   398,   450,   448,   447,     0,   394,   444,   443,
       0,   441,     0,     0,   339,   392,   391,     0,   434,   432,
     431,     0,   386,   428,   427,     0,   425,     0,     0,   339,
     384,   383,     0,   420,   419,     0,   417,     0,     0,   339,
     380,   379,     0,   413,     0,     0,   339,     0,   339,   339,
       0,   377,     0,     0,   339,    82,    78,    76,    75,     0,
     264,   260,   258,   257,     0,    66,    64,    63,     0,    60,
      59,     0,    57,     0,     0,   339,   252,   250,   249,     0,
     246,   245,     0,   243,     0,     0,   339,   236,   234,   233,
       0,   230,   229,     0,   227,     0,     0,   339,   222,   221,
       0,   219,     0,     0,   339,   215,     0,     0,   339,     0,
     339,   339,     0,   454,   446,   442,   440,   439,     0,   390,
     430,   426,   424,   423,     0,   382,   418,   416,   415,     0,
     378,   412,   411,     0,   409,     0,     0,   339,   376,   375,
       0,    74,   256,    62,    58,    56,    55,     0,   248,   244,
     242,   241,     0,   232,   228,   226,   225,     0,   220,   218,
     217,     0,   214,   213,     0,   211,     0,     0,   339,   438,
     422,   414,   410,   408,   407,     0,   374,    54,   240,   224,
     216,   212,   210,   209,     0,   406,   208
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
    -616,  -616,  -616,    62,  2668,  -616,  -616,  -616,  -616,  -616,
    2523,  -616,  -616,  -616,  -616,  -616,  -347,  -616,  -307,  2170,
    -524,  2510,  2763,  2470,  -616,  -616,  -616,  -616,  -616,  -616,
     180,     3,  1009,    -7,  -616,  -616,  -616,  -616,  -616,  2580,
     494,  -616,  -616,  2599,  -616,  2716,  -616,  -616,  2585,  2751,
    -616,  2461,  -290,  -387,  -616,  -616,  -616,  2688,  3017,  -616,
    -616,  -243,  -616,  2986,  3172,  -295,  -232,  1450,   -95,  3036,
     -63,  -616,  -616,  -616,  -616,  2081,  -616,  2430,   667,  1097,
    -616,  2727,  -616,  -616,  2958,  2752,  1881,   -49,  -313,  2869,
    -616,  -616,  2758,  -616,  -616,  -616,  -616,  -616,  -423,  -616,
    -616,  -616,  -616,  2274,  -616,  -615,  -302,  -616,  -264,   -80,
    -473,  2689,  -616,  2678,  2796,  2811,  -616,  2847,  2636,  2764,
    3092,  -616,  2855,  -616,  -616,  -616,  -616,  2826,  -616,  3082,
    -616,  -106,  -616,  -616,  -616,  -616,   -89,  -616,  -616,  2849,
    -616,  -616,   -53,  3239,  -616,  -322,    64,  2933,  -260,  -616,
    -616
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,    21,    22,   466,    24,    25,    26,    27,    28,   101,
     193,    29,   122,    30,    31,    32,   181,    33,   317,   437,
     142,   242,   247,   351,    34,    35,    36,    37,    38,    39,
     156,    83,    84,    85,    40,    41,    42,    43,   280,   482,
     282,    44,    73,   151,   253,    74,    45,   196,   305,   197,
     390,   505,   302,   198,    46,    86,   158,   262,   159,   160,
     264,   153,    47,   235,   134,    48,    49,   537,   538,   143,
     248,   145,   243,   345,   707,   850,   462,   708,   467,    67,
      50,   318,   439,    51,   311,   425,   410,    52,   412,   413,
     414,   415,   532,   416,   417,   418,   419,   420,   312,   313,
     396,   314,   742,   872,   398,   623,    53,   185,   291,   292,
     381,   495,   377,   492,   382,   378,    54,   429,   543,   430,
     204,    55,   440,   207,   441,   442,   673,    56,    57,   124,
     223,   128,    58,   129,   130,   224,    59,   131,   231,   332,
     132,   133,    60,    61,    62,   335,   336,   268,   163,    88,
      89
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     113,   535,   144,   450,   112,   506,   743,   364,   421,   187,
     391,   200,   146,   358,   434,   408,   601,   449,   186,   205,
     659,   485,   486,   232,   161,     1,  -339,    71,   374,   365,
     400,    -6,     4,     5,    72,     1,   527,   175,     7,     2,
       3,     1,     4,     5,  -604,  -604,    64,     6,     7,     5,
      14,   528,   366,   201,     8,     9,    10,    11,    12,    13,
      14,     1,    23,   300,    15,     1,    14,    63,    94,     5,
      16,   164,    17,     5,    18,     7,   621,    19,   409,   316,
     157,    95,   106,    64,   464,   165,    14,   166,    66,   301,
      14,    92,   524,   157,   146,   146,   536,   187,    20,   194,
     516,   516,   622,   448,   508,   483,   483,   514,   517,   488,
     534,    93,   421,   609,   321,    63,   477,   478,   327,   408,
      96,   421,   205,     7,   343,    66,     1,    97,   408,   722,
     388,    64,   560,   553,     5,   389,    63,   557,   152,   344,
     599,   162,   801,   421,     7,    98,   566,    76,   558,    77,
     408,    14,    64,   319,   162,   301,   201,   180,   209,   183,
     271,   272,   273,   274,   275,   276,   277,   278,   642,   184,
     515,   518,     1,    66,    79,    80,    81,     1,   144,     1,
       5,   502,   409,  -188,    63,     5,   503,     5,   146,    82,
      91,   409,     7,   111,    66,     4,   190,    14,   103,   191,
      64,   187,    14,   187,    14,   582,   625,   293,   161,   294,
     373,   252,   140,   409,   613,   141,    76,   245,    77,   154,
     246,   740,   155,   729,   730,    17,   741,  -335,  -335,   644,
     645,    63,  -335,    69,   105,    78,   594,  -335,   281,     7,
     796,   646,    66,    79,    80,    81,   622,    64,   679,   111,
     258,     4,   428,   106,   107,   847,  1010,   422,   108,   421,
     848,   411,   146,   109,   123,   689,   408,   433,   165,   147,
     166,   319,   177,   178,     1,    63,   869,   149,    63,   136,
     137,   870,     5,     7,   187,   146,     7,   471,    63,    66,
     215,    64,    63,   216,    64,   148,     7,   146,   674,    14,
       7,   217,   214,   150,    64,   225,   227,   230,    64,   218,
     219,   220,   221,    99,   249,  -335,   100,   250,   152,   176,
     709,    69,   746,   182,   774,  -335,    65,     1,   179,   409,
     760,   762,   188,    66,   239,     5,    66,   240,   189,    63,
      63,     1,   146,   192,   859,   206,    66,     7,     7,     5,
      66,   222,    14,   411,   411,    64,    64,   383,    69,   285,
     259,   422,   616,   260,   265,   411,    14,   266,   531,   233,
     422,   194,   530,   201,   411,   940,   651,   195,   290,    63,
     234,    69,   953,   319,   428,   549,   552,     7,   333,   771,
     772,   334,   422,   238,   146,    64,   411,    66,    66,   565,
     973,   773,     1,  -339,    63,   146,   146,   400,   348,     4,
       5,   349,     7,   401,   337,     7,     1,   402,   403,   241,
      64,   152,   152,    64,     5,   744,   354,    14,   404,   355,
     180,   180,   405,   406,   407,   255,    17,    66,  -342,    17,
     256,    14,   263,   209,   210,   880,   497,   498,   211,   257,
       1,   913,   662,   212,   624,   261,   201,   894,     5,   898,
     319,  -200,    66,   912,  -200,    66,   146,   530,   540,   571,
     146,   541,   572,   376,   380,    14,    63,   308,   309,   428,
      63,   144,   936,   267,     7,   653,   201,   201,     7,   146,
     279,   146,    64,   421,   201,     1,    64,    63,   283,     1,
     408,   876,   284,     5,   671,     7,   146,     5,   422,   201,
     519,   451,   411,    64,     1,  -339,   286,   687,   688,   400,
      14,     4,     5,   287,    14,   401,   146,     7,   288,   402,
     403,   544,  1109,   759,    66,    64,   296,   761,    66,    14,
     404,   152,   547,   548,   405,   406,   407,   289,    63,   180,
    -342,    17,  1130,   295,  1133,    66,     7,   308,   309,   310,
      63,   608,    63,   409,    64,   201,   201,   297,     7,   797,
       7,   298,   431,   432,   804,     4,    64,    66,    64,   303,
     146,   878,   639,   896,   319,   319,   146,   304,   146,   709,
     822,   306,    17,  1040,    17,   315,    63,  1048,   550,   551,
     320,     4,   201,   144,     7,    17,    66,   146,   146,  1062,
     324,   201,    64,   146,   664,   665,   201,  1046,    66,   125,
      66,   126,   201,   127,  1088,   325,  1090,   329,    17,   201,
     201,    17,   201,    63,   328,   421,   330,   421,     1,  1105,
     828,     7,   408,   331,   408,   338,     5,     1,    63,    64,
     421,   308,   309,   445,    66,     5,     7,   408,   580,  1126,
       1,   581,   341,    14,    64,    63,   346,   666,     5,   380,
     421,   376,    14,     7,   380,   619,   911,   408,   620,   347,
      63,    64,   873,   669,   670,    14,   201,   426,     7,   683,
     427,    66,   684,    63,     1,   696,    64,    76,   697,    77,
     154,     7,     5,   155,   350,   409,    66,   409,   352,    64,
     893,   954,  1300,   146,  1018,   356,    78,   319,   700,    14,
     409,   701,   359,    66,    79,    80,    81,  1021,   125,   974,
     126,   976,   127,   360,   455,   353,    63,   456,    66,   125,
     409,   126,   422,   127,     7,   750,   411,    63,   751,   146,
     146,    66,    64,   201,    63,     7,   361,  1024,   201,   201,
     363,  1222,     7,    64,   757,   368,     1,   758,   201,   786,
      64,   201,   787,   201,     5,  1044,   685,   686,  1253,   281,
     281,  1041,   380,   812,   843,   887,   813,   844,   888,   421,
     367,    14,    63,  1272,    66,  1274,   408,   308,   309,   795,
       7,   680,    63,   369,   421,    66,   421,    63,    64,   370,
       7,   408,    66,   408,  1291,     7,  1293,   371,    64,  1296,
     146,   372,   146,    64,    76,   421,    77,   421,   902,   384,
     421,   903,   408,   385,   408,   909,  1179,   408,   910,    76,
     226,    77,   386,    78,   192,  1038,  1039,    63,   806,   807,
      66,    79,    80,    81,   929,     7,   392,   930,    78,   409,
      66,   394,  1061,    64,    63,    66,    79,    80,    81,   395,
     146,     1,     7,   423,   409,   933,   409,    63,   934,     5,
      64,  1200,   146,  1134,   422,     7,   422,   424,   411,   943,
     411,  1055,   944,    64,  1056,   409,    14,   409,  1203,   422,
     409,   824,   825,   411,    -6,    66,   735,  1098,     1,   201,
    1099,  1378,     2,     3,   435,     4,     5,  -604,  -604,   422,
       6,     7,    66,   411,   436,   201,   438,     8,     9,    10,
      11,    12,    13,    14,   447,    66,  1102,    15,  1156,  1103,
     453,  1157,   452,    16,    -6,    17,    -6,    18,    63,   458,
      19,  1163,     1,   459,  1164,  1226,     7,   454,  1227,   241,
       5,   146,  1455,   465,    64,   146,    63,   146,   146,  1206,
     146,    20,  1246,   421,     7,  1247,  1313,    14,   470,  1314,
     408,  1471,    64,   468,  1476,   469,  1478,   737,   146,   473,
     146,  1192,   421,  1321,   474,   421,  1322,   421,    76,   408,
      77,   379,   408,   475,   408,  1328,    66,     1,  1329,  1332,
       1,   476,  1333,  1220,  1221,     5,   479,    78,     5,   472,
     146,   146,   826,   827,    66,    79,    80,    81,   261,     1,
    1339,   201,    14,  1340,   267,    14,   146,     5,   422,   146,
     487,     1,   411,   409,   490,   781,   491,   509,   489,     5,
     510,   146,   493,   422,    14,   422,   499,   411,  1355,   411,
     494,  1356,   409,     1,   809,   409,    14,   409,   914,   915,
    1362,     5,   146,  1363,   422,   496,   422,   500,   411,   422,
     411,   562,     1,   411,   563,   501,     2,     3,    14,     4,
       5,  -604,  -604,  1398,     6,     7,  1399,   504,   817,   304,
      70,     8,     9,    10,    11,    12,    13,    14,   301,  1402,
    1423,    15,  1403,  1424,   512,   146,   513,    16,   521,    17,
      -6,    18,   146,   522,    19,   523,   146,   539,   146,     1,
       1,  1428,   978,   979,  1429,   584,   585,     5,     5,  1448,
     589,   590,  1449,   146,   525,    20,   542,   146,    63,   146,
     146,     1,   146,   559,    14,    14,     7,  1464,  1499,     5,
    1465,  1500,   555,     1,    64,   819,  1666,  1064,  1065,   573,
       1,     5,   574,  1391,   269,   270,    14,   421,     5,   561,
      76,   146,    77,   228,   408,   331,   229,  1511,    14,     1,
    1512,   576,   201,   201,   577,    14,   201,     5,   866,    78,
     308,   309,   939,   649,   146,   146,    66,    79,    80,    81,
     630,   853,   854,   631,    14,   201,  1519,   567,  1526,  1520,
     146,  1527,   422,   569,   570,  1535,   411,     1,  1536,   634,
    1543,   579,   635,  1544,   201,     5,   690,   237,   583,   146,
    1550,   422,   146,  1551,   422,   411,   422,   409,   411,   586,
     411,  1554,    14,   712,  1555,     1,     1,  1561,   715,   350,
    1562,   588,   958,     5,     5,     1,   591,   592,     1,     2,
       3,   593,     4,     5,  -604,  -604,     5,     6,     7,  1589,
      14,    14,  1590,   733,     8,     9,    10,    11,    12,    13,
      14,   146,   595,    14,    15,   657,   675,   307,   658,   676,
      16,    -6,    17,  1614,    18,   602,  1615,    19,   702,  1618,
    1639,   703,  1619,  1640,   146,   596,    63,   776,   777,  1653,
     779,   146,  1654,  1659,     7,   146,  1660,   146,    20,   597,
      63,  1707,    64,   606,  1708,   339,   340,  1731,     7,  1743,
    1732,  1751,  1744,   598,  1752,   605,    64,   815,    76,   705,
      77,   610,  1758,  1805,   706,  1759,  1806,   607,   830,   831,
       1,   833,    76,   375,    77,   837,   201,    78,     5,   201,
     201,     1,     1,   611,    66,    79,    80,    81,   612,     5,
       5,    78,   618,   146,  1849,    14,   614,  1850,    66,    79,
      80,    81,   615,   626,   201,   201,    14,    14,   201,   627,
     752,   861,   862,   753,   864,  1929,   960,   969,  1930,   628,
     201,   201,     1,   629,   201,   881,   633,   637,   444,   201,
       5,   638,   889,   647,   146,   641,   422,   650,     1,  -339,
     411,   655,     1,   400,    63,     4,     5,    14,   460,   401,
       5,     7,     7,   402,   403,   918,   660,   920,   921,    64,
      64,   678,   763,    14,   404,   764,   661,    14,   405,   406,
     407,   682,   691,     1,  -342,    17,    76,   710,    77,   600,
     692,     5,   767,   693,   694,   768,   956,   695,   698,     1,
     308,   309,   952,   964,   965,    78,   967,     5,    14,     1,
     699,    66,    66,    79,    80,    81,   711,     5,  1116,   982,
     713,   984,   985,   714,    14,   988,   989,   716,   991,   717,
       1,  -339,   718,   146,    14,   400,   719,     4,     5,   788,
     725,   401,   789,     7,  1243,   402,   403,   720,   545,   546,
    1004,    64,  1006,  1007,   726,    14,   404,   308,   309,   972,
     405,   406,   407,     1,   727,     1,  -342,    17,   731,  1027,
    1028,     5,  1030,     5,   201,   728,    63,  1035,  1036,   504,
     734,    63,   739,   748,     7,   747,   749,  1049,    14,     7,
      14,   755,    64,    66,  1057,   756,   766,    64,  1415,   770,
    1417,   778,   201,   775,   780,   201,   201,   542,    76,  1069,
      77,   721,   785,    76,  1076,    90,   201,   802,  1080,   201,
     201,   803,   808,     1,   811,   201,   201,    78,   814,   201,
     816,     5,    78,   821,    66,    79,    80,    81,   829,    66,
      79,    80,    81,   832,  1111,  1112,     1,  1114,    14,     1,
     308,   309,  1108,  1120,     5,  1122,  1123,     5,   308,   309,
    1129,   834,   835,   791,   836,   838,   792,   667,   668,   839,
     841,    14,   840,  1139,    14,   846,   842,  1142,     1,  1144,
    1145,  1420,     2,     3,   845,     4,     5,  -604,  -604,   799,
       6,     7,   800,   849,   851,  1152,     1,     8,     9,    10,
      11,    12,    13,    14,     5,   852,   855,    15,   308,   309,
    1132,   857,   856,    16,    -6,    17,  1184,    18,  1186,  1187,
      19,    14,     1,     1,  1191,     1,   858,     1,   860,   863,
       5,     5,   865,     5,   871,     5,   904,  1209,  1210,   905,
    1212,    20,   308,   309,  1299,  1217,  1218,    14,    14,   868,
      14,     1,    14,     1,   875,   882,   883,  1445,   884,     5,
    1461,     5,   895,   945,  1236,  1237,   946,   948,  1240,  1241,
     949,   885,     1,   886,   784,   890,    14,   891,    14,   794,
       5,     1,   899,  1260,     1,   892,   901,  1264,   908,     5,
     201,  1011,     5,  1015,  1012,   900,  1016,    14,   907,   922,
    1278,   916,  1280,  1281,   917,   201,    14,  1599,   923,    14,
     919,  1286,   201,   926,   927,   201,   201,   928,   931,  1603,
       1,  1070,   932,   937,  1071,   935,   957,   942,     5,   962,
       1,   963,   966,  1305,     2,     3,     1,     4,     5,  -604,
    -604,  1307,     6,     7,     5,    14,   968,   986,  1315,     8,
       9,    10,    11,    12,    13,    14,     1,   980,   981,    15,
    1084,    14,   983,  1085,     5,    16,   990,    17,    -6,    18,
       1,   987,    19,   992,   993,  1351,  1158,   994,     5,  1159,
       1,    14,   995,     1,     1,   996,   997,   999,     5,  1000,
    1001,     5,     5,    20,  1002,    14,  1165,  1003,  1383,  1166,
    1385,  1386,   924,   925,  1005,    14,  1390,     1,    14,    14,
    1169,  1392,  1008,  1170,   938,     5,   941,  1009,  1605,  1063,
    1172,   951,   622,  1173,  1176,  1409,  1014,  1177,   114,  1412,
    1413,  1020,    14,  1023,  1026,   115,   116,   117,   118,   971,
     119,  1029,  1033,   120,  1031,   121,  1032,  1193,  1438,  1439,
    1194,     1,  1442,  1443,  1034,     2,     3,     1,     4,     5,
    -604,  -604,  1037,     6,     7,     5,   547,  1043,  1050,  1459,
       8,     9,    10,    11,    12,    13,    14,  1051,  1052,   617,
      15,  1053,    14,   201,  1054,  1058,    16,    -6,    17,  1059,
      18,     1,  1060,    19,  1066,  1482,  1483,  1197,  1485,     5,
    1198,  1073,  1067,  1490,  1491,  1068,  1493,  1074,   202,   652,
     654,     1,     1,  1501,    20,  1077,    14,  1505,  1078,     5,
       5,     1,  1079,  1081,  1513,     1,  1083,  1082,  1089,     5,
    1087,  1228,   681,     5,  1229,  1091,    14,    14,  1092,  1096,
    1529,     1,  1095,  1075,  1100,  1097,    14,  1537,  1101,     5,
      14,  1231,  1249,  1104,  1232,  1250,  1110,  1106,  1113,  1093,
    1094,  1254,  1115,  1124,  1255,  1268,    14,  1118,  1269,     1,
    1119,  1107,  1121,  1127,  1573,  1136,  1631,     5,     1,  1125,
    1576,  1577,  1137,  1579,  1138,  1140,     5,  1583,   736,   738,
       1,  1128,  1141,  1131,    14,  1143,  1146,     1,     5,  1154,
    1147,  1594,  1595,    14,  1597,     5,   849,  1601,  1149,  1287,
    1150,   322,  1288,  1608,   871,    14,     1,  1151,  1323,  1155,
    1161,  1324,    14,  1162,     5,   782,     1,  1625,  1168,  1182,
    1334,  1628,  1629,  1335,     5,     1,  1188,  1341,  1175,  1181,
    1342,    14,     1,     5,  1183,   810,  1185,  1189,  1643,  1190,
       5,    14,   818,   820,   664,     1,  1345,   669,  1196,  1346,
      14,  1202,  1205,     5,  1208,  1211,  1357,    14,  1213,  1358,
    1216,  1669,  1214,  1671,  1672,  1364,  1215,  1633,  1365,  1676,
      14,  1678,  1679,  1219,  1681,   685,  1223,  1224,  1234,  1686,
    1687,     1,  1238,  1690,  1691,  1368,  1693,     1,  1369,     5,
    1225,  1698,  1699,  1235,  1701,     5,  1239,     1,  1242,   867,
    1257,  1709,  1259,     1,  1245,     5,    14,  1714,  1715,     1,
    1717,     5,    14,  1248,  1252,  1722,  1723,     5,  1725,  1258,
    1261,  1371,    14,     1,  1372,  1733,  1262,  1375,    14,  1737,
    1376,     5,  1263,  1265,    14,  1266,  1745,  1404,  1271,  1267,
    1405,  1298,  1275,  1430,  1273,     1,  1431,  1276,    14,  1433,
    1277,  1279,  1434,     5,  1282,  1763,  1283,  1765,  1766,     1,
    1284,  1769,  1770,  1451,  1772,  1285,  1452,     5,  1290,     1,
      14,   959,   961,  1778,  1292,  1780,  1781,     5,  1294,  1784,
    1785,   970,  1787,  1295,    14,  1467,  1792,  1793,  1468,  1795,
    1297,  1308,     1,  1799,    14,   520,  1301,  1302,     1,  1472,
       5,     1,  1473,     1,  1636,  1309,     5,  1810,  1811,     5,
    1813,     5,   529,  1817,  1303,  1304,  1306,    14,  1311,  1316,
    1344,  1825,  1826,    14,  1828,  1310,    14,  1832,    14,     1,
    1312,     1,  1521,  1839,  1317,  1522,  1645,     5,  1545,     5,
    1318,  1546,  1319,  1556,  1320,  1326,  1557,  1330,  1327,  1331,
    1855,  1337,   806,  1338,    14,  1348,    14,  1859,  1349,  1861,
    1862,  1350,  1352,  1353,  1647,  1866,  1650,     1,  1360,  1869,
    1354,  1871,  1872,  1387,  1361,     5,  1367,  1876,  1374,  1878,
    1879,  1380,  1881,  1381,  1382,  1384,  1388,  1886,  1887,     1,
    1389,   824,    14,  1891,   826,  1893,  1894,     5,  1393,  1394,
       1,  1898,  1395,  1900,  1901,  1396,  1903,  1563,     5,     1,
    1564,  1908,  1909,     1,    14,  1912,  1913,     5,  1915,   640,
       1,     5,  1117,  1920,  1921,    14,  1923,  1397,     5,  1567,
    1400,  1401,  1568,  1931,    14,  1407,  1419,  1408,    14,   663,
    1620,  1410,  1411,  1621,  1938,    14,  1414,  1422,  1941,  1662,
    1943,  1944,  1663,  1753,  1425,  1656,  1754,  1426,  1436,  1949,
    1437,  1427,     1,  1952,  1440,  1954,  1955,  1441,     1,  1444,
       5,  1959,  1447,  1961,  1962,  1450,     5,  1965,  1966,  1454,
    1968,  1456,  1457,  1458,  1460,  1466,  1479,    14,  1470,  1974,
    1463,  1976,  1977,    14,     1,  1980,  1981,  1789,  1983,  1475,
       1,     1,     5,  1815,  1989,  1477,  1991,  1992,     5,     5,
    1995,  1996,  1480,  1998,     1,   745,     1,  2003,  2004,    14,
    2006,  1481,     5,  2010,     5,    14,    14,  1484,  1486,  1819,
    1487,  1488,  1489,  1492,  1494,  1821,  1830,  1495,     1,    14,
    2021,    14,  1497,  1496,  1244,     1,     5,  1502,  1498,  1834,
    2026,  1836,  1503,     5,  1506,  1504,   798,  2030,  1507,  2032,
    2033,   805,  1508,    14,  1509,  2037,  1510,  1514,  1515,  1517,
      14,  1516,  2041,  1841,  1524,  1518,  1525,   823,     1,  2045,
    1843,  2047,  2048,  1528,  1530,  1531,     5,  2052,  1532,     1,
       1,  2055,     1,  2057,  2058,  1533,  1534,     5,     5,  2062,
       5,  2064,  2065,    14,  2067,  1538,  1539,  1540,  1541,  2072,
    2073,  1548,  1542,  1846,    14,    14,  1552,    14,     1,  1549,
    1553,  1559,  2079,     1,  1985,  2000,     5,  2008,  1560,  1570,
    1566,     5,  1571,  2084,  1572,   874,  1574,   877,   879,   978,
    2088,  1575,  1578,    14,  2091,  1580,  2093,  2094,    14,  1581,
    1584,  1582,   897,  2012,  1585,  2099,  1586,  1587,  2014,  2102,
    1588,  2104,  2105,  1591,  1592,     1,  1593,  1596,  1598,  1602,
    2110,  1607,  1609,     5,  2113,  1610,  2115,  2116,  1612,  1611,
    1616,  1613,  2120,  1623,  2122,  2123,  1617,  1624,  2126,  2127,
      14,  2129,  1626,  1627,  1630,  1635,  1641,  1644,   955,  1642,
    2131,  1638,  1655,   104,  1649,  1416,  1418,  1652,  1658,  1421,
    1661,  2138,  1684,  1665,  1667,  1668,   975,  1670,   977,  1673,
    1680,   167,   168,   169,   170,  1674,  2144,  1675,  1446,   171,
    1677,   172,  1682,  1683,   672,  1685,  2149,   173,   174,  1688,
    1696,  1689,  1692,  2153,  1694,  2155,  2156,  1462,  1695,     1,
    -339,  2160,  1697,  1700,   400,  1702,     4,     5,  1703,  1704,
     401,  1705,     7,  1713,   402,   403,  1710,  1019,  1706,  1022,
      64,  1025,  2167,  1711,    14,   404,  1712,  1716,  1718,   405,
     406,   407,  1719,  2172,  1720,  -342,    17,  1042,  1721,  1045,
    1047,  1724,  1726,  1727,  2177,  1728,  1729,  1734,  1735,  1730,
    1736,  2181,  1738,  1739,  1740,  2184,  1741,  2186,  2187,  1742,
    1746,  1747,    66,  1748,  1749,     1,  -339,  -339,   110,  1760,
     111,  -339,     4,     5,  1750,  1756,  -339,  1757,  1761,  1762,
    1764,  1767,   387,  1768,  2195,  1771,  1773,  1774,    68,    68,
      14,  1776,  1777,  1775,    75,    87,    87,  1779,  1782,  1798,
    1783,  1786,  1788,  1794,   102,  1791,  1796,  1797,  1800,  1801,
    1802,  1803,   461,   357,  1807,  2204,  1808,  1804,  1809,  1812,
    1135,  1814,  1818,     1,  -339,  1823,   254,  1824,   400,  1600,
       4,     5,  1604,  1606,   401,  1827,     7,  1829,   402,   403,
    1833,  1838,  1840,  1845,    64,  1851,   135,   138,    14,   404,
    1848,  1852,  1853,   405,   406,   407,  1854,  1632,  1634,  -342,
      17,  1637,  1856,    87,    87,  1180,  1857,  1858,  1860,  1863,
    1873,   251,  1864,  1646,  1648,  1865,    87,  1651,    87,    87,
    1867,  1868,  1657,  1870,  1874,  1201,    66,  1204,  1875,  1207,
    1877,   199,  1880,   203,  1882,  1883,   208,  1885,  1884,   135,
    1888,   587,  1889,  1890,  1892,  1895,   484,  1896,    87,     1,
    -339,    87,    87,    87,   400,  1897,     4,     5,  1899,  1902,
     401,  1904,     7,  1905,   402,   403,    68,  1906,  1907,  1910,
      64,   244,  1911,  1914,    14,   404,  1916,  1917,   507,   405,
     406,   407,  1919,  1918,  1926,  -342,    17,  1922,  1924,  1925,
    1927,    87,    87,    87,    87,    87,    87,    87,    87,    87,
      87,  1928,  1932,  1933,  1934,    87,  1935,  1936,     1,  -339,
    1937,  1939,    66,   400,  1940,     4,     5,  1942,   299,   401,
    1945,     7,  1946,   402,   403,  1947,    68,  1948,  1950,    64,
    1951,  1953,  1956,    14,   404,  1957,   203,  1958,   405,   406,
     407,  1960,  1963,  1971,  -342,    17,  1964,  1967,  1969,  1970,
     480,  1972,  1973,  1975,  1978,   393,  1979,  1790,  1982,    87,
      87,  1984,  2016,  1987,    68,    68,  1988,  1990,  1993,  2070,
    1994,    66,  1997,  1999,   732,  2002,  2005,  2007,  2011,  1148,
    2017,  2018,  2019,  2020,  2022,  1816,  2023,  1379,  1820,  1822,
    2024,  2025,  2027,    87,  2028,  2029,  2031,  2034,  2049,  1831,
    2035,   457,  1835,  1837,  2036,  2038,  2039,  2040,  1842,  1844,
    2042,  2043,  1847,  2044,  2046,  2050,  2051,  2053,  2054,    87,
      87,  2056,  2059,   236,  2060,  2061,  2063,  2066,  2068,  2069,
     199,  2071,  2074,  2095,   397,   399,   203,  2075,  2076,  2077,
    2078,  2080,  2081,  2082,  2083,  2085,   443,    68,  2086,  2087,
    2089,    87,  2090,  2092,  2096,  2097,  2098,    87,   511,  2100,
    2101,  2103,  2106,   554,  2107,  2108,  2109,    68,  2111,   463,
      87,  2112,  2114,  2117,     1,  2118,  2119,  2121,     2,     3,
    2124,     4,     5,  -604,  -604,  2125,     6,     7,  2128,  2130,
    2157,    87,    87,     8,     9,    10,    11,    12,    13,    14,
    2133,  2134,  2135,    15,  2136,  2137,  2139,  2140,  2141,    16,
    2188,    17,    -6,    18,  2142,  2143,    19,  2145,   199,  2146,
    2147,   575,   578,  2148,  2150,  2151,  2152,  2154,  2158,  2159,
     203,  2161,  2162,  2163,  2164,  2165,  2166,    20,  2168,  2169,
     203,  2170,  2171,  2173,  2174,  2175,  2176,   203,   533,   203,
    2178,  2179,  2180,  2182,  2183,  2185,  2189,    68,    68,  2190,
    2191,  2192,  2193,  2194,  2196,  2197,  2198,   443,  2199,  2200,
    2201,   203,  2202,  1986,  2203,  2205,  2206,   342,   362,   998,
     446,   723,   632,   526,  1153,   213,   636,   648,  2001,   643,
     604,    87,   783,   724,   564,  2009,   556,   481,  2013,  2015,
     568,   139,   603,   323,     0,   326,   656,     0,     0,     0,
       0,     0,     0,     0,     0,    87,     0,    87,     0,     0,
      87,     0,   677,     0,     0,     0,   199,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,   704,     0,     0,     0,     8,     9,    10,    11,
      12,    13,    14,     0,   203,     0,    15,   533,     0,     0,
       0,     0,    16,     0,    17,    -6,    18,     0,     0,    19,
       0,     0,     0,     0,   203,     0,    68,    68,     0,     0,
       0,     0,     0,     0,    87,     0,     0,   203,     0,     0,
      20,     0,     0,     0,     0,     0,   754,     0,     0,     0,
       0,     0,   765,     0,   769,     0,    87,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     1,   790,   793,     0,     2,     3,    87,     4,
       5,  -604,  -604,     0,     6,     7,   199,   199,     0,     0,
       0,     8,     9,    10,    11,    12,    13,    14,     0,     0,
     203,    15,     0,     0,     0,     0,     0,    16,    -6,    17,
       0,    18,     0,     0,    19,     0,  2132,     0,     0,     0,
       0,     0,    87,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    68,     0,    20,     0,     0,    68,     0,
       0,   203,     0,     0,     0,     1,   203,     0,     0,     2,
       3,     0,     4,     5,  -604,  -604,     0,     6,     7,     0,
       0,     0,   203,     0,     8,     9,    10,    11,    12,    13,
      14,     0,     0,     0,    15,     0,     0,     0,     0,   906,
      16,    -6,    17,     0,    18,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   199,    20,     0,
       0,     0,     0,     0,     0,   947,   950,     0,     0,     0,
     203,     1,   203,   203,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,   203,     0,     0,
       8,     9,    10,    11,    12,    13,    14,     0,     0,    87,
      15,     0,     0,     0,     0,     0,    16,     0,    17,    -6,
      18,    68,    68,    19,     0,     0,     0,     0,     0,     0,
       0,   203,     0,    68,     0,    68,     0,     0,     0,     0,
      68,     0,     0,   203,    20,     0,  1013,     0,  1017,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    68,     0,
       0,   203,     0,   203,     0,     0,     0,     0,     1,     0,
       0,     0,     2,     3,     0,     4,     5,  -604,  -604,     0,
       6,     7,     0,     0,     0,    87,     0,     8,     9,    10,
      11,    12,    13,    14,     0,     0,  1072,    15,     0,     0,
       0,     0,     0,    16,     0,    17,    -6,    18,  1086,     0,
      19,     0,   203,     0,   203,     0,   203,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,    20,   203,     0,   203,   203,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,    15,     0,     0,     0,
       0,     0,    16,    -6,    17,     0,    18,     0,     0,    19,
       0,     0,    68,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   203,     0,   203,     0,     0,    68,    68,
      20,     0,     0,     0,     0,     0,     0,  1160,   203,     0,
      68,  1167,     0,  1171,  1174,     0,  1178,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   203,     0,
      68,     0,    68,     1,  1195,   203,  1199,     2,     3,     0,
       4,     5,  -604,  -604,     0,     6,     7,     0,     0,     0,
       0,     0,     8,     9,    10,    11,    12,    13,    14,     0,
       0,     0,    15,     0,     0,     0,  1230,  1233,    16,    -6,
      17,     0,    18,     0,     0,    19,     0,     0,     0,     0,
     203,     0,  1251,     0,     0,  1256,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,  1270,     0,     0,
     203,     0,   203,     1,   203,     0,     0,     2,     3,     0,
       4,     5,  -604,  -604,     0,     6,     7,     0,  1289,     0,
       0,     0,     8,     9,    10,    11,    12,    13,    14,     0,
       0,     0,    15,     0,     0,     0,     0,     0,    16,     0,
      17,    -6,    18,     0,     0,    19,     0,   203,     0,     0,
       0,    68,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1325,   203,     0,   203,     0,    20,     0,  1336,     0,
       0,     0,  1343,     0,  1347,     0,     0,     0,     0,     0,
       0,     0,     0,   203,     0,   203,     0,     0,   203,  1359,
      68,     0,     0,  1366,     0,  1370,  1373,     1,  1377,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,     0,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,    15,  1406,     0,     0,
       0,     0,    16,     0,    17,    -6,    18,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1432,  1435,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,   203,     0,     0,     0,  1453,     0,     0,     0,
       1,     0,     0,     0,     2,     3,     0,     4,     5,  -604,
    -604,     0,     6,     7,     0,  1469,     0,     0,  1474,     8,
       9,    10,    11,    12,    13,    14,     0,     0,     0,    15,
       0,     0,     0,     0,     0,    16,    -6,    17,     0,    18,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   203,     0,    20,     0,     0,     0,  1523,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     203,     0,     0,   203,     0,   203,     0,     0,     0,     0,
    1547,     0,     0,     0,     0,     0,     0,  1558,     0,     0,
       1,  1565,     0,  1569,     2,     3,     0,     4,     5,  -604,
    -604,     0,     6,     7,     0,     0,     0,     0,     0,     8,
       9,    10,    11,    12,    13,    14,     0,     0,     0,    15,
       0,     0,     0,     0,     0,    16,    -6,    17,     0,    18,
       0,     0,    19,     0,     0,     1,     0,     0,     0,     2,
       3,     0,     4,     5,  -604,  -604,     0,     6,     7,  1622,
       0,     0,     0,    20,     8,     9,    10,    11,    12,    13,
      14,     0,     0,     0,    15,     0,     0,     0,     0,     0,
      16,    -6,    17,     0,    18,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     1,     0,     0,     0,     2,     3,
    1664,     4,     5,  -604,  -604,     0,     6,     7,    20,     0,
       0,     0,     0,     8,     9,    10,    11,    12,    13,    14,
       0,     0,     0,    15,     0,     0,     0,     0,     0,    16,
      -6,    17,     0,    18,     0,     0,    19,     0,     0,     1,
       0,     0,     0,     2,     3,     0,     4,     5,  -604,  -604,
       0,     6,     7,     0,     0,     0,     0,    20,     8,     9,
      10,    11,    12,    13,    14,   203,     0,     0,    15,     0,
       0,     0,     0,     0,    16,     1,    17,    -6,    18,     2,
       3,    19,     4,     5,  -604,  -604,     0,     6,     7,  1755,
       0,     0,     0,     0,     8,     9,    10,    11,    12,    13,
      14,     0,    20,     0,    15,     0,     0,     0,     0,     0,
      16,    -6,    17,     0,    18,     0,     0,    19,     0,     0,
       1,     0,     0,     0,     2,     3,     0,     4,     5,  -604,
    -604,     0,     6,     7,     0,     0,     0,     0,    20,     8,
       9,    10,    11,    12,    13,    14,     0,     0,     0,    15,
       0,     0,     0,     0,     0,    16,     1,    17,    -6,    18,
       2,     3,    19,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,     0,     8,     9,    10,    11,    12,
      13,    14,     0,    20,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     0,     0,    19,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,    20,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,    15,     0,     0,     0,     0,
       0,    16,    -6,    17,     0,    18,     0,     0,    19,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    20,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,    16,    -6,    17,     0,
      18,     1,  -339,    19,     0,     0,   400,     0,     4,     5,
       0,     0,   401,     0,     7,     0,   402,   403,     0,     0,
       0,     0,    64,     0,    20,     0,    14,   404,     0,     0,
       0,   405,   406,   407,     0,     1,  -339,  -342,    17,     0,
     400,     0,     4,     5,     0,     0,   401,     0,     7,     0,
     402,   403,     0,     0,     0,     0,    64,     0,     0,     0,
      14,   404,     0,     0,    66,   405,   406,   407,     0,     1,
    -339,  -342,    17,     0,   400,     0,     4,     5,     0,     0,
     401,     0,     7,     0,   402,   403,     0,     0,     0,     0,
      64,     0,     0,     0,    14,   404,     0,     0,    66,   405,
     406,   407,     0,     1,  -339,  -342,    17,     0,   400,     0,
       4,     5,     0,     0,   401,     0,     7,     0,   402,   403,
       0,     0,     0,     0,    64,     0,     0,     0,    14,   404,
       0,     0,    66,   405,   406,   407,     0,     1,  -339,  -342,
      17,     0,   400,     0,     4,     5,     0,     0,   401,     0,
       7,     0,   402,   403,     0,     0,     0,     0,    64,     0,
       0,     0,    14,   404,     0,     0,    66,   405,   406,   407,
       0,     1,  -339,  -342,    17,     0,   400,     0,     4,     5,
       0,     0,   401,     0,     7,     0,   402,   403,     0,     0,
       0,     0,    64,     0,     0,     0,    14,   404,     0,     0,
      66,   405,   406,   407,     0,     1,  -339,  -342,    17,     0,
     400,     0,     4,     5,     0,     0,   401,     0,     7,     0,
     402,   403,     0,     0,     0,     0,    64,     0,     0,     0,
      14,   404,     0,     0,    66,   405,   406,   407,     0,     1,
    -339,  -342,    17,     0,   400,     0,     4,     5,     0,     0,
     401,     0,     7,     0,   402,   403,     0,     0,     0,     0,
      64,     0,     0,     0,    14,   404,     0,     0,    66,   405,
     406,   407,     0,     1,  -339,  -342,    17,     0,   400,     0,
       4,     5,     0,     0,   401,     0,     7,     0,   402,   403,
       0,     0,     0,     0,    64,     0,     0,     0,    14,   404,
       0,     0,    66,   405,   406,   407,     0,     1,  -339,  -342,
      17,     0,   400,     0,     4,     5,     0,     0,   401,     0,
       7,     0,   402,   403,     0,     0,     0,     0,    64,     0,
       0,     0,    14,   404,     0,     0,    66,   405,   406,   407,
       0,     1,  -339,  -342,    17,     0,   400,     0,     4,     5,
       0,     0,   401,     0,     7,     0,   402,   403,     0,     0,
       0,     0,    64,     0,     0,     0,    14,   404,     0,     0,
      66,   405,   406,   407,     0,     1,  -339,  -342,    17,     0,
     400,     0,     4,     5,     0,     0,   401,     0,     7,     0,
     402,   403,     0,     0,     0,     0,    64,     0,     0,     0,
      14,   404,     0,     0,    66,   405,   406,   407,     0,     1,
    -339,  -342,    17,     0,   400,     0,     4,     5,     0,     0,
     401,     0,     7,     0,   402,   403,     0,     0,     0,     0,
      64,     0,     0,     0,    14,   404,     0,     0,    66,   405,
     406,   407,     0,     0,     0,  -342,    17,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    66
};

static const yytype_int16 yycheck[] =
{
      53,   424,    65,   325,    53,   392,   621,   267,   310,    98,
     300,   106,    65,   256,   316,   310,   489,   324,    98,   108,
     544,   368,   369,   129,    77,     4,     5,     9,   292,    22,
       9,     0,    11,    12,    67,     4,    15,    90,    17,     8,
       9,     4,    11,    12,    13,    14,    25,    16,    17,    12,
      29,    30,    45,   106,    23,    24,    25,    26,    27,    28,
      29,     4,     0,    41,    33,     4,    29,     9,    26,    12,
      39,    78,    41,    12,    43,    17,    41,    46,   310,    42,
      77,    39,     5,    25,   344,    62,    29,    64,    67,    67,
      29,    43,    15,    90,   147,   148,    39,   186,    67,    41,
     402,   403,    67,    42,   394,   365,   366,   402,   403,   373,
     423,    43,   414,   500,   209,     9,   359,   360,   224,   414,
      31,   423,   211,    17,    43,    67,     4,    41,   423,   602,
      42,    25,   445,   435,    12,    47,     9,    47,    76,    58,
     487,    77,   666,   445,    17,    41,   448,    41,    58,    43,
     445,    29,    25,   206,    90,    67,   209,    95,     5,    97,
     167,   168,   169,   170,   171,   172,   173,   174,    15,    42,
     402,   403,     4,    67,    68,    69,    70,     4,   241,     4,
      12,    42,   414,    45,     9,    12,    47,    12,   241,     9,
      10,   423,    17,     9,    67,    11,    44,    29,     0,    47,
      25,   290,    29,   292,    29,   465,   513,    41,   261,    43,
     290,   149,    44,   445,   504,    47,    41,    44,    43,    44,
      47,    42,    47,   610,   611,    41,    47,     5,     6,    46,
      47,     9,    10,    11,    45,    60,   479,    15,   176,    17,
     663,    58,    67,    68,    69,    70,    67,    25,   561,     9,
      44,    11,   315,     5,     6,    42,   871,   310,    10,   561,
      47,   310,   315,    15,    48,   567,   561,   316,    62,    43,
      64,   324,    92,    93,     4,     9,    42,    39,     9,    13,
      14,    47,    12,    17,   373,   338,    17,   350,     9,    67,
       6,    25,     9,     9,    25,    43,    17,   350,   558,    29,
      17,    17,   122,    48,    25,   125,   126,   127,    25,    25,
      26,    27,    28,    44,    44,     5,    47,    47,   256,    39,
     580,    11,   624,    70,   646,    15,    43,     4,    43,   561,
     637,   638,    39,    67,    44,    12,    67,    47,    44,     9,
       9,     4,   395,    47,   731,    41,    67,    17,    17,    12,
      67,    67,    29,   402,   403,    25,    25,   295,    11,   179,
      44,   414,    39,    47,    44,   414,    29,    47,   421,    58,
     423,    41,   421,   426,   423,   798,    39,    47,    47,     9,
      41,    11,   805,   436,   447,   434,   435,    17,    44,    46,
      47,    47,   445,    44,   447,    25,   445,    67,    67,   448,
     823,    58,     4,     5,     9,   458,   459,     9,    44,    11,
      12,    47,    17,    15,   234,    17,     4,    19,    20,    47,
      25,   359,   360,    25,    12,    30,    44,    29,    30,    47,
     368,   369,    34,    35,    36,    42,    41,    67,    40,    41,
      41,    29,    67,     5,     6,   747,   384,   385,    10,    44,
       4,   773,   547,    15,    42,    47,   509,   759,    12,   761,
     513,    44,    67,   770,    47,    67,   519,   516,    44,    44,
     523,    47,    47,   293,   294,    29,     9,    37,    38,   542,
       9,   544,   795,    47,    17,    39,   539,   540,    17,   542,
      67,   544,    25,   795,   547,     4,    25,     9,    44,     4,
     795,    30,    44,    12,   553,    17,   559,    12,   561,   562,
      43,   331,   561,    25,     4,     5,    40,   566,   567,     9,
      29,    11,    12,    42,    29,    15,   579,    17,    42,    19,
      20,    43,   955,    42,    67,    25,    39,    42,    67,    29,
      30,   479,     5,     6,    34,    35,    36,    42,     9,   487,
      40,    41,   975,    41,   977,    67,    17,    37,    38,    39,
       9,   499,     9,   795,    25,   618,   619,    39,    17,   664,
      17,    44,     8,     9,   669,    11,    25,    67,    25,    47,
     633,    30,    43,    30,   637,   638,   639,    47,   641,   849,
     685,    21,    41,   895,    41,    43,     9,   899,     8,     9,
      39,    11,   655,   666,    17,    41,    67,   660,   661,   911,
      41,   664,    25,   666,     5,     6,   669,    30,    67,    39,
      67,    41,   675,    43,   937,    58,   939,    42,    41,   682,
     683,    41,   685,     9,    40,   937,    44,   939,     4,   952,
     689,    17,   937,    47,   939,    43,    12,     4,     9,    25,
     952,    37,    38,    39,    67,    12,    17,   952,    41,   972,
       4,    44,    44,    29,    25,     9,    39,    43,    12,   489,
     972,   491,    29,    17,   494,    44,    42,   972,    47,    44,
       9,    25,    43,     5,     6,    29,   739,    44,    17,    44,
      47,    67,    47,     9,     4,    44,    25,    41,    47,    43,
      44,    17,    12,    47,    47,   937,    67,   939,    39,    25,
     759,   806,  1135,   766,    43,    40,    60,   770,    44,    29,
     952,    47,    41,    67,    68,    69,    70,    43,    39,   824,
      41,   826,    43,    41,    44,    44,     9,    47,    67,    39,
     972,    41,   795,    43,    17,    44,   795,     9,    47,   802,
     803,    67,    25,   806,     9,    17,    44,    30,   811,   812,
      44,  1063,    17,    25,    44,    39,     4,    47,   821,    44,
      25,   824,    47,   826,    12,    30,     5,     6,  1091,   717,
     718,    43,   602,    44,    44,    44,    47,    47,    47,  1091,
      40,    29,     9,  1106,    67,  1108,  1091,    37,    38,    39,
      17,    39,     9,    39,  1106,    67,  1108,     9,    25,    44,
      17,  1106,    67,  1108,  1127,    17,  1129,    40,    25,  1132,
     873,    42,   875,    25,    41,  1127,    43,  1129,    44,    41,
    1132,    47,  1127,    41,  1129,    44,    43,  1132,    47,    41,
      42,    43,    39,    60,    47,   894,   895,     9,     5,     6,
      67,    68,    69,    70,    44,    17,    45,    47,    60,  1091,
      67,    41,   911,    25,     9,    67,    68,    69,    70,    43,
     923,     4,    17,    39,  1106,    44,  1108,     9,    47,    12,
      25,    43,   935,   978,   937,    17,   939,    47,   937,    44,
     939,    44,    47,    25,    47,  1127,    29,  1129,    43,   952,
    1132,     5,     6,   952,     0,    67,    39,    44,     4,   962,
      47,    43,     8,     9,    42,    11,    12,    13,    14,   972,
      16,    17,    67,   972,    47,   978,    67,    23,    24,    25,
      26,    27,    28,    29,    43,    67,    44,    33,    44,    47,
      47,    47,    44,    39,    40,    41,    42,    43,     9,    43,
      46,    44,     4,    43,    47,    44,    17,    42,    47,    47,
      12,  1014,  1275,    58,    25,  1018,     9,  1020,  1021,    30,
    1023,    67,    44,  1275,    17,    47,    44,    29,    44,    47,
    1275,  1294,    25,    39,  1297,    39,  1299,    39,  1041,    39,
    1043,  1040,  1294,    44,    39,  1297,    47,  1299,    41,  1294,
      43,    44,  1297,    44,  1299,    44,    67,     4,    47,    44,
       4,    42,    47,  1062,  1063,    12,    41,    60,    12,   352,
    1073,  1074,     5,     6,    67,    68,    69,    70,    47,     4,
      44,  1084,    29,    47,    47,    29,  1089,    12,  1091,  1092,
      39,     4,  1091,  1275,    42,    39,    47,    44,    43,    12,
      47,  1104,    44,  1106,    29,  1108,    41,  1106,    44,  1108,
      47,    47,  1294,     4,    39,  1297,    29,  1299,    46,    47,
      44,    12,  1125,    47,  1127,    42,  1129,    45,  1127,  1132,
    1129,    44,     4,  1132,    47,    42,     8,     9,    29,    11,
      12,    13,    14,    44,    16,    17,    47,    47,    39,    47,
       3,    23,    24,    25,    26,    27,    28,    29,    67,    44,
      44,    33,    47,    47,    21,  1168,    41,    39,    18,    41,
      42,    43,  1175,    18,    46,    43,  1179,    44,  1181,     4,
       4,    44,     5,     6,    47,   468,   469,    12,    12,    44,
     473,   474,    47,  1196,    40,    67,    47,  1200,     9,  1202,
    1203,     4,  1205,    43,    29,    29,    17,    44,    44,    12,
      47,    47,    40,     4,    25,    39,  1479,    46,    47,    44,
       4,    12,    47,  1222,   165,   166,    29,  1479,    12,    39,
      41,  1234,    43,    44,  1479,    47,    47,    44,    29,     4,
      47,    44,  1245,  1246,    47,    29,  1249,    12,    39,    60,
      37,    38,    39,   536,  1257,  1258,    67,    68,    69,    70,
      44,   717,   718,    47,    29,  1268,    44,    42,    44,    47,
    1273,    47,  1275,    39,    44,    44,  1275,     4,    47,    44,
      44,    43,    47,    47,  1287,    12,   569,   140,    40,  1292,
      44,  1294,  1295,    47,  1297,  1294,  1299,  1479,  1297,    39,
    1299,    44,    29,   586,    47,     4,     4,    44,   591,    47,
      47,    40,    39,    12,    12,     4,    39,    42,     4,     8,
       9,    42,    11,    12,    13,    14,    12,    16,    17,    44,
      29,    29,    47,   616,    23,    24,    25,    26,    27,    28,
      29,  1344,    44,    29,    33,    44,    44,   200,    47,    47,
      39,    40,    41,    44,    43,    43,    47,    46,    44,    44,
      44,    47,    47,    47,  1367,    44,     9,   650,   651,    44,
     653,  1374,    47,    44,    17,  1378,    47,  1380,    67,    40,
       9,    44,    25,    42,    47,   238,   239,    44,    17,    44,
      47,    44,    47,    40,    47,    40,    25,   680,    41,    42,
      43,    45,    44,    44,    47,    47,    47,    42,   691,   692,
       4,   694,    41,    42,    43,   698,  1419,    60,    12,  1422,
    1423,     4,     4,    45,    67,    68,    69,    70,    42,    12,
      12,    60,    44,  1436,    44,    29,    42,    47,    67,    68,
      69,    70,    42,    18,  1447,  1448,    29,    29,  1451,    18,
      44,   734,   735,    47,   737,    44,    39,    39,    47,    18,
    1463,  1464,     4,    18,  1467,   748,    43,    41,   321,  1472,
      12,    41,   755,    40,  1477,    43,  1479,    39,     4,     5,
    1479,    44,     4,     9,     9,    11,    12,    29,   341,    15,
      12,    17,    17,    19,    20,   778,    43,   780,   781,    25,
      25,    40,    44,    29,    30,    47,    43,    29,    34,    35,
      36,    44,    39,     4,    40,    41,    41,    40,    43,    44,
      39,    12,    44,    44,    39,    47,   809,    44,    39,     4,
      37,    38,    39,   816,   817,    60,   819,    12,    29,     4,
      44,    67,    67,    68,    69,    70,    40,    12,    39,   832,
      40,   834,   835,    40,    29,   838,   839,    42,   841,    39,
       4,     5,    39,  1566,    29,     9,    40,    11,    12,    44,
      40,    15,    47,    17,    39,    19,    20,    44,   431,   432,
     863,    25,   865,   866,    40,    29,    30,    37,    38,    39,
      34,    35,    36,     4,    42,     4,    40,    41,    45,   882,
     883,    12,   885,    12,  1607,    42,     9,   890,   891,    47,
      39,     9,    44,    39,    17,    42,    44,   900,    29,    17,
      29,    39,    25,    67,   907,    44,    43,    25,    39,    41,
      39,    39,  1635,    40,    39,  1638,  1639,    47,    41,   922,
      43,    44,    44,    41,   927,    43,  1649,    43,   931,  1652,
    1653,    43,    47,     4,    44,  1658,  1659,    60,    40,  1662,
      39,    12,    60,    44,    67,    68,    69,    70,    40,    67,
      68,    69,    70,    39,   957,   958,     4,   960,    29,     4,
      37,    38,    39,   966,    12,   968,   969,    12,    37,    38,
      39,    39,    39,    44,    44,    39,    47,   550,   551,    39,
      39,    29,    44,   986,    29,    42,    44,   990,     4,   992,
     993,    39,     8,     9,    44,    11,    12,    13,    14,    44,
      16,    17,    47,    47,    40,  1008,     4,    23,    24,    25,
      26,    27,    28,    29,    12,    40,    44,    33,    37,    38,
      39,    42,    40,    39,    40,    41,  1029,    43,  1031,  1032,
      46,    29,     4,     4,  1037,     4,    42,     4,    40,    39,
      12,    12,    39,    12,    47,    12,    44,  1050,  1051,    47,
    1053,    67,    37,    38,    39,  1058,  1059,    29,    29,    42,
      29,     4,    29,     4,    43,    39,    39,    39,    44,    12,
      39,    12,    42,    44,  1077,  1078,    47,    44,  1081,  1082,
      47,    39,     4,    44,   657,    39,    29,    39,    29,   662,
      12,     4,    42,  1096,     4,    44,    44,  1100,    44,    12,
    1823,    44,    12,    44,    47,    39,    47,    29,    39,    39,
    1113,    40,  1115,  1116,    40,  1838,    29,    39,    43,    29,
      40,  1124,  1845,    44,    39,  1848,  1849,    44,    39,    39,
       4,    44,    44,    39,    47,    43,    39,    44,    12,    44,
       4,    40,    39,  1146,     8,     9,     4,    11,    12,    13,
      14,  1154,    16,    17,    12,    29,    39,    39,  1161,    23,
      24,    25,    26,    27,    28,    29,     4,    40,    40,    33,
      44,    29,    40,    47,    12,    39,    39,    41,    42,    43,
       4,    40,    46,    39,    39,  1188,    44,    44,    12,    47,
       4,    29,    44,     4,     4,    44,    42,    40,    12,    40,
      42,    12,    12,    67,    40,    29,    44,    40,  1211,    47,
    1213,  1214,   785,   786,    40,    29,  1219,     4,    29,    29,
      44,  1224,    39,    47,   797,    12,   799,    42,    39,    42,
      44,   804,    67,    47,    44,  1238,    43,    47,    46,  1242,
    1243,    43,    29,    43,    40,    53,    54,    55,    56,   822,
      58,    39,    44,    61,    39,    63,    39,    44,  1261,  1262,
      47,     4,  1265,  1266,    40,     8,     9,     4,    11,    12,
      13,    14,    39,    16,    17,    12,     5,    43,    39,  1282,
      23,    24,    25,    26,    27,    28,    29,    39,    44,   509,
      33,    39,    29,  2016,    44,    39,    39,    40,    41,    39,
      43,     4,    44,    46,    40,  1308,  1309,    44,  1311,    12,
      47,    43,    40,  1316,  1317,    40,  1319,    43,   107,   539,
     540,     4,     4,  1326,    67,    39,    29,  1330,    39,    12,
      12,     4,    44,    39,  1337,     4,    44,    39,    43,    12,
      40,    44,   562,    12,    47,    39,    29,    29,    43,    39,
    1353,     4,    44,   926,    39,    44,    29,  1360,    44,    12,
      29,    44,    44,    43,    47,    47,    40,    39,    39,   942,
     943,    44,    39,    39,    47,    44,    29,    40,    47,     4,
      40,   954,    40,    39,  1387,    40,    39,    12,     4,    43,
    1393,  1394,    40,  1396,    40,    40,    12,  1400,   618,   619,
       4,   974,    40,   976,    29,    40,    39,     4,    12,    39,
      44,  1414,  1415,    29,  1417,    12,    47,  1420,    40,    44,
      40,   210,    47,  1426,    47,    29,     4,    40,    44,    44,
      39,    47,    29,    44,    12,   655,     4,  1440,    43,    40,
      44,  1444,  1445,    47,    12,     4,    39,    44,    43,    43,
      47,    29,     4,    12,    40,   675,    40,    40,  1461,    40,
      12,    29,   682,   683,     5,     4,    44,     5,    43,    47,
      29,    43,    43,    12,    40,    39,    44,    29,    39,    47,
      40,  1484,    39,  1486,  1487,    44,    44,    39,    47,  1492,
      29,  1494,  1495,    39,  1497,     5,    40,    39,    43,  1502,
    1503,     4,    39,  1506,  1507,    44,  1509,     4,    47,    12,
      44,  1514,  1515,    40,  1517,    12,    40,     4,    39,   739,
      43,  1524,  1095,     4,    44,    12,    29,  1530,  1531,     4,
    1533,    12,    29,    40,    40,  1538,  1539,    12,  1541,    43,
      39,    44,    29,     4,    47,  1548,    39,    44,    29,  1552,
      47,    12,    44,    39,    29,    39,  1559,    44,    40,    44,
      47,  1134,    39,    44,    43,     4,    47,    40,    29,    44,
      40,    40,    47,    12,    39,  1578,    40,  1580,  1581,     4,
      40,  1584,  1585,    44,  1587,    40,    47,    12,    40,     4,
      29,   811,   812,  1596,    43,  1598,  1599,    12,    39,  1602,
    1603,   821,  1605,    43,    29,    44,  1609,  1610,    47,  1612,
      39,    39,     4,  1616,    29,   404,    40,    40,     4,    44,
      12,     4,    47,     4,    39,    39,    12,  1630,  1631,    12,
    1633,    12,   421,  1636,    40,    40,    40,    29,    39,    39,
      43,  1644,  1645,    29,  1647,    44,    29,  1650,    29,     4,
      44,     4,    44,  1656,    39,    47,    39,    12,    44,    12,
      44,    47,    39,    44,    44,    39,    47,    39,    44,    44,
    1673,    39,     5,    44,    29,    40,    29,  1680,    40,  1682,
    1683,    40,    40,    39,    39,  1688,    39,     4,    39,  1692,
      44,  1694,  1695,    39,    44,    12,    43,  1700,    43,  1702,
    1703,    43,  1705,    40,    40,    40,    40,  1710,  1711,     4,
      40,     5,    29,  1716,     5,  1718,  1719,    12,    39,    39,
       4,  1724,    44,  1726,  1727,    39,  1729,    44,    12,     4,
      47,  1734,  1735,     4,    29,  1738,  1739,    12,  1741,   528,
       4,    12,   962,  1746,  1747,    29,  1749,    44,    12,    44,
      39,    44,    47,  1756,    29,    40,    44,    40,    29,   548,
      44,    40,    40,    47,  1767,    29,    39,    44,  1771,    44,
    1773,  1774,    47,    44,    40,    39,    47,    39,    43,  1782,
      40,    44,     4,  1786,    39,  1788,  1789,    40,     4,    39,
      12,  1794,    44,  1796,  1797,    40,    12,  1800,  1801,    40,
    1803,    40,    40,    40,    40,    40,    39,    29,    40,  1812,
      44,  1814,  1815,    29,     4,  1818,  1819,    39,  1821,    40,
       4,     4,    12,    39,  1827,    43,  1829,  1830,    12,    12,
    1833,  1834,    40,  1836,     4,   624,     4,  1840,  1841,    29,
    1843,    40,    12,  1846,    12,    29,    29,    39,    39,    39,
      39,    44,    40,    39,    39,    39,    39,    39,     4,    29,
    1863,    29,    39,    44,  1084,     4,    12,    39,    44,    39,
    1873,    39,    39,    12,    39,    44,   665,  1880,    39,  1882,
    1883,   670,    44,    29,    39,  1888,    44,    39,    39,    39,
      29,    44,  1895,    39,    39,    44,    44,   686,     4,  1902,
      39,  1904,  1905,    40,    39,    39,    12,  1910,    44,     4,
       4,  1914,     4,  1916,  1917,    39,    44,    12,    12,  1922,
      12,  1924,  1925,    29,  1927,    39,    39,    44,    39,  1932,
    1933,    39,    44,    39,    29,    29,    39,    29,     4,    44,
      44,    39,  1945,     4,    39,    39,    12,    39,    44,    40,
      43,    12,    40,  1956,    40,   744,    40,   746,   747,     5,
    1963,    40,    39,    29,  1967,    39,  1969,  1970,    29,    39,
      39,    44,   761,    39,    39,  1978,    44,    39,    39,  1982,
      44,  1984,  1985,    40,    40,     4,    40,    39,    39,    39,
    1993,    44,    39,    12,  1997,    39,  1999,  2000,    39,    44,
      39,    44,  2005,    40,  2007,  2008,    44,    40,  2011,  2012,
      29,  2014,    40,    40,    39,    44,    40,    39,   807,    40,
      39,    44,    40,    25,    44,  1245,  1246,    44,    44,  1249,
      40,  2034,    44,    40,    40,    40,   825,    40,   827,    39,
      39,    49,    50,    51,    52,    40,  2049,    40,  1268,    57,
      40,    59,    39,    39,   554,    40,  2059,    65,    66,    39,
      44,    40,    39,  2066,    39,  2068,  2069,  1287,    39,     4,
       5,  2074,    40,    39,     9,    39,    11,    12,    39,    44,
      15,    39,    17,    40,    19,    20,    39,   876,    44,   878,
      25,   880,  2095,    39,    29,    30,    44,    39,    39,    34,
      35,    36,    39,  2106,    44,    40,    41,   896,    40,   898,
     899,    39,    39,    39,  2117,    44,    39,    39,    39,    44,
      44,  2124,    39,    39,    44,  2128,    39,  2130,  2131,    44,
      39,    39,    67,    44,    39,     4,     5,     6,     7,    40,
       9,    10,    11,    12,    44,    39,    15,    44,    40,    40,
      40,    39,   299,    40,  2157,    39,    39,    39,     2,     3,
      29,    40,    40,    44,     8,     9,    10,    40,    39,    44,
      40,    39,    39,    39,    18,    40,    39,    39,    39,    39,
      44,    39,   342,   254,    40,  2188,    40,    44,    40,    39,
     979,    39,    39,     4,     5,    44,   150,    40,     9,  1419,
      11,    12,  1422,  1423,    15,    39,    17,    39,    19,    20,
      39,    44,    39,    44,    25,    40,    60,    61,    29,    30,
      44,    40,    40,    34,    35,    36,    40,  1447,  1448,    40,
      41,  1451,    40,    77,    78,  1024,    40,    40,    40,    39,
      39,   148,    40,  1463,  1464,    40,    90,  1467,    92,    93,
      40,    40,  1472,    40,    40,  1044,    67,  1046,    40,  1048,
      40,   105,    39,   107,    39,    39,   110,    40,    44,   113,
      39,   471,    40,    40,    40,    39,   366,    40,   122,     4,
       5,   125,   126,   127,     9,    40,    11,    12,    40,    39,
      15,    39,    17,    39,    19,    20,   140,    44,    40,    39,
      25,   145,    40,    39,    29,    30,    39,    39,   393,    34,
      35,    36,    40,    44,    44,    40,    41,    39,    39,    39,
      39,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,    44,    39,    39,    44,   179,    40,    40,     4,     5,
      40,    40,    67,     9,    40,    11,    12,    40,   192,    15,
      39,    17,    40,    19,    20,    40,   200,    40,    40,    25,
      40,    40,    39,    29,    30,    40,   210,    40,    34,    35,
      36,    40,    39,    44,    40,    41,    40,    39,    39,    39,
     362,    40,    40,    40,    39,   304,    40,  1607,    39,   233,
     234,    39,    44,    40,   238,   239,    40,    40,    39,    44,
      40,    67,    39,    39,   613,    40,    39,    39,    39,   998,
      40,    40,    40,    40,    40,  1635,    40,  1206,  1638,  1639,
      40,    40,    40,   267,    40,    40,    40,    39,    39,  1649,
      40,   338,  1652,  1653,    40,    40,    40,    40,  1658,  1659,
      40,    40,  1662,    40,    40,    40,    40,    40,    40,   293,
     294,    40,    39,   137,    40,    40,    40,    39,    39,    39,
     304,    40,    39,    39,   308,   309,   310,    40,    40,    40,
      40,    40,    40,    40,    40,    40,   320,   321,    40,    40,
      40,   325,    40,    40,    40,    40,    40,   331,   395,    40,
      40,    40,    39,   436,    40,    40,    40,   341,    40,   343,
     344,    40,    40,    39,     4,    40,    40,    40,     8,     9,
      39,    11,    12,    13,    14,    40,    16,    17,    39,    39,
      39,   365,   366,    23,    24,    25,    26,    27,    28,    29,
      40,    40,    40,    33,    40,    40,    40,    40,    40,    39,
      39,    41,    42,    43,    40,    40,    46,    40,   392,    40,
      40,   458,   459,    40,    40,    40,    40,    40,    40,    40,
     404,    40,    40,    40,    40,    40,    40,    67,    40,    40,
     414,    40,    40,    40,    40,    40,    40,   421,   422,   423,
      40,    40,    40,    40,    40,    40,    40,   431,   432,    40,
      40,    40,    40,    40,    40,    40,    40,   441,    40,    40,
      40,   445,    40,  1823,    40,    40,    40,   241,   261,   849,
     322,   603,   519,   414,  1010,   113,   523,   535,  1838,   531,
     494,   465,   656,   604,   447,  1845,   441,   364,  1848,  1849,
     451,    62,   491,   211,    -1,   223,   542,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   489,    -1,   491,    -1,    -1,
     494,    -1,   559,    -1,    -1,    -1,   500,     4,    -1,    -1,
      -1,     8,     9,    -1,    11,    12,    13,    14,    -1,    16,
      17,    -1,   579,    -1,    -1,    -1,    23,    24,    25,    26,
      27,    28,    29,    -1,   528,    -1,    33,   531,    -1,    -1,
      -1,    -1,    39,    -1,    41,    42,    43,    -1,    -1,    46,
      -1,    -1,    -1,    -1,   548,    -1,   550,   551,    -1,    -1,
      -1,    -1,    -1,    -1,   558,    -1,    -1,   561,    -1,    -1,
      67,    -1,    -1,    -1,    -1,    -1,   633,    -1,    -1,    -1,
      -1,    -1,   639,    -1,   641,    -1,   580,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     4,   660,   661,    -1,     8,     9,   602,    11,
      12,    13,    14,    -1,    16,    17,   610,   611,    -1,    -1,
      -1,    23,    24,    25,    26,    27,    28,    29,    -1,    -1,
     624,    33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,
      -1,    43,    -1,    -1,    46,    -1,  2016,    -1,    -1,    -1,
      -1,    -1,   646,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   657,    -1,    67,    -1,    -1,   662,    -1,
      -1,   665,    -1,    -1,    -1,     4,   670,    -1,    -1,     8,
       9,    -1,    11,    12,    13,    14,    -1,    16,    17,    -1,
      -1,    -1,   686,    -1,    23,    24,    25,    26,    27,    28,
      29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,   766,
      39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   731,    67,    -1,
      -1,    -1,    -1,    -1,    -1,   802,   803,    -1,    -1,    -1,
     744,     4,   746,   747,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,   761,    -1,    -1,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,   773,
      33,    -1,    -1,    -1,    -1,    -1,    39,    -1,    41,    42,
      43,   785,   786,    46,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   795,    -1,   797,    -1,   799,    -1,    -1,    -1,    -1,
     804,    -1,    -1,   807,    67,    -1,   873,    -1,   875,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   822,    -1,
      -1,   825,    -1,   827,    -1,    -1,    -1,    -1,     4,    -1,
      -1,    -1,     8,     9,    -1,    11,    12,    13,    14,    -1,
      16,    17,    -1,    -1,    -1,   849,    -1,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,   923,    33,    -1,    -1,
      -1,    -1,    -1,    39,    -1,    41,    42,    43,   935,    -1,
      46,    -1,   876,    -1,   878,    -1,   880,     4,    -1,    -1,
      -1,     8,     9,    -1,    11,    12,    13,    14,    -1,    16,
      17,    67,   896,    -1,   898,   899,    23,    24,    25,    26,
      27,    28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,
      -1,    -1,   926,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   937,    -1,   939,    -1,    -1,   942,   943,
      67,    -1,    -1,    -1,    -1,    -1,    -1,  1014,   952,    -1,
     954,  1018,    -1,  1020,  1021,    -1,  1023,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   972,    -1,
     974,    -1,   976,     4,  1041,   979,  1043,     8,     9,    -1,
      11,    12,    13,    14,    -1,    16,    17,    -1,    -1,    -1,
      -1,    -1,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    33,    -1,    -1,    -1,  1073,  1074,    39,    40,
      41,    -1,    43,    -1,    -1,    46,    -1,    -1,    -1,    -1,
    1024,    -1,  1089,    -1,    -1,  1092,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    67,  1104,    -1,    -1,
    1044,    -1,  1046,     4,  1048,    -1,    -1,     8,     9,    -1,
      11,    12,    13,    14,    -1,    16,    17,    -1,  1125,    -1,
      -1,    -1,    23,    24,    25,    26,    27,    28,    29,    -1,
      -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    39,    -1,
      41,    42,    43,    -1,    -1,    46,    -1,  1091,    -1,    -1,
      -1,  1095,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1168,  1106,    -1,  1108,    -1,    67,    -1,  1175,    -1,
      -1,    -1,  1179,    -1,  1181,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1127,    -1,  1129,    -1,    -1,  1132,  1196,
    1134,    -1,    -1,  1200,    -1,  1202,  1203,     4,  1205,    -1,
      -1,     8,     9,    -1,    11,    12,    13,    14,    -1,    16,
      17,    -1,    -1,    -1,    -1,    -1,    23,    24,    25,    26,
      27,    28,    29,    -1,    -1,    -1,    33,  1234,    -1,    -1,
      -1,    -1,    39,    -1,    41,    42,    43,    -1,    -1,    46,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1257,  1258,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      67,    -1,  1206,    -1,    -1,    -1,  1273,    -1,    -1,    -1,
       4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,    13,
      14,    -1,    16,    17,    -1,  1292,    -1,    -1,  1295,    23,
      24,    25,    26,    27,    28,    29,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,    43,
      -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1275,    -1,    67,    -1,    -1,    -1,  1344,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1294,    -1,    -1,  1297,    -1,  1299,    -1,    -1,    -1,    -1,
    1367,    -1,    -1,    -1,    -1,    -1,    -1,  1374,    -1,    -1,
       4,  1378,    -1,  1380,     8,     9,    -1,    11,    12,    13,
      14,    -1,    16,    17,    -1,    -1,    -1,    -1,    -1,    23,
      24,    25,    26,    27,    28,    29,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,    43,
      -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,     8,
       9,    -1,    11,    12,    13,    14,    -1,    16,    17,  1436,
      -1,    -1,    -1,    67,    23,    24,    25,    26,    27,    28,
      29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,    -1,
      -1,    -1,    -1,    -1,     4,    -1,    -1,    -1,     8,     9,
    1477,    11,    12,    13,    14,    -1,    16,    17,    67,    -1,
      -1,    -1,    -1,    23,    24,    25,    26,    27,    28,    29,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    39,
      40,    41,    -1,    43,    -1,    -1,    46,    -1,    -1,     4,
      -1,    -1,    -1,     8,     9,    -1,    11,    12,    13,    14,
      -1,    16,    17,    -1,    -1,    -1,    -1,    67,    23,    24,
      25,    26,    27,    28,    29,  1479,    -1,    -1,    33,    -1,
      -1,    -1,    -1,    -1,    39,     4,    41,    42,    43,     8,
       9,    46,    11,    12,    13,    14,    -1,    16,    17,  1566,
      -1,    -1,    -1,    -1,    23,    24,    25,    26,    27,    28,
      29,    -1,    67,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,    -1,
       4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,    13,
      14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,    23,
      24,    25,    26,    27,    28,    29,    -1,    -1,    -1,    33,
      -1,    -1,    -1,    -1,    -1,    39,     4,    41,    42,    43,
       8,     9,    46,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    -1,    23,    24,    25,    26,    27,
      28,    29,    -1,    67,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,    -1,    -1,    46,    -1,    -1,     4,    -1,    -1,    -1,
       8,     9,    -1,    11,    12,    13,    14,    -1,    16,    17,
      -1,    -1,    -1,    -1,    67,    23,    24,    25,    26,    27,
      28,    29,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    39,    40,    41,    -1,    43,    -1,    -1,    46,    -1,
      -1,     4,    -1,    -1,    -1,     8,     9,    -1,    11,    12,
      13,    14,    -1,    16,    17,    -1,    -1,    -1,    -1,    67,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    39,    40,    41,    -1,
      43,     4,     5,    46,    -1,    -1,     9,    -1,    11,    12,
      -1,    -1,    15,    -1,    17,    -1,    19,    20,    -1,    -1,
      -1,    -1,    25,    -1,    67,    -1,    29,    30,    -1,    -1,
      -1,    34,    35,    36,    -1,     4,     5,    40,    41,    -1,
       9,    -1,    11,    12,    -1,    -1,    15,    -1,    17,    -1,
      19,    20,    -1,    -1,    -1,    -1,    25,    -1,    -1,    -1,
      29,    30,    -1,    -1,    67,    34,    35,    36,    -1,     4,
       5,    40,    41,    -1,     9,    -1,    11,    12,    -1,    -1,
      15,    -1,    17,    -1,    19,    20,    -1,    -1,    -1,    -1,
      25,    -1,    -1,    -1,    29,    30,    -1,    -1,    67,    34,
      35,    36,    -1,     4,     5,    40,    41,    -1,     9,    -1,
      11,    12,    -1,    -1,    15,    -1,    17,    -1,    19,    20,
      -1,    -1,    -1,    -1,    25,    -1,    -1,    -1,    29,    30,
      -1,    -1,    67,    34,    35,    36,    -1,     4,     5,    40,
      41,    -1,     9,    -1,    11,    12,    -1,    -1,    15,    -1,
      17,    -1,    19,    20,    -1,    -1,    -1,    -1,    25,    -1,
      -1,    -1,    29,    30,    -1,    -1,    67,    34,    35,    36,
      -1,     4,     5,    40,    41,    -1,     9,    -1,    11,    12,
      -1,    -1,    15,    -1,    17,    -1,    19,    20,    -1,    -1,
      -1,    -1,    25,    -1,    -1,    -1,    29,    30,    -1,    -1,
      67,    34,    35,    36,    -1,     4,     5,    40,    41,    -1,
       9,    -1,    11,    12,    -1,    -1,    15,    -1,    17,    -1,
      19,    20,    -1,    -1,    -1,    -1,    25,    -1,    -1,    -1,
      29,    30,    -1,    -1,    67,    34,    35,    36,    -1,     4,
       5,    40,    41,    -1,     9,    -1,    11,    12,    -1,    -1,
      15,    -1,    17,    -1,    19,    20,    -1,    -1,    -1,    -1,
      25,    -1,    -1,    -1,    29,    30,    -1,    -1,    67,    34,
      35,    36,    -1,     4,     5,    40,    41,    -1,     9,    -1,
      11,    12,    -1,    -1,    15,    -1,    17,    -1,    19,    20,
      -1,    -1,    -1,    -1,    25,    -1,    -1,    -1,    29,    30,
      -1,    -1,    67,    34,    35,    36,    -1,     4,     5,    40,
      41,    -1,     9,    -1,    11,    12,    -1,    -1,    15,    -1,
      17,    -1,    19,    20,    -1,    -1,    -1,    -1,    25,    -1,
      -1,    -1,    29,    30,    -1,    -1,    67,    34,    35,    36,
      -1,     4,     5,    40,    41,    -1,     9,    -1,    11,    12,
      -1,    -1,    15,    -1,    17,    -1,    19,    20,    -1,    -1,
      -1,    -1,    25,    -1,    -1,    -1,    29,    30,    -1,    -1,
      67,    34,    35,    36,    -1,     4,     5,    40,    41,    -1,
       9,    -1,    11,    12,    -1,    -1,    15,    -1,    17,    -1,
      19,    20,    -1,    -1,    -1,    -1,    25,    -1,    -1,    -1,
      29,    30,    -1,    -1,    67,    34,    35,    36,    -1,     4,
       5,    40,    41,    -1,     9,    -1,    11,    12,    -1,    -1,
      15,    -1,    17,    -1,    19,    20,    -1,    -1,    -1,    -1,
      25,    -1,    -1,    -1,    29,    30,    -1,    -1,    67,    34,
      35,    36,    -1,    -1,    -1,    40,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    67
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_uint8 yystos[] =
{
       0,     4,     8,     9,    11,    12,    16,    17,    23,    24,
      25,    26,    27,    28,    29,    33,    39,    41,    43,    46,
      67,    73,    74,    75,    76,    77,    78,    79,    80,    83,
      85,    86,    87,    89,    96,    97,    98,    99,   100,   101,
     106,   107,   108,   109,   113,   118,   126,   134,   137,   138,
     152,   155,   159,   178,   188,   193,   199,   200,   204,   208,
     214,   215,   216,     9,    25,    43,    67,   151,   199,    11,
     151,     9,    67,   114,   117,   199,    41,    43,    60,    68,
      69,    70,   102,   103,   104,   105,   127,   199,   221,   222,
      43,   102,    43,    43,    26,    39,    31,    41,    41,    44,
      47,    81,   199,     0,    76,    45,     5,     6,    10,    15,
       7,     9,   159,   214,    46,    53,    54,    55,    56,    58,
      61,    63,    84,    48,   201,    39,    41,    43,   203,   205,
     206,   209,   212,   213,   136,   199,    13,    14,   199,   215,
      44,    47,    92,   141,   142,   143,   214,    43,    43,    39,
      48,   115,    75,   133,    44,    47,   102,   103,   128,   130,
     131,   214,   218,   220,   105,    62,    64,    49,    50,    51,
      52,    57,    59,    65,    66,   214,    39,   102,   102,    43,
      75,    88,    70,    75,    42,   179,   181,   208,    39,    44,
      44,    47,    47,    82,    41,    47,   119,   121,   125,   199,
     140,   214,   158,   199,   192,   208,    41,   195,   199,     5,
       6,    10,    15,   136,   102,     6,     9,    17,    25,    26,
      27,    28,    67,   202,   207,   102,    42,   102,    44,    47,
     102,   210,   203,    58,    41,   135,   135,   151,    44,    44,
      47,    47,    93,   144,   199,    44,    47,    94,   142,    44,
      47,    94,    75,   116,   117,    42,    41,    44,    44,    44,
      47,    47,   129,    67,   132,    44,    47,    47,   219,   104,
     104,   105,   105,   105,   105,   105,   105,   105,   105,    67,
     110,    75,   112,    44,    44,   102,    40,    42,    42,    42,
      47,   180,   181,    41,    43,    41,    39,    39,    44,   199,
      41,    67,   124,    47,    47,   120,    21,   151,    37,    38,
      39,   156,   170,   171,   173,    43,    42,    90,   153,   214,
      39,   140,   158,   192,    41,    58,   201,   203,    40,    42,
      44,    47,   211,    44,    47,   217,   218,   102,    43,   151,
     151,    44,   141,    43,    58,   145,    39,    44,    44,    47,
      47,    95,    39,    44,    44,    47,    40,   115,   133,    41,
      41,    44,   130,    44,   220,    22,    45,    40,    39,    39,
      44,    40,    42,   181,   180,    42,   102,   184,   187,    44,
     102,   182,   186,    75,    41,    41,    39,    82,    42,    47,
     122,   124,    45,   121,    41,    43,   172,   199,   176,   199,
       9,    15,    19,    20,    30,    34,    35,    36,   137,   138,
     158,   159,   160,   161,   162,   163,   165,   166,   167,   168,
     169,   178,   214,    39,    47,   157,    44,    47,   142,   189,
     191,     8,     9,   159,   178,    42,    47,    91,    67,   154,
     194,   196,   197,   199,   151,    39,   156,    43,    42,    90,
     217,   102,    44,    47,    42,    44,    47,    94,    43,    43,
     151,    93,   148,   199,   220,    58,    75,   150,    39,    39,
      44,   142,   150,    39,    39,    44,    42,   133,   133,    41,
     129,   219,   111,   220,   111,    88,    88,    39,   180,    43,
      42,    47,   185,    44,    47,   183,    42,    75,    75,    41,
      45,    42,    42,    47,    47,   123,   125,   120,   124,    44,
      47,    94,    21,    41,   137,   138,   178,   137,   138,    43,
     158,    18,    18,    43,    15,    40,   161,    15,    30,   158,
     159,   214,   164,   199,   160,   170,    39,   139,   140,    44,
      44,    47,    47,   190,    43,   151,   151,     5,     6,   159,
       8,     9,   159,   178,   153,    40,   194,    47,    58,    43,
     160,    39,    44,    47,   189,   159,   178,    42,   211,    39,
      44,    44,    47,    44,    47,    94,    44,    47,    94,    43,
      41,    44,   220,    40,   150,   150,    39,    95,    40,   150,
     150,    39,    42,    42,   133,    44,    44,    40,    40,    88,
      44,   182,    43,   187,   186,    40,    42,    42,    75,   125,
      45,    45,    42,   124,    42,    42,    39,   139,    44,    44,
      47,    41,    67,   177,    42,    90,    18,    18,    18,    18,
      44,    47,    94,    43,    44,    47,    94,    41,    41,    43,
     158,    43,    15,   164,    46,    47,    58,    40,   157,   150,
      39,    39,   139,    39,   139,    44,   191,    44,    47,    92,
      43,    43,   140,   158,     5,     6,    43,   151,   151,     5,
       6,   159,    91,   198,   220,    44,    47,    94,    40,   160,
      39,   139,    44,    44,    47,     5,     6,   159,   159,   178,
     150,    39,    39,    44,    39,    44,    44,    47,    39,    44,
      44,    47,    44,    47,    94,    42,    47,   146,   149,   220,
      40,    40,   150,    40,    40,   150,    42,    39,    39,    40,
      44,    44,   182,   185,   183,    40,    40,    42,    42,   125,
     125,    45,   123,   150,    39,    39,   139,    39,   139,    44,
      42,    47,   174,   177,    30,   158,   178,    42,    39,    44,
      44,    47,    44,    47,    94,    39,    44,    44,    47,    42,
      90,    42,    90,    44,    47,    94,    43,    44,    47,    94,
      41,    46,    47,    58,   217,    40,   150,   150,    39,   150,
      39,    39,   139,   190,   151,    44,    44,    47,    44,    47,
      94,    44,    47,    94,   151,    39,   170,   140,   158,    44,
      47,    92,    43,    43,   140,   158,     5,     6,    47,    39,
     139,    44,    44,    47,    40,   150,    39,    39,   139,    39,
     139,    44,   140,   158,     5,     6,     5,     6,   159,    40,
     150,   150,    39,   150,    39,    39,    44,   150,    39,    39,
      44,    39,    44,    44,    47,    44,    42,    42,    47,    47,
     147,    40,    40,   112,   112,    44,    40,    42,    42,   125,
      40,   150,   150,    39,   150,    39,    39,   139,    42,    42,
      47,    47,   175,    43,   158,    43,    30,   158,    30,   158,
     178,   150,    39,    39,    44,    39,    44,    44,    47,   150,
      39,    39,    44,   159,   178,    42,    30,   158,   178,    42,
      39,    44,    44,    47,    44,    47,    94,    39,    44,    44,
      47,    42,    90,   217,    46,    47,    40,    40,   150,    40,
     150,   150,    39,    43,   151,   151,    44,    39,    44,    44,
      47,    39,    44,    44,    47,    43,   160,    39,   151,    39,
     170,   151,    44,    44,    47,    44,    47,    94,    44,    47,
      94,   151,    39,   170,   140,   158,   150,    39,    39,   139,
      39,   139,    44,    40,   150,   150,    39,   150,    39,    39,
     139,   151,    39,   170,   140,   158,   140,   158,     5,     6,
      40,    40,   150,    40,   150,   150,    39,    40,   150,   150,
      39,   150,    39,    39,    44,    44,    44,    42,   149,    40,
      40,    42,    40,    40,   150,    40,   150,   150,    39,    42,
     177,    44,    47,    94,    43,    44,    47,    94,    43,   158,
      43,    43,   158,    43,    30,   158,    40,   150,   150,    39,
     150,    39,    39,    44,    40,   150,   150,    39,   159,   159,
     178,    43,   158,    43,    30,   158,    30,   158,   178,   150,
      39,    39,    44,    39,    44,    44,    47,   150,    39,    39,
      44,   159,   178,    42,    46,    47,    40,    40,    40,   150,
      44,    47,    94,    43,    43,   151,   150,    39,    39,    44,
     150,    39,    39,    44,    44,    47,    94,    40,   160,    43,
     160,    39,    43,   151,   151,    44,    39,    44,    44,    47,
      39,    44,    44,    47,    43,   160,    39,   151,    39,   170,
      40,   150,   150,    39,   150,    39,    39,   139,    40,    40,
     150,    40,   150,   150,    39,    43,   160,    39,   151,    39,
     170,   151,    39,   170,   140,   158,    40,    40,    40,   150,
      40,    40,   150,    40,   150,   150,    39,    44,   147,    40,
      40,    40,   150,   175,    39,    44,    44,    47,    44,    47,
      94,    39,    44,    44,    47,    44,    47,    94,    43,    44,
      47,    94,    44,    47,    94,    43,    44,    47,    94,    43,
     158,    43,    40,    40,   150,    40,   150,   150,    39,    40,
      40,   150,   159,    44,    47,    94,    43,    44,    47,    94,
      43,   158,    43,    43,   158,    43,    30,   158,    40,   150,
     150,    39,   150,    39,    39,    44,    40,   150,   150,    39,
     159,   159,   178,    40,    39,    44,    44,    47,    44,    47,
      94,    44,    47,    94,    43,    40,   150,   150,    39,    40,
     150,   150,    39,    39,   139,    44,    44,    47,    40,    44,
      47,    94,    40,   160,    44,    47,    94,    43,    43,   151,
     150,    39,    39,    44,   150,    39,    39,    44,    44,    47,
      94,    40,   160,    43,   160,    39,    40,    40,   150,    40,
     150,   150,    39,    40,    40,    40,   150,    44,    47,    94,
      40,   160,    43,   160,    39,    43,   160,    39,   151,    39,
     170,    40,    40,    40,    40,   150,    40,   150,    39,    39,
      44,    39,    44,    44,    47,   150,    39,    39,    44,    39,
      44,    44,    47,    44,    47,    94,    39,    44,    44,    47,
      39,    44,    44,    47,    44,    47,    94,    39,    44,    44,
      47,    44,    47,    94,    43,    44,    47,    94,    40,    40,
      40,   150,    40,    39,    44,    44,    47,    44,    47,    94,
      39,    44,    44,    47,    44,    47,    94,    43,    44,    47,
      94,    44,    47,    94,    43,    44,    47,    94,    43,   158,
      43,    40,    40,   150,    40,   150,   150,    39,    40,    40,
     150,   159,   150,    39,    39,    44,    39,    44,    44,    47,
      39,    44,    44,    47,    44,    47,    94,    40,    40,   150,
      40,    40,   150,   150,    39,    39,   139,    39,   139,    44,
      39,   139,    44,    44,    47,    40,    39,    44,    44,    47,
      44,    47,    94,    44,    47,    94,    43,    40,   150,   150,
      39,    40,   150,   150,    39,    39,   139,    44,    44,    47,
      40,    44,    47,    94,    40,   160,    40,    40,    40,   150,
      40,    39,   139,    44,    44,    47,    40,    44,    47,    94,
      40,   160,    44,    47,    94,    40,   160,    43,   160,    39,
      40,    40,   150,   150,    39,   150,    39,    39,    44,    40,
     150,   150,    39,   150,    39,    39,    44,    39,    44,    44,
      47,   150,    39,    39,    44,   150,    39,    39,    44,    39,
      44,    44,    47,   150,    39,    39,    44,    39,    44,    44,
      47,    44,    47,    94,    39,    44,    44,    47,    40,   150,
      39,    39,    44,    39,    44,    44,    47,   150,    39,    39,
      44,    39,    44,    44,    47,    44,    47,    94,    39,    44,
      44,    47,    39,    44,    44,    47,    44,    47,    94,    39,
      44,    44,    47,    44,    47,    94,    43,    44,    47,    94,
      40,    40,    40,   150,    40,    40,   150,   150,    39,   150,
      39,    39,    44,   150,    39,    39,    44,    39,    44,    44,
      47,    40,    40,    40,   150,   150,    39,   150,    39,    39,
     139,   150,    39,    39,   139,    39,   139,    44,   150,    39,
      39,    44,    39,    44,    44,    47,    39,    44,    44,    47,
      44,    47,    94,    40,    40,   150,    40,    40,   150,   150,
      39,    39,   139,    39,   139,    44,    39,   139,    44,    44,
      47,    40,    40,   150,    39,    39,   139,    39,   139,    44,
      39,   139,    44,    44,    47,    40,    39,   139,    44,    44,
      47,    40,    44,    47,    94,    40,   160,    40,    40,   150,
      40,   150,   150,    39,    40,    40,   150,    40,   150,   150,
      39,   150,    39,    39,    44,    40,   150,   150,    39,    40,
     150,   150,    39,   150,    39,    39,    44,    40,   150,   150,
      39,   150,    39,    39,    44,    39,    44,    44,    47,   150,
      39,    39,    44,    40,   150,   150,    39,   150,    39,    39,
      44,    40,   150,   150,    39,   150,    39,    39,    44,    39,
      44,    44,    47,   150,    39,    39,    44,   150,    39,    39,
      44,    39,    44,    44,    47,   150,    39,    39,    44,    39,
      44,    44,    47,    44,    47,    94,    39,    44,    44,    47,
      40,    40,    40,   150,    40,   150,   150,    39,    40,   150,
     150,    39,   150,    39,    39,    44,    40,    40,   150,    40,
     150,   150,    39,    40,   150,   150,    39,   150,    39,    39,
     139,    40,   150,   150,    39,   150,    39,    39,    44,   150,
      39,    39,    44,    39,    44,    44,    47,    40,    40,    40,
     150,   150,    39,   150,    39,    39,   139,   150,    39,    39,
     139,    39,   139,    44,    40,   150,   150,    39,   150,    39,
      39,   139,   150,    39,    39,   139,    39,   139,    44,   150,
      39,    39,   139,    39,   139,    44,    39,   139,    44,    44,
      47,    40,    40,    40,    40,   150,    40,    40,    40,   150,
      40,   150,   150,    39,    40,    40,   150,    40,    40,   150,
      40,   150,   150,    39,    40,    40,   150,    40,   150,   150,
      39,   150,    39,    39,    44,    40,   150,   150,    39,    40,
      40,   150,    40,   150,   150,    39,    40,    40,   150,    40,
     150,   150,    39,   150,    39,    39,    44,    40,   150,   150,
      39,    40,   150,   150,    39,   150,    39,    39,    44,    40,
     150,   150,    39,   150,    39,    39,    44,    39,    44,    44,
      47,   150,    39,    39,    44,    40,    40,    40,   150,    40,
      40,   150,    40,   150,   150,    39,    40,    40,    40,   150,
      40,    40,   150,    40,   150,   150,    39,    40,    40,   150,
      40,   150,   150,    39,    40,   150,   150,    39,   150,    39,
      39,    44,    40,    40,   150,    40,   150,   150,    39,    40,
     150,   150,    39,   150,    39,    39,   139,    40,    40,   150,
      40,   150,   150,    39,    40,   150,   150,    39,   150,    39,
      39,   139,    40,   150,   150,    39,   150,    39,    39,   139,
     150,    39,    39,   139,    39,   139,    44,    40,    40,    40,
      40,   150,    40,    40,    40,    40,   150,    40,    40,    40,
     150,    40,   150,   150,    39,    40,    40,   150,    40,    40,
      40,   150,    40,    40,    40,   150,    40,   150,   150,    39,
      40,    40,   150,    40,    40,   150,    40,   150,   150,    39,
      40,    40,   150,    40,   150,   150,    39,   150,    39,    39,
      44,    40,   150,   150,    39,    40,    40,    40,    40,   150,
      40,    40,    40,    40,   150,    40,    40,    40,   150,    40,
      40,   150,    40,   150,   150,    39,    40,    40,    40,   150,
      40,    40,   150,    40,   150,   150,    39,    40,    40,    40,
     150,    40,    40,   150,    40,   150,   150,    39,    40,    40,
     150,    40,   150,   150,    39,    40,   150,   150,    39,   150,
      39,    39,   139,    40,    40,    40,    40,    40,   150,    40,
      40,    40,    40,    40,   150,    40,    40,    40,    40,   150,
      40,    40,    40,   150,    40,   150,   150,    39,    40,    40,
     150,    40,    40,    40,    40,    40,    40,   150,    40,    40,
      40,    40,   150,    40,    40,    40,    40,   150,    40,    40,
      40,   150,    40,    40,   150,    40,   150,   150,    39,    40,
      40,    40,    40,    40,    40,   150,    40,    40,    40,    40,
      40,    40,    40,    40,   150,    40,    40
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_uint8 yyr1[] =
{
       0,    72,    73,    74,    75,    76,    76,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    78,    79,    80,    80,    80,    80,    80,
      81,    82,    82,    83,    84,    84,    84,    84,    84,    85,
      86,    86,    87,    88,    89,    89,    89,    89,    89,    89,
      89,    89,    89,    89,    89,    89,    89,    89,    89,    89,
      89,    89,    89,    89,    89,    89,    89,    89,    89,    89,
      89,    89,    89,    89,    89,    89,    89,    89,    89,    89,
      89,    89,    89,    89,    90,    91,    91,    92,    93,    93,
      94,    95,    95,    96,    96,    96,    96,    96,    96,    96,
      96,    96,    96,    96,    96,    96,    96,    96,    96,    96,
      96,    96,    96,    97,    97,    97,    97,    97,    97,    97,
      97,    98,    98,    98,    98,    99,   100,   101,   102,   103,
     103,   103,   104,   104,   104,   104,   104,   104,   104,   104,
     104,   104,   105,   105,   106,   107,   107,   108,   109,   109,
     110,   111,   112,   113,   114,   115,   115,   116,   117,   118,
     118,   118,   118,   119,   120,   120,   121,   121,   121,   121,
     121,   121,   121,   122,   123,   123,   124,   125,   126,   127,
     127,   127,   127,   127,   128,   129,   129,   130,   131,   131,
     132,   133,   134,   134,   134,   134,   135,   136,   137,   137,
     137,   137,   137,   137,   137,   137,   137,   137,   137,   137,
     137,   137,   137,   137,   137,   137,   137,   137,   137,   137,
     137,   137,   137,   137,   137,   137,   137,   137,   137,   137,
     137,   137,   137,   137,   137,   137,   137,   137,   137,   137,
     137,   137,   137,   137,   137,   137,   137,   137,   137,   137,
     137,   137,   137,   137,   137,   137,   137,   137,   137,   137,
     137,   137,   138,   138,   138,   138,   138,   138,   138,   138,
     138,   138,   138,   138,   138,   138,   138,   138,   139,   140,
     141,   142,   142,   142,   142,   143,   144,   145,   145,   145,
     145,   145,   146,   147,   147,   148,   149,   150,   151,   152,
     152,   152,   152,   152,   152,   152,   152,   152,   152,   152,
     152,   152,   152,   152,   152,   153,   154,   155,   155,   155,
     155,   156,   157,   157,   158,   159,   159,   159,   159,   159,
     160,   161,   161,   162,   162,   162,   162,   162,   162,   163,
     163,   163,   163,   163,   163,   163,   163,   163,   163,   163,
     163,   164,   165,   165,   165,   165,   165,   165,   166,   166,
     166,   166,   166,   166,   167,   167,   167,   167,   167,   167,
     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   169,   169,   169,   170,   170,   171,
     172,   173,   173,   173,   173,   173,   173,   174,   175,   175,
     176,   177,   178,   178,   179,   180,   180,   180,   181,   181,
     181,   181,   181,   181,   181,   182,   183,   183,   184,   185,
     185,   186,   187,   188,   188,   188,   188,   188,   188,   188,
     188,   188,   188,   188,   188,   188,   188,   188,   188,   189,
     190,   190,   191,   192,   193,   194,   194,   195,   196,   196,
     196,   196,   197,   198,   199,   200,   201,   201,   202,   203,
     203,   204,   205,   205,   205,   205,   206,   207,   207,   207,
     207,   207,   207,   207,   207,   208,   208,   208,   208,   209,
     209,   209,   209,   210,   211,   211,   212,   213,   214,   214,
     214,   214,   214,   215,   215,   216,   216,   216,   217,   217,
     218,   219,   219,   220,   221,   221,   221,   221,   221,   221,
     222,   222
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     1,     1,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     9,     8,     8,     7,     5,
       2,     3,     0,     3,     1,     1,     1,     1,     1,     7,
       7,     8,     4,     1,    18,    17,    17,    16,    17,    16,
      16,    15,    17,    16,    16,    15,    16,    15,    15,    14,
      14,    13,    13,    12,    17,    16,    16,    15,    16,    15,
      15,    14,    16,    15,    15,    14,    15,    14,    14,    13,
      13,    12,    12,    11,     2,     3,     0,     2,     3,     0,
       2,     3,     0,    13,    12,    12,    11,    12,    11,    11,
      10,    12,    11,    11,    10,    11,    10,    10,     9,     9,
       8,     8,     7,    14,    13,    13,    12,    13,    12,    12,
      11,     9,     8,     8,     7,     2,     2,     2,     1,     3,
       3,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     1,     3,     1,     2,     1,     1,     5,    10,    10,
       1,     1,     1,     5,     2,     3,     0,     1,     1,     4,
       3,     3,     2,     2,     3,     0,     1,     5,     5,     8,
       7,     7,     6,     2,     3,     0,     1,     1,     1,     7,
       6,     6,     5,     3,     2,     3,     0,     1,     2,     1,
       1,     1,     5,     3,     4,     2,     3,     1,    19,    18,
      18,    17,    18,    17,    17,    16,    18,    17,    17,    16,
      17,    16,    16,    15,    18,    17,    17,    16,    17,    16,
      16,    15,    17,    16,    16,    15,    16,    15,    15,    14,
      18,    17,    17,    16,    17,    16,    16,    15,    17,    16,
      16,    15,    16,    15,    15,    14,    17,    16,    16,    15,
      16,    15,    15,    14,    16,    15,    15,    14,    15,    14,
      14,    13,    13,    12,    12,    11,    12,    11,    11,    10,
      12,    11,    11,    10,    11,    10,    10,     9,     1,     1,
       1,     5,     3,     4,     2,     1,     1,     7,     6,     6,
       5,     3,     2,     3,     0,     1,     1,     1,     1,    14,
      13,    13,    12,    13,    12,    12,    11,    13,    12,    12,
      11,    12,    11,    11,    10,     2,     1,     8,     7,     7,
       6,     2,     3,     0,     1,     1,     1,     2,     2,     0,
       1,     2,     0,     1,     1,     1,     1,     1,     1,     6,
       4,     5,     3,     6,     4,     5,     3,     5,     3,     4,
       2,     1,     3,     2,     3,     2,     2,     1,     3,     2,
       3,     2,     2,     1,    14,    13,    13,    12,    13,    12,
      12,    11,    13,    12,    12,    11,    12,    11,    11,    10,
      13,    12,    12,    11,    12,    11,    11,    10,    12,    11,
      11,    10,    11,    10,    10,     9,    15,    14,    14,    13,
      14,    13,    13,    12,    14,    13,    13,    12,    13,    12,
      12,    11,    14,    13,    13,    12,    13,    12,    12,    11,
      13,    12,    12,    11,    12,    11,    11,    10,    14,    13,
      13,    12,    13,    12,    12,    11,    13,    12,    12,    11,
      12,    11,    11,    10,    13,    12,    12,    11,    12,    11,
      11,    10,    12,    11,    11,    10,    11,    10,    10,     9,
       9,     8,     8,     7,     8,     7,     7,     6,    10,     9,
       9,     8,     9,     8,     8,     7,     9,     8,     8,     7,
       8,     7,     7,     6,     1,     1,     1,     1,     1,     2,
       1,     2,     4,     7,     6,     6,     5,     2,     3,     0,
       1,     1,     5,     4,     2,     3,     2,     0,     1,     4,
       3,     7,     6,     6,     5,     2,     3,     0,     2,     3,
       0,     1,     1,    12,    11,    11,    10,    11,    10,    10,
       9,    11,    10,    10,     9,    10,     9,     9,     8,     2,
       3,     0,     1,     1,     6,     2,     0,     1,     4,     3,
       2,     1,     1,     1,     1,     2,     3,     0,     2,     2,
       0,     2,     1,     1,     1,     1,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
       3,     3,     2,     2,     3,     0,     3,     3,     2,     3,
       2,     3,     2,     2,     0,     1,     1,     1,     2,     1,
       2,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       4,     3
};


/* YYDPREC[RULE-NUM] -- Dynamic precedence of rule #RULE-NUM (0 if none).  */
static const yytype_int8 yydprec[] =
{
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0
};

/* YYMERGER[RULE-NUM] -- Index of merging function for rule #RULE-NUM.  */
static const yytype_int8 yymerger[] =
{
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0
};

/* YYIMMEDIATE[RULE-NUM] -- True iff rule #RULE-NUM is not to be deferred, as
   in the case of predicates.  */
static const yybool yyimmediate[] =
{
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0
};

/* YYCONFLP[YYPACT[STATE-NUM]] -- Pointer into YYCONFL of start of
   list of conflicting reductions corresponding to action entry for
   state STATE-NUM in yytable.  0 means no conflicts.  The list in
   yyconfl is terminated by a rule number of 0.  */
static const yytype_int16 yyconflp[] =
{
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     237,     0,     0,     0,     0,     0,   239,     0,   241,     0,
       1,     0,     0,     0,     0,     0,   243,     0,     3,     0,
       0,     0,     0,     0,     0,     0,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   245,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     7,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    37,     0,     0,     0,     0,     0,
       0,     0,    39,     0,     0,     0,     0,     0,     0,     0,
      41,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    43,     0,     0,     0,     0,     0,     0,     0,
      97,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    71,
       0,     0,     0,    69,     0,     0,     0,    73,     0,     0,
       0,     0,     0,     0,     0,    75,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    77,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    79,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   141,     0,     0,
       0,     0,     0,   143,     0,   145,     0,     0,     0,    87,
       0,     0,     0,   147,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    99,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   149,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   101,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   227,
       0,     0,     0,     0,     0,   229,     0,   231,     0,     0,
       0,     0,     0,     0,     0,   233,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   235,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   111,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    23,
       0,    25,     0,    27,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   119,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    45,     0,     0,     0,     0,
       0,     0,     0,    47,     0,     0,     0,     0,     0,     0,
       0,    49,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   121,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,     0,     0,     0,     0,    81,     0,
      83,     0,    85,     0,     0,     0,     0,     0,     0,   113,
       0,   115,     0,   117,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   139,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,    15,     0,     0,     0,     0,     0,     0,     0,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     151,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   153,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   187,     0,
       0,     0,     0,     0,   189,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,    31,     0,   223,     0,   225,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    35,   257,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   269,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   287,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      53,     0,     0,     0,     0,     0,     0,     0,    55,     0,
       0,     0,     0,     0,     0,     0,    57,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    59,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   247,     0,     0,     0,     0,     0,   249,
       0,   251,     0,     0,     0,     0,     0,     0,     0,   253,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   255,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   259,     0,     0,     0,     0,
       0,   261,     0,   263,     0,     0,     0,     0,     0,     0,
       0,   265,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   371,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   267,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   405,     0,     0,
       0,     0,     0,     9,     0,    11,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,     0,     0,     0,     0,     0,     0,
       0,    91,     0,   447,     0,     0,     0,     0,     0,    93,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   489,     0,     0,     0,     0,     0,
       0,    95,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    61,     0,     0,     0,     0,
       0,     0,     0,    63,     0,     0,     0,     0,     0,     0,
       0,    65,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    67,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   103,     0,     0,     0,
       0,     0,     0,     0,   105,     0,     0,     0,     0,     0,
       0,     0,   107,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   109,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   845,     0,     0,     0,
       0,     0,     0,     0,   855,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   337,     0,     0,     0,     0,     0,
     339,     0,   341,     0,     0,     0,     0,     0,     0,     0,
     343,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   345,     0,     0,     0,     0,     0,     0,     0,
      21,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   531,     0,
       0,     0,     0,     0,   533,     0,   535,     0,     0,     0,
       0,     0,     0,     0,   537,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   539,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   725,     0,     0,     0,     0,     0,
     727,     0,   729,     0,     0,     0,     0,     0,     0,     0,
     731,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   733,   735,     0,     0,     0,     0,     0,   737,
       0,   739,     0,     0,     0,     0,     0,     0,     0,   741,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   743,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   123,
       0,     0,     0,     0,     0,     0,     0,   125,     0,     0,
       0,     0,     0,     0,     0,   127,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   129,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   131,     0,     0,     0,     0,     0,     0,     0,
     133,     0,     0,     0,     0,     0,     0,     0,   135,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     137,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   155,     0,     0,
       0,     0,     0,     0,     0,   157,     0,     0,     0,     0,
       0,     0,     0,   159,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   161,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     163,     0,     0,     0,     0,     0,     0,     0,   165,     0,
       0,     0,     0,     0,     0,     0,   167,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   169,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   171,     0,     0,     0,
       0,     0,     0,     0,   173,     0,     0,     0,     0,     0,
       0,     0,   175,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   177,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   179,     0,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,   183,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   191,     0,     0,     0,     0,     0,     0,     0,
     193,   185,     0,     0,     0,     0,     0,     0,   195,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     197,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   199,     0,
       0,     0,     0,     0,     0,     0,   201,     0,     0,     0,
       0,     0,     0,     0,   203,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   205,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   207,     0,
       0,     0,     0,     0,     0,     0,   209,     0,     0,     0,
       0,     0,     0,     0,   211,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   213,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   215,     0,     0,     0,     0,     0,     0,     0,
     217,     0,     0,     0,     0,     0,     0,     0,   219,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     221,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   271,     0,     0,     0,     0,
       0,     0,     0,   273,     0,     0,     0,     0,     0,     0,
       0,   275,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   277,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   279,     0,     0,     0,     0,
       0,     0,     0,   281,     0,     0,     0,     0,     0,     0,
       0,   283,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     289,     0,     0,     0,     0,     0,     0,     0,   291,     0,
       0,     0,     0,   285,     0,     0,   293,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   297,
       0,     0,     0,     0,     0,     0,     0,   299,   295,     0,
       0,     0,     0,     0,     0,   301,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   305,     0,     0,     0,     0,     0,
       0,     0,   307,     0,     0,     0,     0,   303,     0,     0,
     309,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     313,     0,     0,     0,     0,     0,     0,     0,   315,     0,
       0,     0,     0,     0,     0,     0,   317,     0,     0,     0,
       0,     0,   311,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   321,     0,     0,     0,     0,
       0,     0,     0,   323,     0,     0,     0,     0,   319,     0,
       0,   325,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   329,     0,     0,     0,     0,     0,     0,     0,   331,
       0,     0,     0,     0,     0,     0,     0,   333,     0,     0,
       0,     0,     0,   327,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   347,     0,     0,     0,
       0,     0,     0,     0,   349,     0,     0,     0,     0,   335,
       0,     0,   351,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   355,     0,     0,     0,     0,     0,     0,     0,   357,
       0,     0,     0,     0,   353,     0,     0,   359,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   363,     0,     0,     0,
       0,     0,     0,     0,   365,     0,     0,     0,     0,   361,
       0,     0,   367,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   373,     0,     0,     0,     0,     0,     0,     0,   375,
       0,     0,     0,     0,   369,     0,     0,   377,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   381,     0,     0,     0,
       0,     0,     0,     0,   383,     0,     0,     0,     0,   379,
       0,     0,   385,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   389,     0,     0,     0,     0,     0,     0,     0,   391,
       0,     0,     0,     0,   387,     0,     0,   393,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   397,     0,     0,     0,
       0,     0,     0,     0,   399,     0,     0,     0,     0,   395,
       0,     0,   401,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   407,     0,     0,     0,     0,     0,     0,     0,   409,
       0,     0,     0,     0,   403,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   415,     0,     0,     0,
       0,     0,     0,     0,   417,     0,     0,     0,     0,   413,
       0,     0,   419,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   423,     0,     0,     0,     0,     0,     0,     0,   425,
       0,     0,     0,     0,   421,     0,     0,   427,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   431,     0,     0,     0,
       0,     0,     0,     0,   433,     0,     0,     0,     0,   429,
       0,     0,   435,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   439,     0,     0,     0,     0,     0,     0,     0,   441,
       0,     0,     0,     0,   437,     0,     0,   443,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   449,     0,     0,     0,
       0,     0,     0,     0,   451,     0,     0,     0,     0,   445,
       0,     0,   453,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,     0,     0,     0,     0,     0,     0,     0,   459,
       0,     0,     0,     0,   455,     0,     0,   461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   465,     0,     0,     0,
       0,     0,     0,     0,   467,     0,     0,     0,     0,   463,
       0,     0,   469,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   473,     0,     0,     0,     0,     0,     0,     0,   475,
       0,     0,     0,     0,   471,     0,     0,   477,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   481,     0,     0,     0,
       0,     0,     0,     0,   483,     0,     0,     0,     0,   479,
       0,     0,   485,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   491,     0,     0,     0,     0,     0,     0,     0,   493,
       0,     0,     0,     0,   487,     0,     0,   495,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   499,     0,     0,     0,
       0,     0,     0,     0,   501,     0,     0,     0,     0,   497,
       0,     0,   503,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   507,     0,     0,     0,     0,     0,     0,     0,   509,
       0,     0,     0,     0,   505,     0,     0,   511,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   515,     0,     0,     0,
       0,     0,     0,     0,   517,     0,     0,     0,     0,   513,
       0,     0,   519,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   523,     0,     0,     0,     0,     0,     0,     0,   525,
       0,     0,     0,     0,   521,     0,     0,   527,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   541,     0,     0,     0,
       0,     0,     0,     0,   543,     0,     0,     0,     0,   529,
       0,     0,   545,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   549,     0,     0,     0,     0,     0,     0,     0,   551,
       0,     0,     0,     0,   547,     0,     0,   553,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   557,     0,     0,     0,
       0,     0,     0,     0,   559,     0,     0,     0,     0,   555,
       0,     0,   561,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   565,     0,     0,     0,     0,     0,     0,     0,   567,
       0,     0,     0,     0,   563,     0,     0,   569,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   573,     0,     0,     0,
       0,     0,     0,     0,   575,     0,     0,     0,     0,   571,
       0,     0,   577,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   581,     0,     0,     0,     0,     0,     0,     0,   583,
       0,     0,     0,     0,   579,     0,     0,   585,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   589,     0,     0,     0,
       0,     0,     0,     0,   591,     0,     0,     0,     0,   587,
       0,     0,   593,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   597,     0,     0,     0,     0,     0,     0,     0,   599,
       0,     0,     0,     0,   595,     0,     0,   601,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   605,     0,     0,     0,
       0,     0,     0,     0,   607,     0,     0,     0,     0,   603,
       0,     0,   609,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   613,     0,     0,     0,     0,     0,     0,     0,   615,
       0,     0,     0,     0,   611,     0,     0,   617,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   621,     0,     0,     0,
       0,     0,     0,     0,   623,     0,     0,     0,     0,   619,
       0,     0,   625,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   629,     0,     0,     0,     0,     0,     0,     0,   631,
       0,     0,     0,     0,   627,     0,     0,   633,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   637,     0,     0,     0,
       0,     0,     0,     0,   639,     0,     0,     0,     0,   635,
       0,     0,   641,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   645,     0,     0,     0,     0,     0,     0,     0,   647,
       0,     0,     0,     0,   643,     0,     0,   649,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   653,     0,     0,     0,
       0,     0,     0,     0,   655,     0,     0,     0,     0,   651,
       0,     0,   657,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   661,     0,     0,     0,     0,     0,     0,     0,   663,
       0,     0,     0,     0,   659,     0,     0,   665,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   669,     0,     0,     0,
       0,     0,     0,     0,   671,     0,     0,     0,     0,   667,
       0,     0,   673,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   677,     0,     0,     0,     0,     0,     0,     0,   679,
       0,     0,     0,     0,   675,     0,     0,   681,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   685,     0,     0,     0,
       0,     0,     0,     0,   687,     0,     0,     0,     0,   683,
       0,     0,   689,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   693,     0,     0,     0,     0,     0,     0,     0,   695,
       0,     0,     0,     0,   691,     0,     0,   697,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   701,     0,     0,     0,
       0,     0,     0,     0,   703,     0,     0,     0,     0,   699,
       0,     0,   705,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   709,     0,     0,     0,     0,     0,     0,     0,   711,
       0,     0,     0,     0,   707,     0,     0,   713,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   717,     0,     0,     0,
       0,     0,     0,     0,   719,     0,     0,     0,     0,   715,
       0,     0,   721,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   755,     0,     0,     0,     0,     0,     0,     0,   757,
       0,     0,     0,     0,   723,     0,     0,   759,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   763,     0,     0,     0,
       0,     0,     0,     0,   765,     0,     0,     0,     0,   761,
       0,     0,   767,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   771,     0,     0,     0,     0,     0,     0,     0,   773,
       0,     0,     0,     0,   769,     0,     0,   775,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   779,     0,     0,     0,
       0,     0,     0,     0,   781,     0,     0,     0,     0,   777,
       0,     0,   783,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   787,     0,     0,     0,     0,     0,     0,     0,   789,
       0,     0,     0,     0,   785,     0,     0,   791,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   795,     0,     0,     0,
       0,     0,     0,     0,   797,     0,     0,     0,     0,   793,
       0,     0,   799,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   813,     0,     0,     0,     0,     0,     0,     0,   815,
       0,     0,     0,     0,   801,     0,     0,   817,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   821,     0,     0,     0,
       0,     0,     0,     0,   823,     0,     0,     0,     0,   819,
       0,     0,   825,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   829,     0,     0,     0,     0,     0,     0,     0,   831,
       0,     0,     0,     0,   827,     0,     0,   833,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   837,     0,     0,     0,
       0,     0,     0,     0,   839,     0,     0,     0,     0,   835,
       0,     0,   841,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   847,     0,     0,     0,     0,     0,     0,     0,   849,
       0,     0,     0,     0,   843,     0,     0,   851,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   857,     0,     0,     0,
       0,     0,     0,     0,   859,     0,     0,     0,     0,   853,
       0,     0,   861,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   865,     0,     0,     0,     0,     0,     0,     0,   867,
       0,     0,     0,     0,   863,     0,     0,   869,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   873,     0,     0,     0,
       0,     0,     0,     0,   875,     0,     0,     0,     0,   871,
       0,     0,   877,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   881,     0,     0,     0,     0,     0,     0,     0,   883,
       0,     0,     0,     0,   879,     0,     0,   885,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   889,     0,     0,     0,
       0,     0,     0,     0,   891,     0,     0,     0,     0,   887,
       0,     0,   893,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   897,     0,     0,     0,     0,     0,     0,     0,   899,
       0,     0,     0,     0,   895,     0,     0,   901,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   905,     0,     0,     0,
       0,     0,     0,     0,   907,     0,     0,     0,     0,   903,
       0,     0,   909,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   913,     0,     0,     0,     0,     0,     0,     0,   915,
       0,     0,     0,     0,   911,     0,     0,   917,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   921,     0,     0,     0,
       0,     0,     0,     0,   923,     0,     0,     0,     0,   919,
       0,     0,   925,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   929,     0,     0,     0,     0,     0,     0,     0,   931,
       0,     0,     0,     0,   927,     0,     0,   933,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   937,     0,     0,     0,
       0,     0,     0,     0,   939,     0,     0,     0,     0,   935,
       0,     0,   941,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   945,     0,     0,     0,     0,     0,     0,     0,   947,
       0,     0,     0,     0,   943,     0,     0,   949,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   953,     0,     0,     0,
       0,     0,     0,     0,   955,     0,     0,     0,     0,   951,
       0,     0,   957,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   971,     0,     0,     0,     0,     0,     0,     0,   973,
       0,     0,     0,     0,   959,     0,     0,   975,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   979,     0,     0,     0,
       0,     0,     0,     0,   981,     0,     0,     0,     0,   977,
       0,     0,   983,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1007,     0,     0,     0,     0,     0,     0,     0,  1009,
       0,     0,     0,     0,   985,     0,     0,  1011,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1015,     0,     0,     0,
       0,     0,     0,     0,  1017,     0,     0,     0,     0,  1013,
       0,     0,  1019,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1023,     0,     0,     0,     0,     0,     0,     0,  1025,
       0,     0,     0,     0,  1021,     0,     0,  1027,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1031,     0,     0,     0,
       0,     0,     0,     0,  1033,     0,     0,     0,     0,  1029,
       0,     0,  1035,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1069,     0,     0,     0,     0,     0,     0,     0,  1071,
       0,     0,     0,     0,  1037,     0,     0,  1073,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1077,     0,     0,     0,
       0,     0,     0,     0,  1079,     0,     0,     0,     0,  1075,
       0,     0,  1081,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1085,     0,     0,     0,     0,     0,     0,     0,  1087,
       0,     0,     0,     0,  1083,     0,     0,  1089,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1093,     0,     0,     0,
       0,     0,     0,     0,  1095,     0,     0,     0,     0,  1091,
       0,     0,  1097,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1101,     0,     0,     0,     0,     0,     0,     0,  1103,
       0,     0,     0,     0,  1099,     0,     0,  1105,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1109,     0,     0,     0,
       0,     0,     0,     0,  1111,     0,     0,     0,     0,  1107,
       0,     0,  1113,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1117,     0,     0,     0,     0,     0,     0,     0,  1119,
       0,     0,     0,     0,  1115,     0,     0,  1121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1125,     0,     0,     0,
       0,     0,     0,     0,  1127,     0,     0,     0,     0,  1123,
       0,     0,  1129,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1133,     0,     0,     0,     0,     0,     0,     0,  1135,
       0,     0,     0,     0,  1131,     0,     0,  1137,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1141,     0,     0,     0,
       0,     0,     0,     0,  1143,     0,     0,     0,     0,  1139,
       0,     0,  1145,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1149,     0,     0,     0,     0,     0,     0,     0,  1151,
       0,     0,     0,     0,  1147,     0,     0,  1153,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1157,     0,     0,     0,
       0,     0,     0,     0,  1159,     0,     0,     0,     0,  1155,
       0,     0,  1161,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1165,     0,     0,     0,     0,     0,     0,     0,  1167,
       0,     0,     0,     0,  1163,     0,     0,  1169,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1173,     0,     0,     0,
       0,     0,     0,     0,  1175,     0,     0,     0,     0,  1171,
       0,     0,  1177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1181,     0,     0,     0,     0,     0,     0,     0,  1183,
       0,     0,     0,     0,  1179,     0,     0,  1185,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1189,     0,     0,     0,
       0,     0,     0,     0,  1191,     0,     0,     0,     0,  1187,
       0,     0,  1193,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1207,     0,     0,     0,     0,     0,     0,     0,  1209,
       0,     0,     0,     0,  1195,     0,     0,  1211,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1245,     0,     0,     0,
       0,     0,     0,     0,  1247,     0,     0,     0,     0,  1213,
       0,     0,  1249,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1253,     0,     0,     0,     0,     0,     0,     0,  1255,
       0,     0,     0,     0,  1251,     0,     0,  1257,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1261,     0,     0,     0,
       0,     0,     0,     0,  1263,     0,     0,     0,     0,  1259,
       0,     0,  1265,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1269,     0,     0,     0,     0,     0,     0,     0,  1271,
       0,     0,     0,     0,  1267,     0,     0,  1273,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1277,     0,     0,     0,
       0,     0,     0,     0,  1279,     0,     0,     0,     0,  1275,
       0,     0,  1281,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1285,     0,     0,     0,     0,     0,     0,     0,  1287,
       0,     0,     0,     0,  1283,     0,     0,  1289,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1293,     0,     0,     0,
       0,     0,     0,     0,  1295,     0,     0,     0,     0,  1291,
       0,     0,  1297,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1301,     0,     0,     0,     0,     0,     0,     0,  1303,
       0,     0,     0,     0,  1299,     0,     0,  1305,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1309,     0,     0,     0,
       0,     0,     0,     0,  1311,     0,     0,     0,     0,  1307,
       0,     0,  1313,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1317,     0,     0,     0,     0,     0,     0,     0,  1319,
       0,     0,     0,     0,  1315,     0,     0,  1321,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1325,     0,     0,     0,
       0,     0,     0,     0,  1327,     0,     0,     0,     0,  1323,
       0,     0,  1329,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1333,     0,     0,     0,     0,     0,     0,     0,  1335,
       0,     0,     0,     0,  1331,     0,     0,  1337,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1341,     0,     0,     0,
       0,     0,     0,     0,  1343,     0,     0,     0,     0,  1339,
       0,     0,  1345,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1349,     0,     0,     0,     0,     0,     0,     0,  1351,
       0,     0,     0,     0,  1347,     0,     0,  1353,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1357,     0,     0,     0,
       0,     0,     0,     0,  1359,     0,     0,     0,     0,  1355,
       0,     0,  1361,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1365,     0,     0,     0,     0,     0,     0,     0,  1367,
       0,     0,     0,     0,  1363,     0,     0,  1369,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1373,     0,     0,     0,
       0,     0,     0,     0,  1375,     0,     0,     0,     0,  1371,
       0,     0,  1377,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1381,     0,     0,     0,     0,     0,     0,     0,  1383,
       0,     0,     0,     0,  1379,     0,     0,  1385,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1389,     0,     0,     0,
       0,     0,     0,     0,  1391,     0,     0,     0,     0,  1387,
       0,     0,  1393,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1397,     0,     0,     0,     0,     0,     0,     0,  1399,
       0,     0,     0,     0,  1395,     0,     0,  1401,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1405,     0,     0,     0,
       0,     0,     0,     0,  1407,     0,     0,     0,     0,  1403,
       0,     0,  1409,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1413,     0,     0,     0,     0,     0,     0,     0,  1415,
       0,     0,     0,     0,  1411,     0,     0,  1417,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1421,     0,     0,     0,
       0,     0,     0,     0,  1423,     0,     0,     0,     0,  1419,
       0,     0,  1425,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1429,     0,     0,     0,     0,     0,     0,     0,  1431,
       0,     0,     0,     0,  1427,     0,     0,  1433,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1437,     0,     0,     0,
       0,     0,     0,     0,  1439,     0,     0,     0,     0,  1435,
       0,     0,  1441,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1455,     0,     0,     0,     0,     0,     0,     0,  1457,
       0,     0,     0,     0,  1443,     0,     0,  1459,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1463,     0,     0,     0,
       0,     0,     0,     0,  1465,     0,     0,     0,     0,  1461,
       0,     0,  1467,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1471,     0,     0,     0,     0,     0,     0,     0,  1473,
       0,     0,     0,     0,  1469,     0,     0,  1475,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1479,     0,     0,     0,
       0,     0,     0,     0,  1481,     0,     0,     0,     0,  1477,
       0,     0,  1483,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1487,     0,     0,     0,     0,     0,     0,     0,  1489,
       0,     0,     0,     0,  1485,     0,     0,  1491,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1495,     0,     0,     0,
       0,     0,     0,     0,  1497,     0,     0,     0,     0,  1493,
       0,     0,  1499,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1503,     0,     0,     0,     0,     0,     0,     0,  1505,
       0,     0,     0,     0,  1501,     0,     0,  1507,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1511,     0,     0,     0,
       0,     0,     0,     0,  1513,     0,     0,     0,     0,  1509,
       0,     0,  1515,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1519,     0,     0,     0,     0,     0,     0,     0,  1521,
       0,     0,     0,     0,  1517,     0,     0,  1523,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1527,     0,     0,     0,
       0,     0,     0,     0,  1529,     0,     0,     0,     0,  1525,
       0,     0,  1531,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1535,     0,     0,     0,     0,     0,     0,     0,  1537,
       0,     0,     0,     0,  1533,     0,     0,  1539,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1543,     0,     0,     0,
       0,     0,     0,     0,  1545,     0,     0,     0,     0,  1541,
       0,     0,  1547,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1551,     0,     0,     0,     0,     0,     0,     0,  1553,
       0,     0,     0,     0,  1549,     0,     0,  1555,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1559,     0,     0,     0,
       0,     0,     0,     0,  1561,     0,     0,     0,     0,  1557,
       0,     0,  1563,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1567,     0,     0,     0,     0,     0,     0,     0,  1569,
       0,     0,     0,     0,  1565,     0,     0,  1571,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1575,     0,     0,     0,
       0,     0,     0,     0,  1577,     0,     0,     0,     0,  1573,
       0,     0,  1579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1583,     0,     0,     0,     0,     0,     0,     0,  1585,
       0,     0,     0,     0,  1581,     0,     0,  1587,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1591,     0,     0,     0,
       0,     0,     0,     0,  1593,     0,     0,     0,     0,  1589,
       0,     0,  1595,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1599,     0,     0,     0,     0,     0,     0,     0,  1601,
       0,     0,     0,     0,  1597,     0,     0,  1603,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1607,     0,     0,     0,
       0,     0,     0,     0,  1609,     0,     0,     0,     0,  1605,
       0,     0,  1611,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1615,     0,     0,     0,     0,     0,     0,     0,  1617,
       0,     0,     0,     0,  1613,     0,     0,  1619,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1623,     0,     0,     0,
       0,     0,     0,     0,  1625,     0,     0,     0,     0,  1621,
       0,     0,  1627,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1631,     0,     0,     0,     0,     0,     0,     0,  1633,
       0,     0,     0,     0,  1629,     0,     0,  1635,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1639,     0,     0,     0,
       0,     0,     0,     0,  1641,     0,     0,     0,     0,  1637,
       0,     0,  1643,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1647,     0,     0,     0,     0,     0,     0,     0,  1649,
       0,     0,     0,     0,  1645,     0,     0,  1651,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1655,     0,     0,     0,
       0,     0,     0,     0,  1657,     0,     0,     0,     0,  1653,
       0,     0,  1659,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1663,     0,     0,     0,     0,     0,     0,     0,  1665,
       0,     0,     0,     0,  1661,     0,     0,  1667,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1671,     0,     0,     0,
       0,     0,     0,     0,  1673,     0,     0,     0,     0,  1669,
       0,     0,  1675,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1679,     0,     0,     0,     0,     0,     0,     0,  1681,
       0,     0,     0,     0,  1677,     0,     0,  1683,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1687,     0,     0,     0,
       0,     0,     0,     0,  1689,     0,     0,     0,     0,  1685,
       0,     0,  1691,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1695,     0,     0,     0,     0,     0,     0,     0,  1697,
       0,     0,     0,     0,  1693,     0,     0,  1699,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1703,     0,     0,     0,
       0,     0,     0,     0,  1705,     0,     0,     0,     0,  1701,
       0,     0,  1707,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1711,     0,     0,     0,     0,     0,     0,     0,  1713,
       0,     0,     0,     0,  1709,     0,     0,  1715,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1719,     0,     0,     0,
       0,     0,     0,     0,  1721,     0,     0,     0,     0,  1717,
       0,     0,  1723,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1727,     0,     0,     0,     0,     0,     0,     0,  1729,
       0,     0,     0,     0,  1725,     0,     0,  1731,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1735,     0,     0,     0,
       0,     0,     0,     0,  1737,     0,     0,     0,     0,  1733,
       0,     0,  1739,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1743,     0,     0,     0,     0,     0,     0,     0,  1745,
       0,     0,     0,     0,  1741,     0,     0,  1747,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1751,     0,     0,     0,
       0,     0,     0,     0,  1753,     0,     0,     0,     0,  1749,
       0,     0,  1755,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1759,     0,     0,     0,     0,     0,     0,     0,  1761,
       0,     0,     0,     0,  1757,     0,     0,  1763,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1767,     0,     0,     0,
       0,     0,     0,     0,  1769,     0,     0,     0,     0,  1765,
       0,     0,  1771,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1775,     0,     0,     0,     0,     0,     0,     0,  1777,
       0,     0,     0,     0,  1773,     0,     0,  1779,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1783,     0,     0,     0,
       0,     0,     0,     0,  1785,     0,     0,     0,     0,  1781,
       0,     0,  1787,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1791,     0,     0,     0,     0,     0,     0,     0,  1793,
       0,     0,     0,     0,  1789,     0,     0,  1795,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1799,     0,     0,     0,
       0,     0,     0,     0,  1801,     0,     0,     0,     0,  1797,
       0,     0,  1803,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1807,     0,     0,     0,     0,     0,     0,     0,  1809,
       0,     0,     0,     0,  1805,     0,     0,  1811,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1815,     0,     0,     0,
       0,     0,     0,     0,  1817,     0,     0,     0,     0,  1813,
       0,     0,  1819,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1823,     0,     0,     0,     0,     0,     0,     0,  1825,
       0,     0,     0,     0,  1821,     0,     0,  1827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1831,     0,     0,     0,
       0,     0,     0,     0,  1833,     0,     0,     0,     0,  1829,
       0,     0,  1835,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1839,     0,     0,     0,     0,     0,     0,     0,  1841,
       0,     0,     0,     0,  1837,     0,     0,  1843,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1847,     0,     0,     0,
       0,     0,     0,     0,  1849,     0,     0,     0,     0,  1845,
       0,     0,  1851,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1855,     0,     0,     0,     0,     0,     0,     0,  1857,
       0,     0,     0,     0,  1853,     0,     0,  1859,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1863,     0,     0,     0,
       0,     0,     0,     0,  1865,     0,     0,     0,     0,  1861,
       0,     0,  1867,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1871,     0,     0,     0,     0,     0,     0,     0,  1873,
       0,     0,     0,     0,  1869,     0,     0,  1875,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1879,     0,     0,     0,
       0,     0,     0,     0,  1881,     0,     0,     0,     0,  1877,
       0,     0,  1883,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1887,     0,     0,     0,     0,     0,     0,     0,  1889,
       0,     0,     0,     0,  1885,     0,     0,  1891,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1895,     0,     0,     0,
       0,     0,     0,     0,  1897,     0,     0,     0,     0,  1893,
       0,     0,  1899,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1903,     0,     0,     0,     0,     0,     0,     0,  1905,
       0,     0,     0,     0,  1901,     0,     0,  1907,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1911,     0,     0,     0,
       0,     0,     0,     0,  1913,     0,     0,     0,     0,  1909,
       0,     0,  1915,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1919,     0,     0,     0,     0,     0,     0,     0,  1921,
       0,     0,     0,     0,  1917,     0,     0,  1923,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1927,     0,     0,     0,
       0,     0,     0,     0,  1929,     0,     0,     0,     0,  1925,
       0,     0,  1931,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1935,     0,     0,     0,     0,     0,     0,     0,  1937,
       0,     0,     0,     0,  1933,     0,     0,  1939,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1943,     0,     0,     0,
       0,     0,     0,     0,  1945,     0,     0,     0,     0,  1941,
       0,     0,  1947,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1951,     0,     0,     0,     0,     0,     0,     0,  1953,
       0,     0,     0,     0,  1949,     0,     0,  1955,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1959,     0,     0,     0,
       0,     0,     0,     0,  1961,     0,     0,     0,     0,  1957,
       0,     0,  1963,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1967,     0,     0,     0,     0,     0,     0,     0,  1969,
       0,     0,     0,     0,  1965,     0,     0,  1971,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1975,     0,     0,     0,
       0,     0,     0,     0,  1977,     0,     0,     0,     0,  1973,
       0,     0,  1979,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1983,     0,     0,     0,     0,     0,     0,     0,  1985,
       0,     0,     0,     0,  1981,     0,     0,  1987,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1991,     0,     0,     0,
       0,     0,     0,     0,  1993,     0,     0,     0,     0,  1989,
       0,     0,  1995,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1999,     0,     0,     0,     0,     0,     0,     0,  2001,
       0,     0,     0,     0,  1997,     0,     0,  2003,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2007,     0,     0,     0,
       0,     0,     0,     0,  2009,     0,     0,     0,     0,  2005,
       0,     0,  2011,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2015,     0,     0,     0,     0,     0,     0,     0,  2017,
       0,     0,     0,     0,  2013,     0,     0,  2019,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2023,     0,     0,     0,
       0,     0,     0,     0,  2025,     0,     0,     0,     0,  2021,
       0,     0,  2027,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2031,     0,     0,     0,     0,     0,     0,     0,  2033,
       0,     0,     0,     0,  2029,     0,     0,  2035,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2039,     0,     0,     0,
       0,     0,     0,     0,  2041,     0,     0,     0,     0,  2037,
       0,     0,  2043,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2047,     0,     0,     0,     0,     0,     0,     0,  2049,
       0,     0,     0,     0,  2045,     0,     0,  2051,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2055,     0,     0,     0,
       0,     0,     0,     0,  2057,     0,     0,     0,     0,  2053,
       0,     0,  2059,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2063,     0,     0,     0,     0,     0,     0,     0,  2065,
       0,     0,     0,     0,  2061,     0,     0,  2067,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2071,     0,     0,     0,
       0,     0,     0,     0,  2073,     0,     0,     0,     0,  2069,
       0,     0,  2075,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2079,     0,     0,     0,     0,     0,     0,     0,  2081,
       0,     0,     0,     0,  2077,     0,     0,  2083,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2087,     0,     0,     0,
       0,     0,     0,     0,  2089,     0,     0,     0,     0,  2085,
       0,     0,  2091,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2095,     0,     0,     0,     0,     0,     0,     0,  2097,
       0,     0,     0,     0,  2093,     0,     0,  2099,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2103,     0,     0,     0,
       0,     0,     0,     0,  2105,     0,     0,     0,     0,  2101,
       0,     0,  2107,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2111,     0,     0,     0,     0,     0,     0,     0,  2113,
       0,     0,     0,     0,  2109,     0,     0,  2115,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2119,     0,     0,     0,
       0,     0,     0,     0,  2121,     0,     0,     0,     0,  2117,
       0,     0,  2123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2127,     0,     0,     0,     0,     0,     0,     0,  2129,
       0,     0,     0,     0,  2125,     0,     0,  2131,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2135,     0,     0,     0,
       0,     0,     0,     0,  2137,     0,     0,     0,     0,  2133,
       0,     0,  2139,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2143,     0,     0,     0,     0,     0,     0,     0,  2145,
       0,     0,     0,     0,  2141,     0,     0,  2147,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2151,     0,     0,     0,
       0,     0,     0,     0,  2153,     0,     0,     0,     0,  2149,
       0,     0,  2155,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2159,     0,     0,     0,     0,     0,     0,     0,  2161,
       0,     0,     0,     0,  2157,     0,     0,  2163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2167,     0,     0,     0,
       0,     0,     0,     0,  2169,     0,     0,     0,     0,  2165,
       0,     0,  2171,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2175,     0,     0,     0,     0,     0,     0,     0,  2177,
       0,     0,     0,     0,  2173,     0,     0,  2179,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2183,     0,     0,     0,
       0,     0,     0,     0,  2185,     0,     0,     0,     0,  2181,
       0,     0,  2187,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2191,     0,     0,     0,     0,     0,     0,     0,  2193,
       0,     0,     0,     0,  2189,     0,     0,  2195,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2199,     0,     0,     0,
       0,     0,     0,     0,  2201,     0,     0,     0,     0,  2197,
       0,     0,  2203,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2207,     0,     0,     0,     0,     0,     0,     0,  2209,
       0,     0,     0,     0,  2205,     0,     0,  2211,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2215,     0,     0,     0,
       0,     0,     0,     0,  2217,     0,     0,     0,     0,  2213,
       0,     0,  2219,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2223,     0,     0,     0,     0,     0,     0,     0,  2225,
       0,     0,     0,     0,  2221,     0,     0,  2227,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2231,     0,     0,     0,
       0,     0,     0,     0,  2233,     0,     0,     0,     0,  2229,
       0,     0,  2235,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2239,     0,     0,     0,     0,     0,     0,     0,  2241,
       0,     0,     0,     0,  2237,     0,     0,  2243,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2247,     0,     0,     0,
       0,     0,     0,     0,  2249,     0,     0,     0,     0,  2245,
       0,     0,  2251,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2255,     0,     0,     0,     0,     0,     0,     0,  2257,
       0,     0,     0,     0,  2253,     0,     0,  2259,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2263,     0,     0,     0,
       0,     0,     0,     0,  2265,     0,     0,     0,     0,  2261,
       0,     0,  2267,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2271,     0,     0,     0,     0,     0,     0,     0,  2273,
       0,     0,     0,     0,  2269,     0,     0,  2275,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2279,     0,     0,     0,
       0,     0,     0,     0,  2281,     0,     0,     0,     0,  2277,
       0,     0,  2283,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2287,     0,     0,     0,     0,     0,     0,     0,  2289,
       0,     0,     0,     0,  2285,     0,     0,  2291,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2295,     0,     0,     0,
       0,     0,     0,     0,  2297,     0,     0,     0,     0,  2293,
       0,     0,  2299,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2303,     0,     0,     0,     0,     0,     0,     0,  2305,
       0,     0,     0,     0,  2301,     0,     0,  2307,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2311,     0,     0,     0,
       0,     0,     0,     0,  2313,     0,     0,     0,     0,  2309,
       0,     0,  2315,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2319,     0,     0,     0,     0,     0,     0,     0,  2321,
       0,     0,     0,     0,  2317,     0,     0,  2323,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2327,     0,     0,     0,
       0,     0,     0,     0,  2329,     0,     0,     0,     0,  2325,
       0,     0,  2331,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2335,     0,     0,     0,     0,     0,     0,     0,  2337,
       0,     0,     0,     0,  2333,     0,     0,  2339,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2343,     0,     0,     0,
       0,     0,     0,     0,  2345,     0,     0,     0,     0,  2341,
       0,     0,  2347,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2351,     0,     0,     0,     0,     0,     0,     0,  2353,
       0,     0,     0,     0,  2349,     0,     0,  2355,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2359,     0,     0,     0,
       0,     0,     0,     0,  2361,     0,     0,     0,     0,  2357,
       0,     0,  2363,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2367,     0,     0,     0,     0,     0,     0,     0,  2369,
       0,     0,     0,     0,  2365,     0,     0,  2371,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2375,     0,     0,     0,
       0,     0,     0,     0,  2377,     0,     0,     0,     0,  2373,
       0,     0,  2379,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2383,     0,     0,     0,     0,     0,     0,     0,  2385,
       0,     0,     0,     0,  2381,     0,     0,  2387,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2391,     0,     0,     0,
       0,     0,     0,     0,  2393,     0,     0,     0,     0,  2389,
       0,     0,  2395,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2399,     0,     0,     0,     0,     0,     0,     0,  2401,
       0,     0,     0,     0,  2397,     0,     0,  2403,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2407,     0,     0,     0,
       0,     0,     0,     0,  2409,     0,     0,     0,     0,  2405,
       0,     0,  2411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2415,     0,     0,     0,     0,     0,     0,     0,  2417,
       0,     0,     0,     0,  2413,     0,     0,  2419,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2423,     0,     0,     0,
       0,     0,     0,     0,  2425,     0,     0,     0,     0,  2421,
       0,     0,  2427,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2431,     0,     0,     0,     0,     0,     0,     0,  2433,
       0,     0,     0,     0,  2429,     0,     0,  2435,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2439,     0,     0,     0,
       0,     0,     0,     0,  2441,     0,     0,     0,     0,  2437,
       0,     0,  2443,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2447,     0,     0,     0,     0,     0,     0,     0,  2449,
       0,     0,     0,     0,  2445,     0,     0,  2451,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2455,     0,     0,     0,
       0,     0,     0,     0,  2457,     0,     0,     0,     0,  2453,
       0,     0,  2459,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2463,     0,     0,     0,     0,     0,     0,     0,  2465,
       0,     0,     0,     0,  2461,     0,     0,  2467,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2471,     0,     0,     0,
       0,     0,     0,     0,  2473,     0,     0,     0,     0,  2469,
       0,     0,  2475,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2479,     0,     0,     0,     0,     0,     0,     0,  2481,
       0,     0,     0,     0,  2477,     0,     0,  2483,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2487,     0,     0,     0,
       0,     0,     0,     0,  2489,     0,     0,     0,     0,  2485,
       0,     0,  2491,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2495,     0,     0,     0,     0,     0,     0,     0,  2497,
       0,     0,     0,     0,  2493,     0,     0,  2499,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2503,     0,     0,     0,
       0,     0,     0,     0,  2505,     0,     0,     0,     0,  2501,
       0,     0,  2507,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2511,     0,     0,     0,     0,     0,     0,     0,  2513,
       0,     0,     0,     0,  2509,     0,     0,  2515,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2519,     0,     0,     0,
       0,     0,     0,     0,  2521,     0,     0,     0,     0,  2517,
       0,     0,  2523,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2527,     0,     0,     0,     0,     0,     0,     0,  2529,
       0,     0,     0,     0,  2525,     0,     0,  2531,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2535,     0,     0,     0,
       0,     0,     0,     0,  2537,     0,     0,     0,     0,  2533,
       0,     0,  2539,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2543,     0,     0,     0,     0,     0,     0,     0,  2545,
       0,     0,     0,     0,  2541,     0,     0,  2547,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2551,     0,     0,     0,
       0,     0,     0,     0,  2553,     0,     0,     0,     0,  2549,
       0,     0,  2555,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2559,     0,     0,     0,     0,     0,     0,     0,  2561,
       0,     0,     0,     0,  2557,     0,     0,  2563,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2567,     0,     0,     0,
       0,     0,     0,     0,  2569,     0,     0,     0,     0,  2565,
       0,     0,  2571,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2575,     0,     0,     0,     0,     0,     0,     0,  2577,
       0,     0,     0,     0,  2573,     0,     0,  2579,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2583,     0,     0,     0,
       0,     0,     0,     0,  2585,     0,     0,     0,     0,  2581,
       0,     0,  2587,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2591,     0,     0,     0,     0,     0,     0,     0,  2593,
       0,     0,     0,     0,  2589,     0,     0,  2595,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2599,     0,     0,     0,
       0,     0,     0,     0,  2601,     0,     0,     0,     0,  2597,
       0,     0,  2603,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2607,     0,     0,     0,     0,     0,     0,     0,  2609,
       0,     0,     0,     0,  2605,     0,     0,  2611,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2615,     0,     0,     0,
       0,     0,     0,     0,  2617,     0,     0,     0,     0,  2613,
       0,     0,  2619,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2623,     0,     0,     0,     0,     0,     0,     0,  2625,
       0,     0,     0,     0,  2621,     0,     0,  2627,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2631,     0,     0,     0,
       0,     0,     0,     0,  2633,     0,     0,     0,     0,  2629,
       0,     0,  2635,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2639,     0,     0,     0,     0,     0,     0,     0,  2641,
       0,     0,     0,     0,  2637,     0,     0,  2643,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2647,     0,     0,     0,
       0,     0,     0,     0,  2649,     0,     0,     0,     0,  2645,
       0,     0,  2651,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2655,     0,     0,     0,     0,     0,     0,     0,  2657,
       0,     0,     0,     0,  2653,     0,     0,  2659,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2663,     0,     0,     0,
       0,     0,     0,     0,  2665,     0,     0,     0,     0,  2661,
       0,     0,  2667,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2671,     0,     0,     0,     0,     0,     0,     0,  2673,
       0,     0,     0,     0,  2669,     0,     0,  2675,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2679,     0,     0,     0,
       0,     0,     0,     0,  2681,     0,     0,     0,     0,  2677,
       0,     0,  2683,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2687,     0,     0,     0,     0,     0,     0,     0,  2689,
       0,     0,     0,     0,  2685,     0,     0,  2691,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2695,     0,     0,     0,
       0,     0,     0,     0,  2697,     0,     0,     0,     0,  2693,
       0,     0,  2699,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2703,     0,     0,     0,     0,     0,     0,     0,  2705,
       0,     0,     0,     0,  2701,     0,     0,  2707,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2711,     0,     0,     0,
       0,     0,     0,     0,  2713,     0,     0,     0,     0,  2709,
       0,     0,  2715,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2719,     0,     0,     0,     0,     0,     0,     0,  2721,
       0,     0,     0,     0,  2717,     0,     0,  2723,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2727,     0,     0,     0,
       0,     0,     0,     0,  2729,     0,     0,     0,     0,  2725,
       0,     0,  2731,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2735,     0,     0,     0,     0,     0,     0,     0,  2737,
       0,     0,     0,     0,  2733,     0,     0,  2739,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2743,     0,     0,     0,
       0,     0,     0,     0,  2745,     0,     0,     0,     0,  2741,
       0,     0,  2747,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2751,     0,     0,     0,     0,     0,     0,     0,  2753,
       0,     0,     0,     0,  2749,     0,     0,  2755,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2759,     0,     0,     0,
       0,     0,     0,     0,  2761,     0,     0,     0,     0,  2757,
       0,     0,  2763,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2767,     0,     0,     0,     0,     0,     0,     0,  2769,
       0,     0,     0,     0,  2765,     0,     0,  2771,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2775,     0,     0,     0,
       0,     0,     0,     0,  2777,     0,     0,     0,     0,  2773,
       0,     0,  2779,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   745,     0,     0,     0,
       0,     0,   747,     0,   749,     0,     0,     0,     0,     0,
       0,     0,   751,     0,  2781,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     803,     0,     0,     0,     0,     0,   805,     0,   807,     0,
       0,     0,     0,     0,     0,     0,   809,     0,     0,     0,
       0,     0,     0,     0,   753,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   961,     0,     0,     0,     0,     0,
     963,     0,   965,     0,     0,     0,     0,     0,     0,     0,
     967,     0,     0,     0,     0,     0,     0,     0,   811,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   987,     0,
       0,     0,     0,     0,   989,     0,   991,     0,     0,     0,
       0,     0,     0,     0,   993,     0,     0,     0,     0,     0,
       0,     0,   969,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   997,     0,     0,     0,     0,     0,   999,     0,
    1001,     0,     0,     0,     0,     0,     0,     0,  1003,     0,
       0,     0,     0,     0,     0,     0,   995,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1039,     0,     0,     0,
       0,     0,  1041,     0,  1043,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,     0,     0,     0,     0,     0,     0,
    1005,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1049,     0,     0,     0,     0,     0,  1051,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,  1055,     0,     0,     0,
       0,     0,     0,     0,  1047,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1059,     0,     0,     0,     0,     0,
    1061,     0,  1063,     0,     0,     0,     0,     0,     0,     0,
    1065,     0,     0,     0,     0,     0,     0,     0,  1057,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1197,     0,
       0,     0,     0,     0,  1199,     0,  1201,     0,     0,     0,
       0,     0,     0,     0,  1203,     0,     0,     0,     0,     0,
       0,     0,  1067,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1215,     0,     0,     0,     0,     0,  1217,     0,
    1219,     0,     0,     0,     0,     0,     0,     0,  1221,     0,
       0,     0,     0,     0,     0,     0,  1205,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1225,     0,     0,     0,
       0,     0,  1227,     0,  1229,     0,     0,     0,     0,     0,
       0,     0,  1231,     0,     0,     0,     0,     0,     0,     0,
    1223,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1235,     0,     0,     0,     0,     0,  1237,     0,  1239,     0,
       0,     0,     0,     0,     0,     0,  1241,     0,     0,     0,
       0,     0,     0,     0,  1233,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1445,     0,     0,     0,     0,     0,
    1447,     0,  1449,     0,     0,     0,     0,     0,     0,     0,
    1451,     0,     0,     0,     0,     0,     0,     0,  1243,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1453
};

/* YYCONFL[I] -- lists of conflicting rule numbers, each terminated by
   0, pointed into by YYCONFLP.  */
static const short yyconfl[] =
{
       0,   604,     0,   604,     0,   604,     0,   604,     0,   586,
       0,   586,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   570,     0,   570,     0,   570,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,    42,
       0,   172,     0,   172,     0,   172,     0,   172,     0,   172,
       0,   570,     0,   570,     0,   570,     0,    99,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   138,     0,   196,
       0,   612,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   175,     0,   570,     0,   570,     0,   570,     0,   595,
       0,   102,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,    42,
       0,   604,     0,   339,     0,   604,     0,   604,     0,   604,
       0,   609,     0,    99,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   196,     0,   612,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   185,     0,   175,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   551,     0,   604,
       0,   339,     0,   604,     0,   604,     0,   604,     0,   595,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   102,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   185,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   551,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   304,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   509,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   339,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   339,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   304,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   509,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   339,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   339,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   339,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   339,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0
};



YYSTYPE yylval;

int yynerrs;
int yychar;

enum { YYENOMEM = -2 };

typedef enum { yyok, yyaccept, yyabort, yyerr, yynomem } YYRESULTTAG;

#define YYCHK(YYE)                              \
  do {                                          \
    YYRESULTTAG yychk_flag = YYE;               \
    if (yychk_flag != yyok)                     \
      return yychk_flag;                        \
  } while (0)

/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   SIZE_MAX < YYMAXDEPTH * sizeof (GLRStackItem)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif

/* Minimum number of free items on the stack allowed after an
   allocation.  This is to allow allocation and initialization
   to be completed by functions that call yyexpandGLRStack before the
   stack is expanded, thus insuring that all necessary pointers get
   properly redirected to new data.  */
#define YYHEADROOM 2

#ifndef YYSTACKEXPANDABLE
#  define YYSTACKEXPANDABLE 1
#endif

#if YYSTACKEXPANDABLE
# define YY_RESERVE_GLRSTACK(Yystack)                   \
  do {                                                  \
    if (Yystack->yyspaceLeft < YYHEADROOM)              \
      yyexpandGLRStack (Yystack);                       \
  } while (0)
#else
# define YY_RESERVE_GLRSTACK(Yystack)                   \
  do {                                                  \
    if (Yystack->yyspaceLeft < YYHEADROOM)              \
      yyMemoryExhausted (Yystack);                      \
  } while (0)
#endif

/** State numbers. */
typedef int yy_state_t;

/** Rule numbers. */
typedef int yyRuleNum;

/** Item references. */
typedef short yyItemNum;

typedef struct yyGLRState yyGLRState;
typedef struct yyGLRStateSet yyGLRStateSet;
typedef struct yySemanticOption yySemanticOption;
typedef union yyGLRStackItem yyGLRStackItem;
typedef struct yyGLRStack yyGLRStack;

struct yyGLRState
{
  /** Type tag: always true.  */
  yybool yyisState;
  /** Type tag for yysemantics.  If true, yyval applies, otherwise
   *  yyfirstVal applies.  */
  yybool yyresolved;
  /** Number of corresponding LALR(1) machine state.  */
  yy_state_t yylrState;
  /** Preceding state in this stack */
  yyGLRState* yypred;
  /** Source position of the last token produced by my symbol */
  YYPTRDIFF_T yyposn;
  union {
    /** First in a chain of alternative reductions producing the
     *  nonterminal corresponding to this state, threaded through
     *  yynext.  */
    yySemanticOption* yyfirstVal;
    /** Semantic value for this state.  */
    YYSTYPE yyval;
  } yysemantics;
};

struct yyGLRStateSet
{
  yyGLRState** yystates;
  /** During nondeterministic operation, yylookaheadNeeds tracks which
   *  stacks have actually needed the current lookahead.  During deterministic
   *  operation, yylookaheadNeeds[0] is not maintained since it would merely
   *  duplicate yychar != YYEMPTY.  */
  yybool* yylookaheadNeeds;
  YYPTRDIFF_T yysize;
  YYPTRDIFF_T yycapacity;
};

struct yySemanticOption
{
  /** Type tag: always false.  */
  yybool yyisState;
  /** Rule number for this reduction */
  yyRuleNum yyrule;
  /** The last RHS state in the list of states to be reduced.  */
  yyGLRState* yystate;
  /** The lookahead for this reduction.  */
  int yyrawchar;
  YYSTYPE yyval;
  /** Next sibling in chain of options.  To facilitate merging,
   *  options are chained in decreasing order by address.  */
  yySemanticOption* yynext;
};

/** Type of the items in the GLR stack.  The yyisState field
 *  indicates which item of the union is valid.  */
union yyGLRStackItem {
  yyGLRState yystate;
  yySemanticOption yyoption;
};

struct yyGLRStack {
  int yyerrState;


  YYJMP_BUF yyexception_buffer;
  yyGLRStackItem* yyitems;
  yyGLRStackItem* yynextFree;
  YYPTRDIFF_T yyspaceLeft;
  yyGLRState* yysplitPoint;
  yyGLRState* yylastDeleted;
  yyGLRStateSet yytops;
};

#if YYSTACKEXPANDABLE
static void yyexpandGLRStack (yyGLRStack* yystackp);
#endif

_Noreturn static void
yyFail (yyGLRStack* yystackp, const char* yymsg)
{
  if (yymsg != YY_NULLPTR)
    yyerror (yymsg);
  YYLONGJMP (yystackp->yyexception_buffer, 1);
}

_Noreturn static void
yyMemoryExhausted (yyGLRStack* yystackp)
{
  YYLONGJMP (yystackp->yyexception_buffer, 2);
}

/** Accessing symbol of state YYSTATE.  */
static inline yysymbol_kind_t
yy_accessing_symbol (yy_state_t yystate)
{
  return YY_CAST (yysymbol_kind_t, yystos[yystate]);
}

#if 1
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "SINGLE_COMMENT",
  "CONSTANT", "FUNCTION", "CLASS", "ENUM", "CONDITIONAL", "CODE",
  "ATTRIBUTETOK", "RUNTIME", "STATIC", "AUTO", "AUTOTYPE", "TEMPLATE",
  "NAMESPACE", "OPERATORNAME", "OVERRIDE", "VIRTUAL", "PURE", "AS", "IN",
  "DISPLAY", "RETURN", "FOR", "IF", "ELSEIF", "ELSE", "INLINE",
  "CONSTRUCTOR", "FILE_", "PROGRAM_", "IMPORT", "PUBLIC", "PROTECTED",
  "PRIVATE", "INHERIT", "COMPOSITE", "LEFT_BRACKET", "RIGHT_BRACKET",
  "LEFT_SQUARE_BRACKET", "RIGHT_SQUARE_BRACKET", "LEFT_PARANTHESIS",
  "RIGHT_PARANTHESIS", "COLON", "SEMICOLON", "COMMA", "DOT", "LTEQ",
  "GTEQ", "LT", "GT", "PLUSEQ", "MINUSEQ", "MULTIPLYEQ", "DIVIDEEQ",
  "EQEQ", "EQ", "NOTEQ", "NOT", "PLUSPLUS", "PLUS", "MINUSMINUS", "MINUS",
  "DIVIDE", "MULTIPLY", "VARNAME", "NUMBER", "DECIMAL", "TEXT",
  "ESCAPE_CHARS", "$accept", "program", "root_program", "standard_block",
  "deamerreserved_star__stmt__", "stmt", "import_statement", "file_import",
  "mutation_group", "deamerreserved_arrow__symbol_reference__",
  "deamerreserved_star__COMMA__symbol_reference__", "assignment",
  "assignment_operator", "conditional_if", "conditional_else_if",
  "conditional_else", "conditional_block",
  "template_conditional_function_declaration",
  "deamerreserved_arrow__template_parameter__",
  "deamerreserved_star__COMMA__template_parameter__",
  "deamerreserved_arrow__conditional_function_argument__",
  "deamerreserved_star__COMMA__conditional_function_argument__",
  "deamerreserved_arrow__function_argument__",
  "deamerreserved_star__COMMA__function_argument__",
  "conditional_function_declaration", "template_code_function_declaration",
  "code_function_declaration", "return_statement", "symbol_increase",
  "symbol_decrease", "expression", "expression_no_value", "t_expression",
  "f_expression", "display_call", "for_loop", "for_iteration_loop",
  "for_each_loop", "for_variable", "iterator", "for_block",
  "namespace_declaration", "deamerreserved_arrow__namespace_name__",
  "deamerreserved_star__DOT__namespace_name__", "namespace_block",
  "namespace_name", "inline_class_declaration",
  "deamerreserved_arrow__inline_class_declaration_composite__",
  "deamerreserved_star__COMMA__inline_class_declaration_composite__",
  "inline_class_declaration_composite",
  "deamerreserved_arrow__inline_class_declaration_composite_alias__",
  "deamerreserved_star__COMMA__inline_class_declaration_composite_alias__",
  "inline_class_declaration_composite_alias",
  "inline_class_declaration_composite_name", "created_class_name",
  "code_block", "deamerreserved_arrow__code_block_input_argument__",
  "deamerreserved_star__COMMA__code_block_input_argument__",
  "code_block_input_argument", "code_block_argument",
  "code_block_argument_name", "code_block_program", "variable_declaration",
  "array_declaration", "variable_name", "template_function_declaration",
  "function_declaration", "trailing_return_type", "return_type",
  "conditional_function_argument", "function_argument",
  "function_argument_type", "function_argument_name",
  "condition_modifier_function_call",
  "deamerreserved_arrow__condition_modifier_argument__",
  "deamerreserved_star__COMMA__condition_modifier_argument__",
  "condition_modifier_name", "condition_modifier_argument",
  "function_body", "function_name", "template_class_declaration",
  "template_parameter", "template_parameter_name", "class_declaration",
  "deamerreserved_arrow__class_inherit_base__",
  "deamerreserved_star__COMMA__class_inherit_base__", "class_name",
  "execution_keyword_permutation", "class_body",
  "deamerreserved_star__class_stmt__", "class_stmt",
  "class_stmt_member_field_declaration", "member_field_name",
  "class_stmt_member_function", "class_stmt_member_template_function",
  "template_class_stmt_constructor", "class_stmt_constructor",
  "accessibility", "class_inherit_base", "inherit_base",
  "inherit_base_name", "compound_base",
  "deamerreserved_arrow__compound_base_alias__",
  "deamerreserved_star__COMMA__compound_base_alias__",
  "compound_base_name", "compound_base_alias", "attribute_section",
  "deamerreserved_arrow__attribute__",
  "deamerreserved_star__deamerreserved_optional__COMMA____attribute__",
  "attribute", "deamerreserved_arrow__attribute_argument__",
  "deamerreserved_star__COMMA__attribute_argument__",
  "deamerreserved_arrow__attribute_template_argument__",
  "deamerreserved_star__COMMA__attribute_template_argument__",
  "attribute_argument", "attribute_template_argument",
  "attribute_declaration",
  "deamerreserved_arrow__attribute_function_argument__",
  "deamerreserved_star__COMMA__attribute_function_argument__",
  "attribute_function_argument", "attribute_name", "enum_declaration",
  "deamerreserved_star__enumeration__", "enum_name", "enumeration",
  "enumeration_name", "enumeration_value", "symbol_reference",
  "deamerreserved_arrow__symbol__",
  "deamerreserved_star__DOT__symbol_secondary__", "symbol_secondary",
  "deamerreserved_star__symbol_access__", "symbol", "symbol_access",
  "auto_deduce_array", "symbol_name_secondary", "symbol_name",
  "function_access", "deamerreserved_arrow__expression__",
  "deamerreserved_star__COMMA__expression__", "index_access",
  "anonymous_access", "type", "deamerreserved_star__type_modifier__",
  "type_modifier", "value_list", "deamerreserved_arrow__full_value__",
  "deamerreserved_star__COMMA__full_value__", "full_value", "value",
  "tuple", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

/** Left-hand-side symbol for rule #YYRULE.  */
static inline yysymbol_kind_t
yylhsNonterm (yyRuleNum yyrule)
{
  return YY_CAST (yysymbol_kind_t, yyr1[yyrule]);
}

#if YYDEBUG

# ifndef YYFPRINTF
#  define YYFPRINTF fprintf
# endif

# define YY_FPRINTF                             \
  YY_IGNORE_USELESS_CAST_BEGIN YY_FPRINTF_

# define YY_FPRINTF_(Args)                      \
  do {                                          \
    YYFPRINTF Args;                             \
    YY_IGNORE_USELESS_CAST_END                  \
  } while (0)

# define YY_DPRINTF                             \
  YY_IGNORE_USELESS_CAST_BEGIN YY_DPRINTF_

# define YY_DPRINTF_(Args)                      \
  do {                                          \
    if (yydebug)                                \
      YYFPRINTF Args;                           \
    YY_IGNORE_USELESS_CAST_END                  \
  } while (0)





/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  yy_symbol_value_print (yyo, yykind, yyvaluep);
  YYFPRINTF (yyo, ")");
}

# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                  \
  do {                                                                  \
    if (yydebug)                                                        \
      {                                                                 \
        YY_FPRINTF ((stderr, "%s ", Title));                            \
        yy_symbol_print (stderr, Kind, Value);        \
        YY_FPRINTF ((stderr, "\n"));                                    \
      }                                                                 \
  } while (0)

static inline void
yy_reduce_print (yybool yynormal, yyGLRStackItem* yyvsp, YYPTRDIFF_T yyk,
                 yyRuleNum yyrule);

# define YY_REDUCE_PRINT(Args)          \
  do {                                  \
    if (yydebug)                        \
      yy_reduce_print Args;             \
  } while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;

static void yypstack (yyGLRStack* yystackp, YYPTRDIFF_T yyk)
  YY_ATTRIBUTE_UNUSED;
static void yypdumpstack (yyGLRStack* yystackp)
  YY_ATTRIBUTE_UNUSED;

#else /* !YYDEBUG */

# define YY_DPRINTF(Args) do {} while (yyfalse)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_REDUCE_PRINT(Args)

#endif /* !YYDEBUG */

#ifndef yystrlen
# define yystrlen(S) (YY_CAST (YYPTRDIFF_T, strlen (S)))
#endif

#ifndef yystpcpy
# if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#  define yystpcpy stpcpy
# else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
# endif
#endif

#ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYPTRDIFF_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYPTRDIFF_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            else
              goto append;

          append:
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (yyres)
    return yystpcpy (yyres, yystr) - yyres;
  else
    return yystrlen (yystr);
}
#endif


/** Fill in YYVSP[YYLOW1 .. YYLOW0-1] from the chain of states starting
 *  at YYVSP[YYLOW0].yystate.yypred.  Leaves YYVSP[YYLOW1].yystate.yypred
 *  containing the pointer to the next state in the chain.  */
static void yyfillin (yyGLRStackItem *, int, int) YY_ATTRIBUTE_UNUSED;
static void
yyfillin (yyGLRStackItem *yyvsp, int yylow0, int yylow1)
{
  int i;
  yyGLRState *s = yyvsp[yylow0].yystate.yypred;
  for (i = yylow0-1; i >= yylow1; i -= 1)
    {
#if YYDEBUG
      yyvsp[i].yystate.yylrState = s->yylrState;
#endif
      yyvsp[i].yystate.yyresolved = s->yyresolved;
      if (s->yyresolved)
        yyvsp[i].yystate.yysemantics.yyval = s->yysemantics.yyval;
      else
        /* The effect of using yyval or yyloc (in an immediate rule) is
         * undefined.  */
        yyvsp[i].yystate.yysemantics.yyfirstVal = YY_NULLPTR;
      s = yyvsp[i].yystate.yypred = s->yypred;
    }
}


/** If yychar is empty, fetch the next token.  */
static inline yysymbol_kind_t
yygetToken (int *yycharp)
{
  yysymbol_kind_t yytoken;
  if (*yycharp == YYEMPTY)
    {
      YY_DPRINTF ((stderr, "Reading a token\n"));
      *yycharp = yylex ();
    }
  if (*yycharp <= YYEOF)
    {
      *yycharp = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YY_DPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (*yycharp);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }
  return yytoken;
}

/* Do nothing if YYNORMAL or if *YYLOW <= YYLOW1.  Otherwise, fill in
 * YYVSP[YYLOW1 .. *YYLOW-1] as in yyfillin and set *YYLOW = YYLOW1.
 * For convenience, always return YYLOW1.  */
static inline int yyfill (yyGLRStackItem *, int *, int, yybool)
     YY_ATTRIBUTE_UNUSED;
static inline int
yyfill (yyGLRStackItem *yyvsp, int *yylow, int yylow1, yybool yynormal)
{
  if (!yynormal && yylow1 < *yylow)
    {
      yyfillin (yyvsp, *yylow, yylow1);
      *yylow = yylow1;
    }
  return yylow1;
}

/** Perform user action for rule number YYN, with RHS length YYRHSLEN,
 *  and top stack item YYVSP.  YYLVALP points to place to put semantic
 *  value ($$), and yylocp points to place for location information
 *  (@$).  Returns yyok for normal return, yyaccept for YYACCEPT,
 *  yyerr for YYERROR, yyabort for YYABORT, yynomem for YYNOMEM.  */
static YYRESULTTAG
yyuserAction (yyRuleNum yyrule, int yyrhslen, yyGLRStackItem* yyvsp,
              yyGLRStack* yystackp, YYPTRDIFF_T yyk,
              YYSTYPE* yyvalp)
{
  const yybool yynormal YY_ATTRIBUTE_UNUSED = yystackp->yysplitPoint == YY_NULLPTR;
  int yylow = 1;
  YY_USE (yyvalp);
  YY_USE (yyk);
  YY_USE (yyrhslen);
# undef yyerrok
# define yyerrok (yystackp->yyerrState = 0)
# undef YYACCEPT
# define YYACCEPT return yyaccept
# undef YYABORT
# define YYABORT return yyabort
# undef YYNOMEM
# define YYNOMEM return yynomem
# undef YYERROR
# define YYERROR return yyerrok, yyerr
# undef YYRECOVERING
# define YYRECOVERING() (yystackp->yyerrState != 0)
# undef yyclearin
# define yyclearin (yychar = YYEMPTY)
# undef YYFILL
# define YYFILL(N) yyfill (yyvsp, &yylow, (N), yynormal)
# undef YYBACKUP
# define YYBACKUP(Token, Value)                                              \
  return yyerror (YY_("syntax error: cannot back up")),     \
         yyerrok, yyerr

  if (yyrhslen == 0)
    *yyvalp = yyval_default;
  else
    *yyvalp = yyvsp[YYFILL (1-yyrhslen)].yystate.yysemantics.yyval;
  /* If yyk == -1, we are running a deferred action on a temporary
     stack.  In that case, YY_REDUCE_PRINT must not play with YYFILL,
     so pretend the stack is "normal". */
  YY_REDUCE_PRINT ((yynormal || yyk == -1, yyvsp, yyk, yyrule));
  switch (yyrule)
    {
  case 2: /* program: root_program  */
#line 712 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::program({::Celeste::ast::Type::program, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_root_program) });
		((*yyvalp).Celeste_program) = newNode;

		// Ignored, Deleted, tokens are deleted
		outputTree = new ::deamer::external::cpp::ast::Tree(newNode);
	}
#line 8218 "Celeste_parser.tab.c"
    break;

  case 3: /* root_program: standard_block  */
#line 723 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::root_program({::Celeste::ast::Type::root_program, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_root_program) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8229 "Celeste_parser.tab.c"
    break;

  case 4: /* standard_block: deamerreserved_star__stmt__  */
#line 733 "./Celeste_parser.y"
                                     {
		auto* const newNode = new Celeste::ast::node::standard_block({::Celeste::ast::Type::standard_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__stmt__) });
		((*yyvalp).Celeste_standard_block) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8240 "Celeste_parser.tab.c"
    break;

  case 5: /* deamerreserved_star__stmt__: stmt deamerreserved_star__stmt__  */
#line 743 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__stmt__({::Celeste::ast::Type::deamerreserved_star__stmt__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_stmt), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__stmt__) });
		((*yyvalp).Celeste_deamerreserved_star__stmt__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8251 "Celeste_parser.tab.c"
    break;

  case 6: /* deamerreserved_star__stmt__: %empty  */
#line 749 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__stmt__({::Celeste::ast::Type::deamerreserved_star__stmt__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__stmt__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8262 "Celeste_parser.tab.c"
    break;

  case 7: /* stmt: template_function_declaration  */
#line 759 "./Celeste_parser.y"
                                       {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8273 "Celeste_parser.tab.c"
    break;

  case 8: /* stmt: template_class_declaration  */
#line 765 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_class_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8284 "Celeste_parser.tab.c"
    break;

  case 9: /* stmt: function_declaration  */
#line 771 "./Celeste_parser.y"
                                {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8295 "Celeste_parser.tab.c"
    break;

  case 10: /* stmt: attribute_declaration  */
#line 777 "./Celeste_parser.y"
                                 {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_attribute_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8306 "Celeste_parser.tab.c"
    break;

  case 11: /* stmt: class_declaration  */
#line 783 "./Celeste_parser.y"
                             {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8317 "Celeste_parser.tab.c"
    break;

  case 12: /* stmt: enum_declaration  */
#line 789 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_enum_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8328 "Celeste_parser.tab.c"
    break;

  case 13: /* stmt: variable_declaration  */
#line 795 "./Celeste_parser.y"
                                {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_variable_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8339 "Celeste_parser.tab.c"
    break;

  case 14: /* stmt: inline_class_declaration  */
#line 801 "./Celeste_parser.y"
                                    {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_inline_class_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8350 "Celeste_parser.tab.c"
    break;

  case 15: /* stmt: namespace_declaration  */
#line 807 "./Celeste_parser.y"
                                 {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_namespace_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8361 "Celeste_parser.tab.c"
    break;

  case 16: /* stmt: symbol_reference SEMICOLON  */
#line 813 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8373 "Celeste_parser.tab.c"
    break;

  case 17: /* stmt: for_loop  */
#line 820 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_for_loop) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8384 "Celeste_parser.tab.c"
    break;

  case 18: /* stmt: display_call  */
#line 826 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_display_call) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8395 "Celeste_parser.tab.c"
    break;

  case 19: /* stmt: symbol_increase  */
#line 832 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_increase) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8406 "Celeste_parser.tab.c"
    break;

  case 20: /* stmt: symbol_decrease  */
#line 838 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_decrease) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8417 "Celeste_parser.tab.c"
    break;

  case 21: /* stmt: return_statement  */
#line 844 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_return_statement) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8428 "Celeste_parser.tab.c"
    break;

  case 22: /* stmt: template_code_function_declaration  */
#line 850 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_code_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8439 "Celeste_parser.tab.c"
    break;

  case 23: /* stmt: code_function_declaration  */
#line 856 "./Celeste_parser.y"
                                     {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_code_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8450 "Celeste_parser.tab.c"
    break;

  case 24: /* stmt: template_conditional_function_declaration  */
#line 862 "./Celeste_parser.y"
                                                     {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_conditional_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8461 "Celeste_parser.tab.c"
    break;

  case 25: /* stmt: conditional_function_declaration  */
#line 868 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_conditional_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8472 "Celeste_parser.tab.c"
    break;

  case 26: /* stmt: conditional_if  */
#line 874 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_conditional_if) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8483 "Celeste_parser.tab.c"
    break;

  case 27: /* stmt: conditional_else_if  */
#line 880 "./Celeste_parser.y"
                               {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_conditional_else_if) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8494 "Celeste_parser.tab.c"
    break;

  case 28: /* stmt: conditional_else  */
#line 886 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_conditional_else) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8505 "Celeste_parser.tab.c"
    break;

  case 29: /* stmt: assignment  */
#line 892 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_assignment) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8516 "Celeste_parser.tab.c"
    break;

  case 30: /* stmt: mutation_group  */
#line 898 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_mutation_group) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8527 "Celeste_parser.tab.c"
    break;

  case 31: /* stmt: import_statement  */
#line 904 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 24, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_import_statement) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8538 "Celeste_parser.tab.c"
    break;

  case 32: /* stmt: SEMICOLON  */
#line 910 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 25, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8550 "Celeste_parser.tab.c"
    break;

  case 33: /* import_statement: file_import  */
#line 921 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::import_statement({::Celeste::ast::Type::import_statement, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_file_import) });
		((*yyvalp).Celeste_import_statement) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8561 "Celeste_parser.tab.c"
    break;

  case 34: /* file_import: IMPORT FILE_ TEXT  */
#line 931 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::file_import({::Celeste::ast::Type::file_import, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::IMPORT({::Celeste::ast::Type::IMPORT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::FILE_({::Celeste::ast::Type::FILE_, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::TEXT({::Celeste::ast::Type::TEXT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_file_import) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8572 "Celeste_parser.tab.c"
    break;

  case 35: /* mutation_group: LEFT_PARANTHESIS deamerreserved_arrow__symbol_reference__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 941 "./Celeste_parser.y"
                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__symbol_reference__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8590 "Celeste_parser.tab.c"
    break;

  case 36: /* mutation_group: LEFT_PARANTHESIS deamerreserved_arrow__symbol_reference__ RIGHT_PARANTHESIS LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 954 "./Celeste_parser.y"
                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__symbol_reference__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8607 "Celeste_parser.tab.c"
    break;

  case 37: /* mutation_group: LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 966 "./Celeste_parser.y"
                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8625 "Celeste_parser.tab.c"
    break;

  case 38: /* mutation_group: LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 979 "./Celeste_parser.y"
                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8642 "Celeste_parser.tab.c"
    break;

  case 39: /* mutation_group: LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 991 "./Celeste_parser.y"
                                                                                              {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8657 "Celeste_parser.tab.c"
    break;

  case 40: /* deamerreserved_arrow__symbol_reference__: symbol_reference deamerreserved_star__COMMA__symbol_reference__  */
#line 1005 "./Celeste_parser.y"
                                                                         {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__symbol_reference__({::Celeste::ast::Type::deamerreserved_arrow__symbol_reference__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__symbol_reference__) });
		((*yyvalp).Celeste_deamerreserved_arrow__symbol_reference__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8668 "Celeste_parser.tab.c"
    break;

  case 41: /* deamerreserved_star__COMMA__symbol_reference__: COMMA symbol_reference deamerreserved_star__COMMA__symbol_reference__  */
#line 1015 "./Celeste_parser.y"
                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__symbol_reference__({::Celeste::ast::Type::deamerreserved_star__COMMA__symbol_reference__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__symbol_reference__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__symbol_reference__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 8680 "Celeste_parser.tab.c"
    break;

  case 42: /* deamerreserved_star__COMMA__symbol_reference__: %empty  */
#line 1022 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__symbol_reference__({::Celeste::ast::Type::deamerreserved_star__COMMA__symbol_reference__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__symbol_reference__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8691 "Celeste_parser.tab.c"
    break;

  case 43: /* assignment: symbol_reference assignment_operator expression  */
#line 1032 "./Celeste_parser.y"
                                                         {
		auto* const newNode = new Celeste::ast::node::assignment({::Celeste::ast::Type::assignment, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_symbol_reference), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_assignment_operator), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_assignment) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8702 "Celeste_parser.tab.c"
    break;

  case 44: /* assignment_operator: PLUSEQ  */
#line 1042 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PLUSEQ({::Celeste::ast::Type::PLUSEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8713 "Celeste_parser.tab.c"
    break;

  case 45: /* assignment_operator: MINUSEQ  */
#line 1048 "./Celeste_parser.y"
                   {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::MINUSEQ({::Celeste::ast::Type::MINUSEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8724 "Celeste_parser.tab.c"
    break;

  case 46: /* assignment_operator: MULTIPLYEQ  */
#line 1054 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::MULTIPLYEQ({::Celeste::ast::Type::MULTIPLYEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8735 "Celeste_parser.tab.c"
    break;

  case 47: /* assignment_operator: DIVIDEEQ  */
#line 1060 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::DIVIDEEQ({::Celeste::ast::Type::DIVIDEEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8746 "Celeste_parser.tab.c"
    break;

  case 48: /* assignment_operator: EQ  */
#line 1066 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8757 "Celeste_parser.tab.c"
    break;

  case 49: /* conditional_if: IF LEFT_PARANTHESIS expression RIGHT_PARANTHESIS LEFT_BRACKET conditional_block RIGHT_BRACKET  */
#line 1076 "./Celeste_parser.y"
                                                                                                       {
		auto* const newNode = new Celeste::ast::node::conditional_if({::Celeste::ast::Type::conditional_if, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::IF({::Celeste::ast::Type::IF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_block) });
		((*yyvalp).Celeste_conditional_if) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8772 "Celeste_parser.tab.c"
    break;

  case 50: /* conditional_else_if: ELSEIF LEFT_PARANTHESIS expression RIGHT_PARANTHESIS LEFT_BRACKET conditional_block RIGHT_BRACKET  */
#line 1090 "./Celeste_parser.y"
                                                                                                           {
		auto* const newNode = new Celeste::ast::node::conditional_else_if({::Celeste::ast::Type::conditional_else_if, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSEIF({::Celeste::ast::Type::ELSEIF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_block) });
		((*yyvalp).Celeste_conditional_else_if) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8787 "Celeste_parser.tab.c"
    break;

  case 51: /* conditional_else_if: ELSE IF LEFT_PARANTHESIS expression RIGHT_PARANTHESIS LEFT_BRACKET conditional_block RIGHT_BRACKET  */
#line 1100 "./Celeste_parser.y"
                                                                                                              {
		auto* const newNode = new Celeste::ast::node::conditional_else_if({::Celeste::ast::Type::conditional_else_if, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSE({::Celeste::ast::Type::ELSE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::IF({::Celeste::ast::Type::IF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_block) });
		((*yyvalp).Celeste_conditional_else_if) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8802 "Celeste_parser.tab.c"
    break;

  case 52: /* conditional_else: ELSE LEFT_BRACKET conditional_block RIGHT_BRACKET  */
#line 1114 "./Celeste_parser.y"
                                                           {
		auto* const newNode = new Celeste::ast::node::conditional_else({::Celeste::ast::Type::conditional_else, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSE({::Celeste::ast::Type::ELSE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_block) });
		((*yyvalp).Celeste_conditional_else) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8815 "Celeste_parser.tab.c"
    break;

  case 53: /* conditional_block: standard_block  */
#line 1126 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::conditional_block({::Celeste::ast::Type::conditional_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_conditional_block) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8826 "Celeste_parser.tab.c"
    break;

  case 54: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1136 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8847 "Celeste_parser.tab.c"
    break;

  case 55: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1152 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8867 "Celeste_parser.tab.c"
    break;

  case 56: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1167 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8888 "Celeste_parser.tab.c"
    break;

  case 57: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1183 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8908 "Celeste_parser.tab.c"
    break;

  case 58: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1198 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8928 "Celeste_parser.tab.c"
    break;

  case 59: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1213 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8947 "Celeste_parser.tab.c"
    break;

  case 60: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1227 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8967 "Celeste_parser.tab.c"
    break;

  case 61: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1242 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8986 "Celeste_parser.tab.c"
    break;

  case 62: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1256 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9007 "Celeste_parser.tab.c"
    break;

  case 63: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1272 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9027 "Celeste_parser.tab.c"
    break;

  case 64: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1287 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9048 "Celeste_parser.tab.c"
    break;

  case 65: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1303 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9068 "Celeste_parser.tab.c"
    break;

  case 66: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1318 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9088 "Celeste_parser.tab.c"
    break;

  case 67: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1333 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9107 "Celeste_parser.tab.c"
    break;

  case 68: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1347 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9127 "Celeste_parser.tab.c"
    break;

  case 69: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1362 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9146 "Celeste_parser.tab.c"
    break;

  case 70: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1376 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9164 "Celeste_parser.tab.c"
    break;

  case 71: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1389 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9181 "Celeste_parser.tab.c"
    break;

  case 72: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1401 "./Celeste_parser.y"
                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9199 "Celeste_parser.tab.c"
    break;

  case 73: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1414 "./Celeste_parser.y"
                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9216 "Celeste_parser.tab.c"
    break;

  case 74: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1426 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9237 "Celeste_parser.tab.c"
    break;

  case 75: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1442 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9257 "Celeste_parser.tab.c"
    break;

  case 76: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1457 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9278 "Celeste_parser.tab.c"
    break;

  case 77: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1473 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9298 "Celeste_parser.tab.c"
    break;

  case 78: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1488 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 24, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9318 "Celeste_parser.tab.c"
    break;

  case 79: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1503 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 25, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9337 "Celeste_parser.tab.c"
    break;

  case 80: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1517 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 26, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9357 "Celeste_parser.tab.c"
    break;

  case 81: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1532 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 27, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9376 "Celeste_parser.tab.c"
    break;

  case 82: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1546 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 28, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9397 "Celeste_parser.tab.c"
    break;

  case 83: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1562 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 29, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9417 "Celeste_parser.tab.c"
    break;

  case 84: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1577 "./Celeste_parser.y"
                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 30, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9438 "Celeste_parser.tab.c"
    break;

  case 85: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1593 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 31, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9458 "Celeste_parser.tab.c"
    break;

  case 86: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1608 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 32, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9478 "Celeste_parser.tab.c"
    break;

  case 87: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1623 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 33, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9497 "Celeste_parser.tab.c"
    break;

  case 88: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1637 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 34, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9517 "Celeste_parser.tab.c"
    break;

  case 89: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1652 "./Celeste_parser.y"
                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 35, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9536 "Celeste_parser.tab.c"
    break;

  case 90: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1666 "./Celeste_parser.y"
                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 36, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9554 "Celeste_parser.tab.c"
    break;

  case 91: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1679 "./Celeste_parser.y"
                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 37, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9571 "Celeste_parser.tab.c"
    break;

  case 92: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1691 "./Celeste_parser.y"
                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 38, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9589 "Celeste_parser.tab.c"
    break;

  case 93: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1704 "./Celeste_parser.y"
                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 39, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9606 "Celeste_parser.tab.c"
    break;

  case 94: /* deamerreserved_arrow__template_parameter__: template_parameter deamerreserved_star__COMMA__template_parameter__  */
#line 1720 "./Celeste_parser.y"
                                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__template_parameter__({::Celeste::ast::Type::deamerreserved_arrow__template_parameter__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_parameter), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__template_parameter__) });
		((*yyvalp).Celeste_deamerreserved_arrow__template_parameter__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9617 "Celeste_parser.tab.c"
    break;

  case 95: /* deamerreserved_star__COMMA__template_parameter__: COMMA template_parameter deamerreserved_star__COMMA__template_parameter__  */
#line 1730 "./Celeste_parser.y"
                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__template_parameter__({::Celeste::ast::Type::deamerreserved_star__COMMA__template_parameter__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_parameter), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__template_parameter__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__template_parameter__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 9629 "Celeste_parser.tab.c"
    break;

  case 96: /* deamerreserved_star__COMMA__template_parameter__: %empty  */
#line 1737 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__template_parameter__({::Celeste::ast::Type::deamerreserved_star__COMMA__template_parameter__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__template_parameter__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9640 "Celeste_parser.tab.c"
    break;

  case 97: /* deamerreserved_arrow__conditional_function_argument__: conditional_function_argument deamerreserved_star__COMMA__conditional_function_argument__  */
#line 1747 "./Celeste_parser.y"
                                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__conditional_function_argument__({::Celeste::ast::Type::deamerreserved_arrow__conditional_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__conditional_function_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__conditional_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9651 "Celeste_parser.tab.c"
    break;

  case 98: /* deamerreserved_star__COMMA__conditional_function_argument__: COMMA conditional_function_argument deamerreserved_star__COMMA__conditional_function_argument__  */
#line 1757 "./Celeste_parser.y"
                                                                                                         {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__conditional_function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__conditional_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__conditional_function_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__conditional_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 9663 "Celeste_parser.tab.c"
    break;

  case 99: /* deamerreserved_star__COMMA__conditional_function_argument__: %empty  */
#line 1764 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__conditional_function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__conditional_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__conditional_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9674 "Celeste_parser.tab.c"
    break;

  case 100: /* deamerreserved_arrow__function_argument__: function_argument deamerreserved_star__COMMA__function_argument__  */
#line 1774 "./Celeste_parser.y"
                                                                           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__function_argument__({::Celeste::ast::Type::deamerreserved_arrow__function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__function_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9685 "Celeste_parser.tab.c"
    break;

  case 101: /* deamerreserved_star__COMMA__function_argument__: COMMA function_argument deamerreserved_star__COMMA__function_argument__  */
#line 1784 "./Celeste_parser.y"
                                                                                 {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__function_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 9697 "Celeste_parser.tab.c"
    break;

  case 102: /* deamerreserved_star__COMMA__function_argument__: %empty  */
#line 1791 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9708 "Celeste_parser.tab.c"
    break;

  case 103: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1801 "./Celeste_parser.y"
                                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9727 "Celeste_parser.tab.c"
    break;

  case 104: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1815 "./Celeste_parser.y"
                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9745 "Celeste_parser.tab.c"
    break;

  case 105: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1828 "./Celeste_parser.y"
                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9764 "Celeste_parser.tab.c"
    break;

  case 106: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1842 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9782 "Celeste_parser.tab.c"
    break;

  case 107: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1855 "./Celeste_parser.y"
                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9800 "Celeste_parser.tab.c"
    break;

  case 108: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1868 "./Celeste_parser.y"
                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9817 "Celeste_parser.tab.c"
    break;

  case 109: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1880 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9835 "Celeste_parser.tab.c"
    break;

  case 110: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1893 "./Celeste_parser.y"
                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9852 "Celeste_parser.tab.c"
    break;

  case 111: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1905 "./Celeste_parser.y"
                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9871 "Celeste_parser.tab.c"
    break;

  case 112: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1919 "./Celeste_parser.y"
                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9889 "Celeste_parser.tab.c"
    break;

  case 113: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1932 "./Celeste_parser.y"
                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9908 "Celeste_parser.tab.c"
    break;

  case 114: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1946 "./Celeste_parser.y"
                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9926 "Celeste_parser.tab.c"
    break;

  case 115: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1959 "./Celeste_parser.y"
                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9944 "Celeste_parser.tab.c"
    break;

  case 116: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1972 "./Celeste_parser.y"
                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9961 "Celeste_parser.tab.c"
    break;

  case 117: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1984 "./Celeste_parser.y"
                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9979 "Celeste_parser.tab.c"
    break;

  case 118: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1997 "./Celeste_parser.y"
                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9996 "Celeste_parser.tab.c"
    break;

  case 119: /* conditional_function_declaration: CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2009 "./Celeste_parser.y"
                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10012 "Celeste_parser.tab.c"
    break;

  case 120: /* conditional_function_declaration: CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2020 "./Celeste_parser.y"
                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10027 "Celeste_parser.tab.c"
    break;

  case 121: /* conditional_function_declaration: CONDITIONAL function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2030 "./Celeste_parser.y"
                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10043 "Celeste_parser.tab.c"
    break;

  case 122: /* conditional_function_declaration: CONDITIONAL function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2041 "./Celeste_parser.y"
                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10058 "Celeste_parser.tab.c"
    break;

  case 123: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2055 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10076 "Celeste_parser.tab.c"
    break;

  case 124: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2068 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10093 "Celeste_parser.tab.c"
    break;

  case 125: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2080 "./Celeste_parser.y"
                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10111 "Celeste_parser.tab.c"
    break;

  case 126: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2093 "./Celeste_parser.y"
                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10128 "Celeste_parser.tab.c"
    break;

  case 127: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2105 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10146 "Celeste_parser.tab.c"
    break;

  case 128: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2118 "./Celeste_parser.y"
                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10163 "Celeste_parser.tab.c"
    break;

  case 129: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2130 "./Celeste_parser.y"
                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10181 "Celeste_parser.tab.c"
    break;

  case 130: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2143 "./Celeste_parser.y"
                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10198 "Celeste_parser.tab.c"
    break;

  case 131: /* code_function_declaration: CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2159 "./Celeste_parser.y"
                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::code_function_declaration({::Celeste::ast::Type::code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10214 "Celeste_parser.tab.c"
    break;

  case 132: /* code_function_declaration: CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2170 "./Celeste_parser.y"
                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::code_function_declaration({::Celeste::ast::Type::code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10229 "Celeste_parser.tab.c"
    break;

  case 133: /* code_function_declaration: CODE function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2180 "./Celeste_parser.y"
                                                                                                                {
		auto* const newNode = new Celeste::ast::node::code_function_declaration({::Celeste::ast::Type::code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10245 "Celeste_parser.tab.c"
    break;

  case 134: /* code_function_declaration: CODE function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2191 "./Celeste_parser.y"
                                                                                                          {
		auto* const newNode = new Celeste::ast::node::code_function_declaration({::Celeste::ast::Type::code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10260 "Celeste_parser.tab.c"
    break;

  case 135: /* return_statement: RETURN expression  */
#line 2205 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::return_statement({::Celeste::ast::Type::return_statement, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::RETURN({::Celeste::ast::Type::RETURN, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_return_statement) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10271 "Celeste_parser.tab.c"
    break;

  case 136: /* symbol_increase: symbol_reference PLUSPLUS  */
#line 2215 "./Celeste_parser.y"
                                   {
		auto* const newNode = new Celeste::ast::node::symbol_increase({::Celeste::ast::Type::symbol_increase, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference), new Celeste::ast::node::PLUSPLUS({::Celeste::ast::Type::PLUSPLUS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_increase) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10282 "Celeste_parser.tab.c"
    break;

  case 137: /* symbol_decrease: symbol_reference MINUSMINUS  */
#line 2225 "./Celeste_parser.y"
                                     {
		auto* const newNode = new Celeste::ast::node::symbol_decrease({::Celeste::ast::Type::symbol_decrease, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference), new Celeste::ast::node::MINUSMINUS({::Celeste::ast::Type::MINUSMINUS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_decrease) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10293 "Celeste_parser.tab.c"
    break;

  case 138: /* expression: expression_no_value  */
#line 2235 "./Celeste_parser.y"
                             {
		auto* const newNode = new Celeste::ast::node::expression({::Celeste::ast::Type::expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression_no_value) });
		((*yyvalp).Celeste_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10304 "Celeste_parser.tab.c"
    break;

  case 139: /* expression_no_value: expression_no_value PLUS t_expression  */
#line 2245 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::expression_no_value({::Celeste::ast::Type::expression_no_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_expression_no_value), new Celeste::ast::node::PLUS({::Celeste::ast::Type::PLUS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_t_expression) });
		((*yyvalp).Celeste_expression_no_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10315 "Celeste_parser.tab.c"
    break;

  case 140: /* expression_no_value: expression_no_value MINUS t_expression  */
#line 2251 "./Celeste_parser.y"
                                                  {
		auto* const newNode = new Celeste::ast::node::expression_no_value({::Celeste::ast::Type::expression_no_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_expression_no_value), new Celeste::ast::node::MINUS({::Celeste::ast::Type::MINUS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_t_expression) });
		((*yyvalp).Celeste_expression_no_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10326 "Celeste_parser.tab.c"
    break;

  case 141: /* expression_no_value: t_expression  */
#line 2257 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::expression_no_value({::Celeste::ast::Type::expression_no_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_t_expression) });
		((*yyvalp).Celeste_expression_no_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10337 "Celeste_parser.tab.c"
    break;

  case 142: /* t_expression: t_expression MULTIPLY f_expression  */
#line 2267 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::MULTIPLY({::Celeste::ast::Type::MULTIPLY, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10348 "Celeste_parser.tab.c"
    break;

  case 143: /* t_expression: t_expression DIVIDE f_expression  */
#line 2273 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::DIVIDE({::Celeste::ast::Type::DIVIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10359 "Celeste_parser.tab.c"
    break;

  case 144: /* t_expression: t_expression LTEQ f_expression  */
#line 2279 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::LTEQ({::Celeste::ast::Type::LTEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10370 "Celeste_parser.tab.c"
    break;

  case 145: /* t_expression: t_expression GTEQ f_expression  */
#line 2285 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::GTEQ({::Celeste::ast::Type::GTEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10381 "Celeste_parser.tab.c"
    break;

  case 146: /* t_expression: t_expression LT f_expression  */
#line 2291 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::LT({::Celeste::ast::Type::LT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10392 "Celeste_parser.tab.c"
    break;

  case 147: /* t_expression: t_expression GT f_expression  */
#line 2297 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::GT({::Celeste::ast::Type::GT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10403 "Celeste_parser.tab.c"
    break;

  case 148: /* t_expression: t_expression EQEQ f_expression  */
#line 2303 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::EQEQ({::Celeste::ast::Type::EQEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10414 "Celeste_parser.tab.c"
    break;

  case 149: /* t_expression: t_expression NOTEQ f_expression  */
#line 2309 "./Celeste_parser.y"
                                           {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::NOTEQ({::Celeste::ast::Type::NOTEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10425 "Celeste_parser.tab.c"
    break;

  case 150: /* t_expression: NOT f_expression  */
#line 2315 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::NOT({::Celeste::ast::Type::NOT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10436 "Celeste_parser.tab.c"
    break;

  case 151: /* t_expression: f_expression  */
#line 2321 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10447 "Celeste_parser.tab.c"
    break;

  case 152: /* f_expression: LEFT_PARANTHESIS expression_no_value RIGHT_PARANTHESIS  */
#line 2331 "./Celeste_parser.y"
                                                                {
		auto* const newNode = new Celeste::ast::node::f_expression({::Celeste::ast::Type::f_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression_no_value) });
		((*yyvalp).Celeste_f_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10460 "Celeste_parser.tab.c"
    break;

  case 153: /* f_expression: value  */
#line 2339 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::f_expression({::Celeste::ast::Type::f_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value) });
		((*yyvalp).Celeste_f_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10471 "Celeste_parser.tab.c"
    break;

  case 154: /* display_call: DISPLAY symbol_reference  */
#line 2349 "./Celeste_parser.y"
                                  {
		auto* const newNode = new Celeste::ast::node::display_call({::Celeste::ast::Type::display_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::DISPLAY({::Celeste::ast::Type::DISPLAY, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_display_call) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10482 "Celeste_parser.tab.c"
    break;

  case 155: /* for_loop: for_each_loop  */
#line 2359 "./Celeste_parser.y"
                       {
		auto* const newNode = new Celeste::ast::node::for_loop({::Celeste::ast::Type::for_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_for_each_loop) });
		((*yyvalp).Celeste_for_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10493 "Celeste_parser.tab.c"
    break;

  case 156: /* for_loop: for_iteration_loop  */
#line 2365 "./Celeste_parser.y"
                              {
		auto* const newNode = new Celeste::ast::node::for_loop({::Celeste::ast::Type::for_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_for_iteration_loop) });
		((*yyvalp).Celeste_for_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10504 "Celeste_parser.tab.c"
    break;

  case 157: /* for_iteration_loop: FOR expression LEFT_BRACKET for_block RIGHT_BRACKET  */
#line 2375 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::for_iteration_loop({::Celeste::ast::Type::for_iteration_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_for_block) });
		((*yyvalp).Celeste_for_iteration_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10517 "Celeste_parser.tab.c"
    break;

  case 158: /* for_each_loop: FOR LEFT_PARANTHESIS type for_variable IN iterator RIGHT_PARANTHESIS LEFT_BRACKET for_block RIGHT_BRACKET  */
#line 2387 "./Celeste_parser.y"
                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::for_each_loop({::Celeste::ast::Type::for_each_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_for_variable), new Celeste::ast::node::IN({::Celeste::ast::Type::IN, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_iterator), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_for_block) });
		((*yyvalp).Celeste_for_each_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10532 "Celeste_parser.tab.c"
    break;

  case 159: /* for_each_loop: FOR LEFT_PARANTHESIS type for_variable COLON iterator RIGHT_PARANTHESIS LEFT_BRACKET for_block RIGHT_BRACKET  */
#line 2397 "./Celeste_parser.y"
                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::for_each_loop({::Celeste::ast::Type::for_each_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_for_variable), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_iterator), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_for_block) });
		((*yyvalp).Celeste_for_each_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10548 "Celeste_parser.tab.c"
    break;

  case 160: /* for_variable: VARNAME  */
#line 2412 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::for_variable({::Celeste::ast::Type::for_variable, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_for_variable) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10559 "Celeste_parser.tab.c"
    break;

  case 161: /* iterator: full_value  */
#line 2422 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::iterator({::Celeste::ast::Type::iterator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_iterator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10570 "Celeste_parser.tab.c"
    break;

  case 162: /* for_block: standard_block  */
#line 2432 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::for_block({::Celeste::ast::Type::for_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_for_block) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10581 "Celeste_parser.tab.c"
    break;

  case 163: /* namespace_declaration: NAMESPACE deamerreserved_arrow__namespace_name__ LEFT_BRACKET namespace_block RIGHT_BRACKET  */
#line 2442 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::namespace_declaration({::Celeste::ast::Type::namespace_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::NAMESPACE({::Celeste::ast::Type::NAMESPACE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__namespace_name__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_namespace_block) });
		((*yyvalp).Celeste_namespace_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10594 "Celeste_parser.tab.c"
    break;

  case 164: /* deamerreserved_arrow__namespace_name__: namespace_name deamerreserved_star__DOT__namespace_name__  */
#line 2454 "./Celeste_parser.y"
                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__namespace_name__({::Celeste::ast::Type::deamerreserved_arrow__namespace_name__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_namespace_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__DOT__namespace_name__) });
		((*yyvalp).Celeste_deamerreserved_arrow__namespace_name__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10605 "Celeste_parser.tab.c"
    break;

  case 165: /* deamerreserved_star__DOT__namespace_name__: DOT namespace_name deamerreserved_star__DOT__namespace_name__  */
#line 2464 "./Celeste_parser.y"
                                                                       {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__DOT__namespace_name__({::Celeste::ast::Type::deamerreserved_star__DOT__namespace_name__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_namespace_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__DOT__namespace_name__) });
		((*yyvalp).Celeste_deamerreserved_star__DOT__namespace_name__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 10617 "Celeste_parser.tab.c"
    break;

  case 166: /* deamerreserved_star__DOT__namespace_name__: %empty  */
#line 2471 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__DOT__namespace_name__({::Celeste::ast::Type::deamerreserved_star__DOT__namespace_name__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__DOT__namespace_name__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10628 "Celeste_parser.tab.c"
    break;

  case 167: /* namespace_block: standard_block  */
#line 2481 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::namespace_block({::Celeste::ast::Type::namespace_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_namespace_block) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10639 "Celeste_parser.tab.c"
    break;

  case 168: /* namespace_name: VARNAME  */
#line 2491 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::namespace_name({::Celeste::ast::Type::namespace_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_namespace_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10650 "Celeste_parser.tab.c"
    break;

  case 169: /* inline_class_declaration: created_class_name COLON deamerreserved_arrow__inline_class_declaration_composite__ COMMA  */
#line 2501 "./Celeste_parser.y"
                                                                                                   {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration({::Celeste::ast::Type::inline_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_created_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__inline_class_declaration_composite__) });
		((*yyvalp).Celeste_inline_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10663 "Celeste_parser.tab.c"
    break;

  case 170: /* inline_class_declaration: created_class_name COLON deamerreserved_arrow__inline_class_declaration_composite__  */
#line 2509 "./Celeste_parser.y"
                                                                                               {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration({::Celeste::ast::Type::inline_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_created_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__inline_class_declaration_composite__) });
		((*yyvalp).Celeste_inline_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
	}
#line 10675 "Celeste_parser.tab.c"
    break;

  case 171: /* inline_class_declaration: created_class_name COLON COMMA  */
#line 2516 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration({::Celeste::ast::Type::inline_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_created_class_name) });
		((*yyvalp).Celeste_inline_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10688 "Celeste_parser.tab.c"
    break;

  case 172: /* inline_class_declaration: created_class_name COLON  */
#line 2524 "./Celeste_parser.y"
                                    {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration({::Celeste::ast::Type::inline_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_created_class_name) });
		((*yyvalp).Celeste_inline_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10700 "Celeste_parser.tab.c"
    break;

  case 173: /* deamerreserved_arrow__inline_class_declaration_composite__: inline_class_declaration_composite deamerreserved_star__COMMA__inline_class_declaration_composite__  */
#line 2535 "./Celeste_parser.y"
                                                                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__inline_class_declaration_composite__({::Celeste::ast::Type::deamerreserved_arrow__inline_class_declaration_composite__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite__) });
		((*yyvalp).Celeste_deamerreserved_arrow__inline_class_declaration_composite__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10711 "Celeste_parser.tab.c"
    break;

  case 174: /* deamerreserved_star__COMMA__inline_class_declaration_composite__: COMMA inline_class_declaration_composite deamerreserved_star__COMMA__inline_class_declaration_composite__  */
#line 2545 "./Celeste_parser.y"
                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__inline_class_declaration_composite__({::Celeste::ast::Type::deamerreserved_star__COMMA__inline_class_declaration_composite__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 10723 "Celeste_parser.tab.c"
    break;

  case 175: /* deamerreserved_star__COMMA__inline_class_declaration_composite__: %empty  */
#line 2552 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__inline_class_declaration_composite__({::Celeste::ast::Type::deamerreserved_star__COMMA__inline_class_declaration_composite__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10734 "Celeste_parser.tab.c"
    break;

  case 176: /* inline_class_declaration_composite: inline_class_declaration_composite_name  */
#line 2562 "./Celeste_parser.y"
                                                 {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10745 "Celeste_parser.tab.c"
    break;

  case 177: /* inline_class_declaration_composite: inline_class_declaration_composite_name AS LEFT_SQUARE_BRACKET inline_class_declaration_composite_alias RIGHT_SQUARE_BRACKET  */
#line 2568 "./Celeste_parser.y"
                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_alias) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10758 "Celeste_parser.tab.c"
    break;

  case 178: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET inline_class_declaration_composite_alias COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2576 "./Celeste_parser.y"
                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10772 "Celeste_parser.tab.c"
    break;

  case 179: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET deamerreserved_arrow__inline_class_declaration_composite_alias__ COMMA RIGHT_SQUARE_BRACKET COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2585 "./Celeste_parser.y"
                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__inline_class_declaration_composite_alias__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10789 "Celeste_parser.tab.c"
    break;

  case 180: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET deamerreserved_arrow__inline_class_declaration_composite_alias__ RIGHT_SQUARE_BRACKET COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2597 "./Celeste_parser.y"
                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__inline_class_declaration_composite_alias__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10805 "Celeste_parser.tab.c"
    break;

  case 181: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET COMMA RIGHT_SQUARE_BRACKET COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2608 "./Celeste_parser.y"
                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10822 "Celeste_parser.tab.c"
    break;

  case 182: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2620 "./Celeste_parser.y"
                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10838 "Celeste_parser.tab.c"
    break;

  case 183: /* deamerreserved_arrow__inline_class_declaration_composite_alias__: inline_class_declaration_composite_alias deamerreserved_star__COMMA__inline_class_declaration_composite_alias__  */
#line 2635 "./Celeste_parser.y"
                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__inline_class_declaration_composite_alias__({::Celeste::ast::Type::deamerreserved_arrow__inline_class_declaration_composite_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__) });
		((*yyvalp).Celeste_deamerreserved_arrow__inline_class_declaration_composite_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10849 "Celeste_parser.tab.c"
    break;

  case 184: /* deamerreserved_star__COMMA__inline_class_declaration_composite_alias__: COMMA inline_class_declaration_composite_alias deamerreserved_star__COMMA__inline_class_declaration_composite_alias__  */
#line 2645 "./Celeste_parser.y"
                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__inline_class_declaration_composite_alias__({::Celeste::ast::Type::deamerreserved_star__COMMA__inline_class_declaration_composite_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 10861 "Celeste_parser.tab.c"
    break;

  case 185: /* deamerreserved_star__COMMA__inline_class_declaration_composite_alias__: %empty  */
#line 2652 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__inline_class_declaration_composite_alias__({::Celeste::ast::Type::deamerreserved_star__COMMA__inline_class_declaration_composite_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10872 "Celeste_parser.tab.c"
    break;

  case 186: /* inline_class_declaration_composite_alias: VARNAME  */
#line 2662 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite_alias({::Celeste::ast::Type::inline_class_declaration_composite_alias, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_inline_class_declaration_composite_alias) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10883 "Celeste_parser.tab.c"
    break;

  case 187: /* inline_class_declaration_composite_name: symbol_reference  */
#line 2672 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite_name({::Celeste::ast::Type::inline_class_declaration_composite_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_inline_class_declaration_composite_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10894 "Celeste_parser.tab.c"
    break;

  case 188: /* created_class_name: VARNAME  */
#line 2682 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::created_class_name({::Celeste::ast::Type::created_class_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_created_class_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10905 "Celeste_parser.tab.c"
    break;

  case 189: /* code_block: LEFT_PARANTHESIS deamerreserved_arrow__code_block_input_argument__ COMMA RIGHT_PARANTHESIS LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2692 "./Celeste_parser.y"
                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__code_block_input_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10921 "Celeste_parser.tab.c"
    break;

  case 190: /* code_block: LEFT_PARANTHESIS deamerreserved_arrow__code_block_input_argument__ RIGHT_PARANTHESIS LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2703 "./Celeste_parser.y"
                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__code_block_input_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10936 "Celeste_parser.tab.c"
    break;

  case 191: /* code_block: LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2713 "./Celeste_parser.y"
                                                                                                                {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10952 "Celeste_parser.tab.c"
    break;

  case 192: /* code_block: LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2724 "./Celeste_parser.y"
                                                                                                          {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10967 "Celeste_parser.tab.c"
    break;

  case 193: /* code_block: LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2734 "./Celeste_parser.y"
                                                                       {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10980 "Celeste_parser.tab.c"
    break;

  case 194: /* deamerreserved_arrow__code_block_input_argument__: code_block_input_argument deamerreserved_star__COMMA__code_block_input_argument__  */
#line 2746 "./Celeste_parser.y"
                                                                                           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__code_block_input_argument__({::Celeste::ast::Type::deamerreserved_arrow__code_block_input_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_input_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__code_block_input_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__code_block_input_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10991 "Celeste_parser.tab.c"
    break;

  case 195: /* deamerreserved_star__COMMA__code_block_input_argument__: COMMA code_block_input_argument deamerreserved_star__COMMA__code_block_input_argument__  */
#line 2756 "./Celeste_parser.y"
                                                                                                 {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__code_block_input_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__code_block_input_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_input_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__code_block_input_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__code_block_input_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 11003 "Celeste_parser.tab.c"
    break;

  case 196: /* deamerreserved_star__COMMA__code_block_input_argument__: %empty  */
#line 2763 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__code_block_input_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__code_block_input_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__code_block_input_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11014 "Celeste_parser.tab.c"
    break;

  case 197: /* code_block_input_argument: code_block_argument  */
#line 2773 "./Celeste_parser.y"
                             {
		auto* const newNode = new Celeste::ast::node::code_block_input_argument({::Celeste::ast::Type::code_block_input_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_code_block_argument) });
		((*yyvalp).Celeste_code_block_input_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11025 "Celeste_parser.tab.c"
    break;

  case 198: /* code_block_argument: type code_block_argument_name  */
#line 2783 "./Celeste_parser.y"
                                       {
		auto* const newNode = new Celeste::ast::node::code_block_argument({::Celeste::ast::Type::code_block_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_code_block_argument_name) });
		((*yyvalp).Celeste_code_block_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11036 "Celeste_parser.tab.c"
    break;

  case 199: /* code_block_argument: type  */
#line 2789 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::code_block_argument({::Celeste::ast::Type::code_block_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_type) });
		((*yyvalp).Celeste_code_block_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11047 "Celeste_parser.tab.c"
    break;

  case 200: /* code_block_argument_name: VARNAME  */
#line 2799 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::code_block_argument_name({::Celeste::ast::Type::code_block_argument_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_code_block_argument_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11058 "Celeste_parser.tab.c"
    break;

  case 201: /* code_block_program: standard_block  */
#line 2809 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::code_block_program({::Celeste::ast::Type::code_block_program, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_code_block_program) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11069 "Celeste_parser.tab.c"
    break;

  case 202: /* variable_declaration: attribute_section type variable_name EQ value_list  */
#line 2819 "./Celeste_parser.y"
                                                            {
		auto* const newNode = new Celeste::ast::node::variable_declaration({::Celeste::ast::Type::variable_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_variable_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_variable_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11080 "Celeste_parser.tab.c"
    break;

  case 203: /* variable_declaration: attribute_section type variable_name  */
#line 2825 "./Celeste_parser.y"
                                                {
		auto* const newNode = new Celeste::ast::node::variable_declaration({::Celeste::ast::Type::variable_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_variable_name) });
		((*yyvalp).Celeste_variable_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11091 "Celeste_parser.tab.c"
    break;

  case 204: /* variable_declaration: type variable_name EQ value_list  */
#line 2831 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::variable_declaration({::Celeste::ast::Type::variable_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_variable_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_variable_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11102 "Celeste_parser.tab.c"
    break;

  case 205: /* variable_declaration: type variable_name  */
#line 2837 "./Celeste_parser.y"
                              {
		auto* const newNode = new Celeste::ast::node::variable_declaration({::Celeste::ast::Type::variable_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_variable_name) });
		((*yyvalp).Celeste_variable_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11113 "Celeste_parser.tab.c"
    break;

  case 206: /* array_declaration: LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET  */
#line 2847 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::array_declaration({::Celeste::ast::Type::array_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_array_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11126 "Celeste_parser.tab.c"
    break;

  case 207: /* variable_name: symbol_reference  */
#line 2859 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::variable_name({::Celeste::ast::Type::variable_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_variable_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11137 "Celeste_parser.tab.c"
    break;

  case 208: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2869 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-18)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11155 "Celeste_parser.tab.c"
    break;

  case 209: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2882 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11173 "Celeste_parser.tab.c"
    break;

  case 210: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2895 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11190 "Celeste_parser.tab.c"
    break;

  case 211: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2907 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11207 "Celeste_parser.tab.c"
    break;

  case 212: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2919 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11225 "Celeste_parser.tab.c"
    break;

  case 213: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2932 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11243 "Celeste_parser.tab.c"
    break;

  case 214: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2945 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11260 "Celeste_parser.tab.c"
    break;

  case 215: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2957 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11277 "Celeste_parser.tab.c"
    break;

  case 216: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2969 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11295 "Celeste_parser.tab.c"
    break;

  case 217: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2982 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11313 "Celeste_parser.tab.c"
    break;

  case 218: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2995 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11330 "Celeste_parser.tab.c"
    break;

  case 219: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3007 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11347 "Celeste_parser.tab.c"
    break;

  case 220: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3019 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11365 "Celeste_parser.tab.c"
    break;

  case 221: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3032 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11383 "Celeste_parser.tab.c"
    break;

  case 222: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3045 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11400 "Celeste_parser.tab.c"
    break;

  case 223: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3057 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11417 "Celeste_parser.tab.c"
    break;

  case 224: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3069 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11435 "Celeste_parser.tab.c"
    break;

  case 225: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3082 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11453 "Celeste_parser.tab.c"
    break;

  case 226: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3095 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11470 "Celeste_parser.tab.c"
    break;

  case 227: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3107 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11487 "Celeste_parser.tab.c"
    break;

  case 228: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3119 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11505 "Celeste_parser.tab.c"
    break;

  case 229: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3132 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11523 "Celeste_parser.tab.c"
    break;

  case 230: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3145 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11540 "Celeste_parser.tab.c"
    break;

  case 231: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3157 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11557 "Celeste_parser.tab.c"
    break;

  case 232: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3169 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 24, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11575 "Celeste_parser.tab.c"
    break;

  case 233: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3182 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 25, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11593 "Celeste_parser.tab.c"
    break;

  case 234: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3195 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 26, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11610 "Celeste_parser.tab.c"
    break;

  case 235: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3207 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 27, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11627 "Celeste_parser.tab.c"
    break;

  case 236: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3219 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 28, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11645 "Celeste_parser.tab.c"
    break;

  case 237: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3232 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 29, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11663 "Celeste_parser.tab.c"
    break;

  case 238: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3245 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 30, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11680 "Celeste_parser.tab.c"
    break;

  case 239: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3257 "./Celeste_parser.y"
                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 31, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11697 "Celeste_parser.tab.c"
    break;

  case 240: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3269 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 32, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11715 "Celeste_parser.tab.c"
    break;

  case 241: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3282 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 33, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11733 "Celeste_parser.tab.c"
    break;

  case 242: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3295 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 34, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11750 "Celeste_parser.tab.c"
    break;

  case 243: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3307 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 35, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11767 "Celeste_parser.tab.c"
    break;

  case 244: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3319 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 36, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11785 "Celeste_parser.tab.c"
    break;

  case 245: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3332 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 37, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11803 "Celeste_parser.tab.c"
    break;

  case 246: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3345 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 38, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11820 "Celeste_parser.tab.c"
    break;

  case 247: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3357 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 39, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11837 "Celeste_parser.tab.c"
    break;

  case 248: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3369 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 40, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11855 "Celeste_parser.tab.c"
    break;

  case 249: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3382 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 41, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11873 "Celeste_parser.tab.c"
    break;

  case 250: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3395 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 42, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11890 "Celeste_parser.tab.c"
    break;

  case 251: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3407 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 43, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11907 "Celeste_parser.tab.c"
    break;

  case 252: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3419 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 44, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11925 "Celeste_parser.tab.c"
    break;

  case 253: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3432 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 45, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11943 "Celeste_parser.tab.c"
    break;

  case 254: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3445 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 46, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11960 "Celeste_parser.tab.c"
    break;

  case 255: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3457 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 47, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11977 "Celeste_parser.tab.c"
    break;

  case 256: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3469 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 48, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11995 "Celeste_parser.tab.c"
    break;

  case 257: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3482 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 49, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12013 "Celeste_parser.tab.c"
    break;

  case 258: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3495 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 50, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12030 "Celeste_parser.tab.c"
    break;

  case 259: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3507 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 51, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12047 "Celeste_parser.tab.c"
    break;

  case 260: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3519 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 52, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12065 "Celeste_parser.tab.c"
    break;

  case 261: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3532 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 53, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12083 "Celeste_parser.tab.c"
    break;

  case 262: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3545 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 54, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12100 "Celeste_parser.tab.c"
    break;

  case 263: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3557 "./Celeste_parser.y"
                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 55, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12117 "Celeste_parser.tab.c"
    break;

  case 264: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3569 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 56, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12135 "Celeste_parser.tab.c"
    break;

  case 265: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3582 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 57, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12153 "Celeste_parser.tab.c"
    break;

  case 266: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3595 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 58, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12170 "Celeste_parser.tab.c"
    break;

  case 267: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3607 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 59, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12187 "Celeste_parser.tab.c"
    break;

  case 268: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3619 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 60, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12205 "Celeste_parser.tab.c"
    break;

  case 269: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3632 "./Celeste_parser.y"
                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 61, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12223 "Celeste_parser.tab.c"
    break;

  case 270: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3645 "./Celeste_parser.y"
                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 62, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12240 "Celeste_parser.tab.c"
    break;

  case 271: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3657 "./Celeste_parser.y"
                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 63, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12257 "Celeste_parser.tab.c"
    break;

  case 272: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3673 "./Celeste_parser.y"
                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12273 "Celeste_parser.tab.c"
    break;

  case 273: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3684 "./Celeste_parser.y"
                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12289 "Celeste_parser.tab.c"
    break;

  case 274: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3695 "./Celeste_parser.y"
                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12304 "Celeste_parser.tab.c"
    break;

  case 275: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3705 "./Celeste_parser.y"
                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12319 "Celeste_parser.tab.c"
    break;

  case 276: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3715 "./Celeste_parser.y"
                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12335 "Celeste_parser.tab.c"
    break;

  case 277: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3726 "./Celeste_parser.y"
                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12351 "Celeste_parser.tab.c"
    break;

  case 278: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3737 "./Celeste_parser.y"
                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12366 "Celeste_parser.tab.c"
    break;

  case 279: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3747 "./Celeste_parser.y"
                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12381 "Celeste_parser.tab.c"
    break;

  case 280: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3757 "./Celeste_parser.y"
                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12397 "Celeste_parser.tab.c"
    break;

  case 281: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3768 "./Celeste_parser.y"
                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12413 "Celeste_parser.tab.c"
    break;

  case 282: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3779 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12428 "Celeste_parser.tab.c"
    break;

  case 283: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3789 "./Celeste_parser.y"
                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12443 "Celeste_parser.tab.c"
    break;

  case 284: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3799 "./Celeste_parser.y"
                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12459 "Celeste_parser.tab.c"
    break;

  case 285: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3810 "./Celeste_parser.y"
                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12475 "Celeste_parser.tab.c"
    break;

  case 286: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3821 "./Celeste_parser.y"
                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12490 "Celeste_parser.tab.c"
    break;

  case 287: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3831 "./Celeste_parser.y"
                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12505 "Celeste_parser.tab.c"
    break;

  case 288: /* trailing_return_type: return_type  */
#line 3845 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::trailing_return_type({::Celeste::ast::Type::trailing_return_type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_return_type) });
		((*yyvalp).Celeste_trailing_return_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12516 "Celeste_parser.tab.c"
    break;

  case 289: /* return_type: type  */
#line 3855 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::return_type({::Celeste::ast::Type::return_type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_type) });
		((*yyvalp).Celeste_return_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12527 "Celeste_parser.tab.c"
    break;

  case 290: /* conditional_function_argument: function_argument  */
#line 3865 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::conditional_function_argument({::Celeste::ast::Type::conditional_function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_argument) });
		((*yyvalp).Celeste_conditional_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12538 "Celeste_parser.tab.c"
    break;

  case 291: /* function_argument: function_argument_type function_argument_name condition_modifier_function_call EQ full_value  */
#line 3875 "./Celeste_parser.y"
                                                                                                      {
		auto* const newNode = new Celeste::ast::node::function_argument({::Celeste::ast::Type::function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_function_argument_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_function_argument_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_condition_modifier_function_call), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12549 "Celeste_parser.tab.c"
    break;

  case 292: /* function_argument: function_argument_type function_argument_name condition_modifier_function_call  */
#line 3881 "./Celeste_parser.y"
                                                                                          {
		auto* const newNode = new Celeste::ast::node::function_argument({::Celeste::ast::Type::function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_function_argument_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_argument_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_condition_modifier_function_call) });
		((*yyvalp).Celeste_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12560 "Celeste_parser.tab.c"
    break;

  case 293: /* function_argument: function_argument_type function_argument_name EQ full_value  */
#line 3887 "./Celeste_parser.y"
                                                                       {
		auto* const newNode = new Celeste::ast::node::function_argument({::Celeste::ast::Type::function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_function_argument_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_function_argument_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12571 "Celeste_parser.tab.c"
    break;

  case 294: /* function_argument: function_argument_type function_argument_name  */
#line 3893 "./Celeste_parser.y"
                                                         {
		auto* const newNode = new Celeste::ast::node::function_argument({::Celeste::ast::Type::function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_argument_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_argument_name) });
		((*yyvalp).Celeste_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12582 "Celeste_parser.tab.c"
    break;

  case 295: /* function_argument_type: type  */
#line 3903 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::function_argument_type({::Celeste::ast::Type::function_argument_type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_type) });
		((*yyvalp).Celeste_function_argument_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12593 "Celeste_parser.tab.c"
    break;

  case 296: /* function_argument_name: symbol_reference  */
#line 3913 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::function_argument_name({::Celeste::ast::Type::function_argument_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_function_argument_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12604 "Celeste_parser.tab.c"
    break;

  case 297: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name LEFT_SQUARE_BRACKET deamerreserved_arrow__condition_modifier_argument__ COMMA RIGHT_SQUARE_BRACKET RIGHT_PARANTHESIS  */
#line 3923 "./Celeste_parser.y"
                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_condition_modifier_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__condition_modifier_argument__) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12620 "Celeste_parser.tab.c"
    break;

  case 298: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name LEFT_SQUARE_BRACKET deamerreserved_arrow__condition_modifier_argument__ RIGHT_SQUARE_BRACKET RIGHT_PARANTHESIS  */
#line 3934 "./Celeste_parser.y"
                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_condition_modifier_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__condition_modifier_argument__) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12635 "Celeste_parser.tab.c"
    break;

  case 299: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name LEFT_SQUARE_BRACKET COMMA RIGHT_SQUARE_BRACKET RIGHT_PARANTHESIS  */
#line 3944 "./Celeste_parser.y"
                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_condition_modifier_name) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12651 "Celeste_parser.tab.c"
    break;

  case 300: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET RIGHT_PARANTHESIS  */
#line 3955 "./Celeste_parser.y"
                                                                                                               {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_condition_modifier_name) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12666 "Celeste_parser.tab.c"
    break;

  case 301: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name RIGHT_PARANTHESIS  */
#line 3965 "./Celeste_parser.y"
                                                                      {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_condition_modifier_name) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12679 "Celeste_parser.tab.c"
    break;

  case 302: /* deamerreserved_arrow__condition_modifier_argument__: condition_modifier_argument deamerreserved_star__COMMA__condition_modifier_argument__  */
#line 3977 "./Celeste_parser.y"
                                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__condition_modifier_argument__({::Celeste::ast::Type::deamerreserved_arrow__condition_modifier_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_condition_modifier_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__condition_modifier_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__condition_modifier_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12690 "Celeste_parser.tab.c"
    break;

  case 303: /* deamerreserved_star__COMMA__condition_modifier_argument__: COMMA condition_modifier_argument deamerreserved_star__COMMA__condition_modifier_argument__  */
#line 3987 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__condition_modifier_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__condition_modifier_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_condition_modifier_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__condition_modifier_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__condition_modifier_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 12702 "Celeste_parser.tab.c"
    break;

  case 304: /* deamerreserved_star__COMMA__condition_modifier_argument__: %empty  */
#line 3994 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__condition_modifier_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__condition_modifier_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__condition_modifier_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12713 "Celeste_parser.tab.c"
    break;

  case 305: /* condition_modifier_name: symbol_reference  */
#line 4004 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::condition_modifier_name({::Celeste::ast::Type::condition_modifier_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_condition_modifier_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12724 "Celeste_parser.tab.c"
    break;

  case 306: /* condition_modifier_argument: full_value  */
#line 4014 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::condition_modifier_argument({::Celeste::ast::Type::condition_modifier_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_condition_modifier_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12735 "Celeste_parser.tab.c"
    break;

  case 307: /* function_body: standard_block  */
#line 4024 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::function_body({::Celeste::ast::Type::function_body, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_function_body) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12746 "Celeste_parser.tab.c"
    break;

  case 308: /* function_name: symbol_reference  */
#line 4034 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::function_name({::Celeste::ast::Type::function_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_function_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12757 "Celeste_parser.tab.c"
    break;

  case 309: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4044 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12772 "Celeste_parser.tab.c"
    break;

  case 310: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4054 "./Celeste_parser.y"
                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12787 "Celeste_parser.tab.c"
    break;

  case 311: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4064 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12802 "Celeste_parser.tab.c"
    break;

  case 312: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4074 "./Celeste_parser.y"
                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12817 "Celeste_parser.tab.c"
    break;

  case 313: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4084 "./Celeste_parser.y"
                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12832 "Celeste_parser.tab.c"
    break;

  case 314: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4094 "./Celeste_parser.y"
                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12847 "Celeste_parser.tab.c"
    break;

  case 315: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4104 "./Celeste_parser.y"
                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12862 "Celeste_parser.tab.c"
    break;

  case 316: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4114 "./Celeste_parser.y"
                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12877 "Celeste_parser.tab.c"
    break;

  case 317: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4124 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12892 "Celeste_parser.tab.c"
    break;

  case 318: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4134 "./Celeste_parser.y"
                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12907 "Celeste_parser.tab.c"
    break;

  case 319: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4144 "./Celeste_parser.y"
                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12922 "Celeste_parser.tab.c"
    break;

  case 320: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4154 "./Celeste_parser.y"
                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12937 "Celeste_parser.tab.c"
    break;

  case 321: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4164 "./Celeste_parser.y"
                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12952 "Celeste_parser.tab.c"
    break;

  case 322: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4174 "./Celeste_parser.y"
                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12967 "Celeste_parser.tab.c"
    break;

  case 323: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4184 "./Celeste_parser.y"
                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12982 "Celeste_parser.tab.c"
    break;

  case 324: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4194 "./Celeste_parser.y"
                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12997 "Celeste_parser.tab.c"
    break;

  case 325: /* template_parameter: type template_parameter_name  */
#line 4208 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::template_parameter({::Celeste::ast::Type::template_parameter, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_parameter_name) });
		((*yyvalp).Celeste_template_parameter) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13008 "Celeste_parser.tab.c"
    break;

  case 326: /* template_parameter_name: VARNAME  */
#line 4218 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::template_parameter_name({::Celeste::ast::Type::template_parameter_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_template_parameter_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13019 "Celeste_parser.tab.c"
    break;

  case 327: /* class_declaration: attribute_section execution_keyword_permutation CLASS class_name deamerreserved_arrow__class_inherit_base__ LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4228 "./Celeste_parser.y"
                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::class_declaration({::Celeste::ast::Type::class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__class_inherit_base__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13032 "Celeste_parser.tab.c"
    break;

  case 328: /* class_declaration: attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4236 "./Celeste_parser.y"
                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::class_declaration({::Celeste::ast::Type::class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13045 "Celeste_parser.tab.c"
    break;

  case 329: /* class_declaration: execution_keyword_permutation CLASS class_name deamerreserved_arrow__class_inherit_base__ LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4244 "./Celeste_parser.y"
                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::class_declaration({::Celeste::ast::Type::class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__class_inherit_base__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13058 "Celeste_parser.tab.c"
    break;

  case 330: /* class_declaration: execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4252 "./Celeste_parser.y"
                                                                                                {
		auto* const newNode = new Celeste::ast::node::class_declaration({::Celeste::ast::Type::class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13071 "Celeste_parser.tab.c"
    break;

  case 331: /* deamerreserved_arrow__class_inherit_base__: class_inherit_base deamerreserved_star__COMMA__class_inherit_base__  */
#line 4264 "./Celeste_parser.y"
                                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__class_inherit_base__({::Celeste::ast::Type::deamerreserved_arrow__class_inherit_base__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__class_inherit_base__) });
		((*yyvalp).Celeste_deamerreserved_arrow__class_inherit_base__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13082 "Celeste_parser.tab.c"
    break;

  case 332: /* deamerreserved_star__COMMA__class_inherit_base__: COMMA class_inherit_base deamerreserved_star__COMMA__class_inherit_base__  */
#line 4274 "./Celeste_parser.y"
                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__class_inherit_base__({::Celeste::ast::Type::deamerreserved_star__COMMA__class_inherit_base__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__class_inherit_base__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__class_inherit_base__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 13094 "Celeste_parser.tab.c"
    break;

  case 333: /* deamerreserved_star__COMMA__class_inherit_base__: %empty  */
#line 4281 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__class_inherit_base__({::Celeste::ast::Type::deamerreserved_star__COMMA__class_inherit_base__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__class_inherit_base__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13105 "Celeste_parser.tab.c"
    break;

  case 334: /* class_name: symbol_reference  */
#line 4291 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::class_name({::Celeste::ast::Type::class_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_class_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13116 "Celeste_parser.tab.c"
    break;

  case 335: /* execution_keyword_permutation: CODE  */
#line 4301 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13127 "Celeste_parser.tab.c"
    break;

  case 336: /* execution_keyword_permutation: RUNTIME  */
#line 4307 "./Celeste_parser.y"
                   {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::RUNTIME({::Celeste::ast::Type::RUNTIME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13138 "Celeste_parser.tab.c"
    break;

  case 337: /* execution_keyword_permutation: CODE RUNTIME  */
#line 4313 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::RUNTIME({::Celeste::ast::Type::RUNTIME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13149 "Celeste_parser.tab.c"
    break;

  case 338: /* execution_keyword_permutation: RUNTIME CODE  */
#line 4319 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::RUNTIME({::Celeste::ast::Type::RUNTIME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13160 "Celeste_parser.tab.c"
    break;

  case 339: /* execution_keyword_permutation: %empty  */
#line 4325 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13171 "Celeste_parser.tab.c"
    break;

  case 340: /* class_body: deamerreserved_star__class_stmt__  */
#line 4335 "./Celeste_parser.y"
                                           {
		auto* const newNode = new Celeste::ast::node::class_body({::Celeste::ast::Type::class_body, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__class_stmt__) });
		((*yyvalp).Celeste_class_body) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13182 "Celeste_parser.tab.c"
    break;

  case 341: /* deamerreserved_star__class_stmt__: class_stmt deamerreserved_star__class_stmt__  */
#line 4345 "./Celeste_parser.y"
                                                      {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__class_stmt__({::Celeste::ast::Type::deamerreserved_star__class_stmt__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_stmt), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__class_stmt__) });
		((*yyvalp).Celeste_deamerreserved_star__class_stmt__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13193 "Celeste_parser.tab.c"
    break;

  case 342: /* deamerreserved_star__class_stmt__: %empty  */
#line 4351 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__class_stmt__({::Celeste::ast::Type::deamerreserved_star__class_stmt__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__class_stmt__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13204 "Celeste_parser.tab.c"
    break;

  case 343: /* class_stmt: accessibility  */
#line 4361 "./Celeste_parser.y"
                       {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_accessibility) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13215 "Celeste_parser.tab.c"
    break;

  case 344: /* class_stmt: class_stmt_member_field_declaration  */
#line 4367 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_stmt_member_field_declaration) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13226 "Celeste_parser.tab.c"
    break;

  case 345: /* class_stmt: class_stmt_member_function  */
#line 4373 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_stmt_member_function) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13237 "Celeste_parser.tab.c"
    break;

  case 346: /* class_stmt: class_stmt_member_template_function  */
#line 4379 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_stmt_member_template_function) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13248 "Celeste_parser.tab.c"
    break;

  case 347: /* class_stmt: class_stmt_constructor  */
#line 4385 "./Celeste_parser.y"
                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_stmt_constructor) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13259 "Celeste_parser.tab.c"
    break;

  case 348: /* class_stmt: template_class_stmt_constructor  */
#line 4391 "./Celeste_parser.y"
                                           {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_class_stmt_constructor) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13270 "Celeste_parser.tab.c"
    break;

  case 349: /* class_stmt_member_field_declaration: attribute_section type member_field_name EQ value_list COMMA  */
#line 4401 "./Celeste_parser.y"
                                                                      {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13282 "Celeste_parser.tab.c"
    break;

  case 350: /* class_stmt_member_field_declaration: attribute_section type member_field_name COMMA  */
#line 4408 "./Celeste_parser.y"
                                                          {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13294 "Celeste_parser.tab.c"
    break;

  case 351: /* class_stmt_member_field_declaration: type member_field_name EQ value_list COMMA  */
#line 4415 "./Celeste_parser.y"
                                                      {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13306 "Celeste_parser.tab.c"
    break;

  case 352: /* class_stmt_member_field_declaration: type member_field_name COMMA  */
#line 4422 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13318 "Celeste_parser.tab.c"
    break;

  case 353: /* class_stmt_member_field_declaration: attribute_section type member_field_name EQ value_list SEMICOLON  */
#line 4429 "./Celeste_parser.y"
                                                                            {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13330 "Celeste_parser.tab.c"
    break;

  case 354: /* class_stmt_member_field_declaration: attribute_section type member_field_name SEMICOLON  */
#line 4436 "./Celeste_parser.y"
                                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13342 "Celeste_parser.tab.c"
    break;

  case 355: /* class_stmt_member_field_declaration: type member_field_name EQ value_list SEMICOLON  */
#line 4443 "./Celeste_parser.y"
                                                          {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13354 "Celeste_parser.tab.c"
    break;

  case 356: /* class_stmt_member_field_declaration: type member_field_name SEMICOLON  */
#line 4450 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13366 "Celeste_parser.tab.c"
    break;

  case 357: /* class_stmt_member_field_declaration: attribute_section type member_field_name EQ value_list  */
#line 4457 "./Celeste_parser.y"
                                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13377 "Celeste_parser.tab.c"
    break;

  case 358: /* class_stmt_member_field_declaration: attribute_section type member_field_name  */
#line 4463 "./Celeste_parser.y"
                                                    {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13388 "Celeste_parser.tab.c"
    break;

  case 359: /* class_stmt_member_field_declaration: type member_field_name EQ value_list  */
#line 4469 "./Celeste_parser.y"
                                                {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13399 "Celeste_parser.tab.c"
    break;

  case 360: /* class_stmt_member_field_declaration: type member_field_name  */
#line 4475 "./Celeste_parser.y"
                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13410 "Celeste_parser.tab.c"
    break;

  case 361: /* member_field_name: symbol_reference  */
#line 4485 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::member_field_name({::Celeste::ast::Type::member_field_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_member_field_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13421 "Celeste_parser.tab.c"
    break;

  case 362: /* class_stmt_member_function: VIRTUAL function_declaration OVERRIDE  */
#line 4495 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VIRTUAL({::Celeste::ast::Type::VIRTUAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13432 "Celeste_parser.tab.c"
    break;

  case 363: /* class_stmt_member_function: VIRTUAL function_declaration  */
#line 4501 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VIRTUAL({::Celeste::ast::Type::VIRTUAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13443 "Celeste_parser.tab.c"
    break;

  case 364: /* class_stmt_member_function: PURE function_declaration OVERRIDE  */
#line 4507 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PURE({::Celeste::ast::Type::PURE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13454 "Celeste_parser.tab.c"
    break;

  case 365: /* class_stmt_member_function: PURE function_declaration  */
#line 4513 "./Celeste_parser.y"
                                     {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PURE({::Celeste::ast::Type::PURE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13465 "Celeste_parser.tab.c"
    break;

  case 366: /* class_stmt_member_function: function_declaration OVERRIDE  */
#line 4519 "./Celeste_parser.y"
                                         {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13476 "Celeste_parser.tab.c"
    break;

  case 367: /* class_stmt_member_function: function_declaration  */
#line 4525 "./Celeste_parser.y"
                                {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13487 "Celeste_parser.tab.c"
    break;

  case 368: /* class_stmt_member_template_function: VIRTUAL template_function_declaration OVERRIDE  */
#line 4535 "./Celeste_parser.y"
                                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VIRTUAL({::Celeste::ast::Type::VIRTUAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13498 "Celeste_parser.tab.c"
    break;

  case 369: /* class_stmt_member_template_function: VIRTUAL template_function_declaration  */
#line 4541 "./Celeste_parser.y"
                                                 {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VIRTUAL({::Celeste::ast::Type::VIRTUAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13509 "Celeste_parser.tab.c"
    break;

  case 370: /* class_stmt_member_template_function: PURE template_function_declaration OVERRIDE  */
#line 4547 "./Celeste_parser.y"
                                                       {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PURE({::Celeste::ast::Type::PURE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13520 "Celeste_parser.tab.c"
    break;

  case 371: /* class_stmt_member_template_function: PURE template_function_declaration  */
#line 4553 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PURE({::Celeste::ast::Type::PURE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13531 "Celeste_parser.tab.c"
    break;

  case 372: /* class_stmt_member_template_function: template_function_declaration OVERRIDE  */
#line 4559 "./Celeste_parser.y"
                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13542 "Celeste_parser.tab.c"
    break;

  case 373: /* class_stmt_member_template_function: template_function_declaration  */
#line 4565 "./Celeste_parser.y"
                                         {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13553 "Celeste_parser.tab.c"
    break;

  case 374: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4575 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13571 "Celeste_parser.tab.c"
    break;

  case 375: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4588 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13588 "Celeste_parser.tab.c"
    break;

  case 376: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4600 "./Celeste_parser.y"
                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13606 "Celeste_parser.tab.c"
    break;

  case 377: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4613 "./Celeste_parser.y"
                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13623 "Celeste_parser.tab.c"
    break;

  case 378: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4625 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13641 "Celeste_parser.tab.c"
    break;

  case 379: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4638 "./Celeste_parser.y"
                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13658 "Celeste_parser.tab.c"
    break;

  case 380: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4650 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13676 "Celeste_parser.tab.c"
    break;

  case 381: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4663 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13693 "Celeste_parser.tab.c"
    break;

  case 382: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4675 "./Celeste_parser.y"
                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13711 "Celeste_parser.tab.c"
    break;

  case 383: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4688 "./Celeste_parser.y"
                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13728 "Celeste_parser.tab.c"
    break;

  case 384: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4700 "./Celeste_parser.y"
                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13746 "Celeste_parser.tab.c"
    break;

  case 385: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4713 "./Celeste_parser.y"
                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13763 "Celeste_parser.tab.c"
    break;

  case 386: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4725 "./Celeste_parser.y"
                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13781 "Celeste_parser.tab.c"
    break;

  case 387: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4738 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13798 "Celeste_parser.tab.c"
    break;

  case 388: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4750 "./Celeste_parser.y"
                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13816 "Celeste_parser.tab.c"
    break;

  case 389: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4763 "./Celeste_parser.y"
                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13833 "Celeste_parser.tab.c"
    break;

  case 390: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4775 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13851 "Celeste_parser.tab.c"
    break;

  case 391: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4788 "./Celeste_parser.y"
                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13868 "Celeste_parser.tab.c"
    break;

  case 392: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4800 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13886 "Celeste_parser.tab.c"
    break;

  case 393: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4813 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13903 "Celeste_parser.tab.c"
    break;

  case 394: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4825 "./Celeste_parser.y"
                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13921 "Celeste_parser.tab.c"
    break;

  case 395: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4838 "./Celeste_parser.y"
                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13938 "Celeste_parser.tab.c"
    break;

  case 396: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4850 "./Celeste_parser.y"
                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13956 "Celeste_parser.tab.c"
    break;

  case 397: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4863 "./Celeste_parser.y"
                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13973 "Celeste_parser.tab.c"
    break;

  case 398: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4875 "./Celeste_parser.y"
                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 24, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13991 "Celeste_parser.tab.c"
    break;

  case 399: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4888 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 25, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14008 "Celeste_parser.tab.c"
    break;

  case 400: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4900 "./Celeste_parser.y"
                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 26, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14026 "Celeste_parser.tab.c"
    break;

  case 401: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4913 "./Celeste_parser.y"
                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 27, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14043 "Celeste_parser.tab.c"
    break;

  case 402: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4925 "./Celeste_parser.y"
                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 28, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14061 "Celeste_parser.tab.c"
    break;

  case 403: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4938 "./Celeste_parser.y"
                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 29, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14078 "Celeste_parser.tab.c"
    break;

  case 404: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4950 "./Celeste_parser.y"
                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 30, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14096 "Celeste_parser.tab.c"
    break;

  case 405: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4963 "./Celeste_parser.y"
                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 31, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14113 "Celeste_parser.tab.c"
    break;

  case 406: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4975 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 32, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14131 "Celeste_parser.tab.c"
    break;

  case 407: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4988 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 33, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14148 "Celeste_parser.tab.c"
    break;

  case 408: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5000 "./Celeste_parser.y"
                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 34, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14166 "Celeste_parser.tab.c"
    break;

  case 409: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5013 "./Celeste_parser.y"
                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 35, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14183 "Celeste_parser.tab.c"
    break;

  case 410: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5025 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 36, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14201 "Celeste_parser.tab.c"
    break;

  case 411: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5038 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 37, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14218 "Celeste_parser.tab.c"
    break;

  case 412: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5050 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 38, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14236 "Celeste_parser.tab.c"
    break;

  case 413: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5063 "./Celeste_parser.y"
                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 39, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14253 "Celeste_parser.tab.c"
    break;

  case 414: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5075 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 40, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14271 "Celeste_parser.tab.c"
    break;

  case 415: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5088 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 41, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14288 "Celeste_parser.tab.c"
    break;

  case 416: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5100 "./Celeste_parser.y"
                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 42, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14306 "Celeste_parser.tab.c"
    break;

  case 417: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5113 "./Celeste_parser.y"
                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 43, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14323 "Celeste_parser.tab.c"
    break;

  case 418: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5125 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 44, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14341 "Celeste_parser.tab.c"
    break;

  case 419: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5138 "./Celeste_parser.y"
                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 45, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14358 "Celeste_parser.tab.c"
    break;

  case 420: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5150 "./Celeste_parser.y"
                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 46, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14376 "Celeste_parser.tab.c"
    break;

  case 421: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5163 "./Celeste_parser.y"
                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 47, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14393 "Celeste_parser.tab.c"
    break;

  case 422: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5175 "./Celeste_parser.y"
                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 48, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14411 "Celeste_parser.tab.c"
    break;

  case 423: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5188 "./Celeste_parser.y"
                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 49, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14428 "Celeste_parser.tab.c"
    break;

  case 424: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5200 "./Celeste_parser.y"
                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 50, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14446 "Celeste_parser.tab.c"
    break;

  case 425: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5213 "./Celeste_parser.y"
                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 51, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14463 "Celeste_parser.tab.c"
    break;

  case 426: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5225 "./Celeste_parser.y"
                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 52, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14481 "Celeste_parser.tab.c"
    break;

  case 427: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5238 "./Celeste_parser.y"
                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 53, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14498 "Celeste_parser.tab.c"
    break;

  case 428: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5250 "./Celeste_parser.y"
                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 54, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14516 "Celeste_parser.tab.c"
    break;

  case 429: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5263 "./Celeste_parser.y"
                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 55, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14533 "Celeste_parser.tab.c"
    break;

  case 430: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5275 "./Celeste_parser.y"
                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 56, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14551 "Celeste_parser.tab.c"
    break;

  case 431: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5288 "./Celeste_parser.y"
                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 57, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14568 "Celeste_parser.tab.c"
    break;

  case 432: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5300 "./Celeste_parser.y"
                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 58, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14586 "Celeste_parser.tab.c"
    break;

  case 433: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5313 "./Celeste_parser.y"
                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 59, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14603 "Celeste_parser.tab.c"
    break;

  case 434: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5325 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 60, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14621 "Celeste_parser.tab.c"
    break;

  case 435: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5338 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 61, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14638 "Celeste_parser.tab.c"
    break;

  case 436: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5350 "./Celeste_parser.y"
                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 62, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14656 "Celeste_parser.tab.c"
    break;

  case 437: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5363 "./Celeste_parser.y"
                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 63, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14673 "Celeste_parser.tab.c"
    break;

  case 438: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5375 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 64, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14691 "Celeste_parser.tab.c"
    break;

  case 439: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5388 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 65, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14708 "Celeste_parser.tab.c"
    break;

  case 440: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5400 "./Celeste_parser.y"
                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 66, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14726 "Celeste_parser.tab.c"
    break;

  case 441: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5413 "./Celeste_parser.y"
                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 67, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14743 "Celeste_parser.tab.c"
    break;

  case 442: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5425 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 68, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14761 "Celeste_parser.tab.c"
    break;

  case 443: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5438 "./Celeste_parser.y"
                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 69, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14778 "Celeste_parser.tab.c"
    break;

  case 444: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5450 "./Celeste_parser.y"
                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 70, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14796 "Celeste_parser.tab.c"
    break;

  case 445: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5463 "./Celeste_parser.y"
                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 71, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14813 "Celeste_parser.tab.c"
    break;

  case 446: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5475 "./Celeste_parser.y"
                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 72, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14831 "Celeste_parser.tab.c"
    break;

  case 447: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5488 "./Celeste_parser.y"
                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 73, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14848 "Celeste_parser.tab.c"
    break;

  case 448: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5500 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 74, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14866 "Celeste_parser.tab.c"
    break;

  case 449: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5513 "./Celeste_parser.y"
                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 75, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14883 "Celeste_parser.tab.c"
    break;

  case 450: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5525 "./Celeste_parser.y"
                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 76, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14901 "Celeste_parser.tab.c"
    break;

  case 451: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5538 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 77, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14918 "Celeste_parser.tab.c"
    break;

  case 452: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5550 "./Celeste_parser.y"
                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 78, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14936 "Celeste_parser.tab.c"
    break;

  case 453: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5563 "./Celeste_parser.y"
                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 79, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14953 "Celeste_parser.tab.c"
    break;

  case 454: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5575 "./Celeste_parser.y"
                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 80, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14971 "Celeste_parser.tab.c"
    break;

  case 455: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5588 "./Celeste_parser.y"
                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 81, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14988 "Celeste_parser.tab.c"
    break;

  case 456: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5600 "./Celeste_parser.y"
                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 82, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15006 "Celeste_parser.tab.c"
    break;

  case 457: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5613 "./Celeste_parser.y"
                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 83, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15023 "Celeste_parser.tab.c"
    break;

  case 458: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5625 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 84, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15041 "Celeste_parser.tab.c"
    break;

  case 459: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5638 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 85, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15058 "Celeste_parser.tab.c"
    break;

  case 460: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5650 "./Celeste_parser.y"
                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 86, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15076 "Celeste_parser.tab.c"
    break;

  case 461: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5663 "./Celeste_parser.y"
                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 87, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15093 "Celeste_parser.tab.c"
    break;

  case 462: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5675 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 88, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15111 "Celeste_parser.tab.c"
    break;

  case 463: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5688 "./Celeste_parser.y"
                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 89, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15128 "Celeste_parser.tab.c"
    break;

  case 464: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5700 "./Celeste_parser.y"
                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 90, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15146 "Celeste_parser.tab.c"
    break;

  case 465: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5713 "./Celeste_parser.y"
                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 91, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15163 "Celeste_parser.tab.c"
    break;

  case 466: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5725 "./Celeste_parser.y"
                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 92, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15181 "Celeste_parser.tab.c"
    break;

  case 467: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5738 "./Celeste_parser.y"
                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 93, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15198 "Celeste_parser.tab.c"
    break;

  case 468: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5750 "./Celeste_parser.y"
                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 94, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15216 "Celeste_parser.tab.c"
    break;

  case 469: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5763 "./Celeste_parser.y"
                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 95, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15233 "Celeste_parser.tab.c"
    break;

  case 470: /* class_stmt_constructor: attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5779 "./Celeste_parser.y"
                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15249 "Celeste_parser.tab.c"
    break;

  case 471: /* class_stmt_constructor: attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5790 "./Celeste_parser.y"
                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15264 "Celeste_parser.tab.c"
    break;

  case 472: /* class_stmt_constructor: attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5800 "./Celeste_parser.y"
                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15280 "Celeste_parser.tab.c"
    break;

  case 473: /* class_stmt_constructor: attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5811 "./Celeste_parser.y"
                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15295 "Celeste_parser.tab.c"
    break;

  case 474: /* class_stmt_constructor: class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5821 "./Celeste_parser.y"
                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15311 "Celeste_parser.tab.c"
    break;

  case 475: /* class_stmt_constructor: class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5832 "./Celeste_parser.y"
                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15326 "Celeste_parser.tab.c"
    break;

  case 476: /* class_stmt_constructor: class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5842 "./Celeste_parser.y"
                                                                                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15342 "Celeste_parser.tab.c"
    break;

  case 477: /* class_stmt_constructor: class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5853 "./Celeste_parser.y"
                                                                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15357 "Celeste_parser.tab.c"
    break;

  case 478: /* class_stmt_constructor: attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5863 "./Celeste_parser.y"
                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15373 "Celeste_parser.tab.c"
    break;

  case 479: /* class_stmt_constructor: attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5874 "./Celeste_parser.y"
                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15388 "Celeste_parser.tab.c"
    break;

  case 480: /* class_stmt_constructor: attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5884 "./Celeste_parser.y"
                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15404 "Celeste_parser.tab.c"
    break;

  case 481: /* class_stmt_constructor: attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5895 "./Celeste_parser.y"
                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15419 "Celeste_parser.tab.c"
    break;

  case 482: /* class_stmt_constructor: attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5905 "./Celeste_parser.y"
                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15435 "Celeste_parser.tab.c"
    break;

  case 483: /* class_stmt_constructor: attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5916 "./Celeste_parser.y"
                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15450 "Celeste_parser.tab.c"
    break;

  case 484: /* class_stmt_constructor: attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5926 "./Celeste_parser.y"
                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15466 "Celeste_parser.tab.c"
    break;

  case 485: /* class_stmt_constructor: attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5937 "./Celeste_parser.y"
                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15481 "Celeste_parser.tab.c"
    break;

  case 486: /* class_stmt_constructor: CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5947 "./Celeste_parser.y"
                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15497 "Celeste_parser.tab.c"
    break;

  case 487: /* class_stmt_constructor: CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5958 "./Celeste_parser.y"
                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15512 "Celeste_parser.tab.c"
    break;

  case 488: /* class_stmt_constructor: CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5968 "./Celeste_parser.y"
                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15528 "Celeste_parser.tab.c"
    break;

  case 489: /* class_stmt_constructor: CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5979 "./Celeste_parser.y"
                                                                                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15543 "Celeste_parser.tab.c"
    break;

  case 490: /* class_stmt_constructor: CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5989 "./Celeste_parser.y"
                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15559 "Celeste_parser.tab.c"
    break;

  case 491: /* class_stmt_constructor: CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6000 "./Celeste_parser.y"
                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15574 "Celeste_parser.tab.c"
    break;

  case 492: /* class_stmt_constructor: CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6010 "./Celeste_parser.y"
                                                                                                         {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15590 "Celeste_parser.tab.c"
    break;

  case 493: /* class_stmt_constructor: CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6021 "./Celeste_parser.y"
                                                                                                   {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15605 "Celeste_parser.tab.c"
    break;

  case 494: /* accessibility: PUBLIC  */
#line 6035 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::accessibility({::Celeste::ast::Type::accessibility, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PUBLIC({::Celeste::ast::Type::PUBLIC, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_accessibility) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15616 "Celeste_parser.tab.c"
    break;

  case 495: /* accessibility: PROTECTED  */
#line 6041 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::accessibility({::Celeste::ast::Type::accessibility, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PROTECTED({::Celeste::ast::Type::PROTECTED, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_accessibility) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15627 "Celeste_parser.tab.c"
    break;

  case 496: /* accessibility: PRIVATE  */
#line 6047 "./Celeste_parser.y"
                   {
		auto* const newNode = new Celeste::ast::node::accessibility({::Celeste::ast::Type::accessibility, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PRIVATE({::Celeste::ast::Type::PRIVATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_accessibility) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15638 "Celeste_parser.tab.c"
    break;

  case 497: /* class_inherit_base: inherit_base  */
#line 6057 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::class_inherit_base({::Celeste::ast::Type::class_inherit_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_inherit_base) });
		((*yyvalp).Celeste_class_inherit_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15649 "Celeste_parser.tab.c"
    break;

  case 498: /* class_inherit_base: compound_base  */
#line 6063 "./Celeste_parser.y"
                         {
		auto* const newNode = new Celeste::ast::node::class_inherit_base({::Celeste::ast::Type::class_inherit_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_compound_base) });
		((*yyvalp).Celeste_class_inherit_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15660 "Celeste_parser.tab.c"
    break;

  case 499: /* inherit_base: INHERIT inherit_base_name  */
#line 6073 "./Celeste_parser.y"
                                   {
		auto* const newNode = new Celeste::ast::node::inherit_base({::Celeste::ast::Type::inherit_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::INHERIT({::Celeste::ast::Type::INHERIT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_inherit_base_name) });
		((*yyvalp).Celeste_inherit_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15671 "Celeste_parser.tab.c"
    break;

  case 500: /* inherit_base_name: symbol_reference  */
#line 6083 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::inherit_base_name({::Celeste::ast::Type::inherit_base_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_inherit_base_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15682 "Celeste_parser.tab.c"
    break;

  case 501: /* compound_base: COMPOSITE compound_base_name  */
#line 6093 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_compound_base_name) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15693 "Celeste_parser.tab.c"
    break;

  case 502: /* compound_base: COMPOSITE compound_base_name AS compound_base_alias  */
#line 6099 "./Celeste_parser.y"
                                                               {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_compound_base_alias) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15704 "Celeste_parser.tab.c"
    break;

  case 503: /* compound_base: COMPOSITE compound_base_name AS LEFT_SQUARE_BRACKET deamerreserved_arrow__compound_base_alias__ COMMA RIGHT_SQUARE_BRACKET  */
#line 6105 "./Celeste_parser.y"
                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__compound_base_alias__) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15718 "Celeste_parser.tab.c"
    break;

  case 504: /* compound_base: COMPOSITE compound_base_name AS LEFT_SQUARE_BRACKET deamerreserved_arrow__compound_base_alias__ RIGHT_SQUARE_BRACKET  */
#line 6114 "./Celeste_parser.y"
                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__compound_base_alias__) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15731 "Celeste_parser.tab.c"
    break;

  case 505: /* compound_base: COMPOSITE compound_base_name AS LEFT_SQUARE_BRACKET COMMA RIGHT_SQUARE_BRACKET  */
#line 6122 "./Celeste_parser.y"
                                                                                          {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15745 "Celeste_parser.tab.c"
    break;

  case 506: /* compound_base: COMPOSITE compound_base_name AS LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET  */
#line 6131 "./Celeste_parser.y"
                                                                                    {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15758 "Celeste_parser.tab.c"
    break;

  case 507: /* deamerreserved_arrow__compound_base_alias__: compound_base_alias deamerreserved_star__COMMA__compound_base_alias__  */
#line 6143 "./Celeste_parser.y"
                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__compound_base_alias__({::Celeste::ast::Type::deamerreserved_arrow__compound_base_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_compound_base_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__compound_base_alias__) });
		((*yyvalp).Celeste_deamerreserved_arrow__compound_base_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15769 "Celeste_parser.tab.c"
    break;

  case 508: /* deamerreserved_star__COMMA__compound_base_alias__: COMMA compound_base_alias deamerreserved_star__COMMA__compound_base_alias__  */
#line 6153 "./Celeste_parser.y"
                                                                                     {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__compound_base_alias__({::Celeste::ast::Type::deamerreserved_star__COMMA__compound_base_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_compound_base_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__compound_base_alias__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__compound_base_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 15781 "Celeste_parser.tab.c"
    break;

  case 509: /* deamerreserved_star__COMMA__compound_base_alias__: %empty  */
#line 6160 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__compound_base_alias__({::Celeste::ast::Type::deamerreserved_star__COMMA__compound_base_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__compound_base_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15792 "Celeste_parser.tab.c"
    break;

  case 510: /* compound_base_name: symbol_reference  */
#line 6170 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::compound_base_name({::Celeste::ast::Type::compound_base_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_compound_base_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15803 "Celeste_parser.tab.c"
    break;

  case 511: /* compound_base_alias: VARNAME  */
#line 6180 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::compound_base_alias({::Celeste::ast::Type::compound_base_alias, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_compound_base_alias) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15814 "Celeste_parser.tab.c"
    break;

  case 512: /* attribute_section: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET deamerreserved_arrow__attribute__ RIGHT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET  */
#line 6190 "./Celeste_parser.y"
                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::attribute_section({::Celeste::ast::Type::attribute_section, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute__) });
		((*yyvalp).Celeste_attribute_section) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15829 "Celeste_parser.tab.c"
    break;

  case 513: /* attribute_section: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET  */
#line 6200 "./Celeste_parser.y"
                                                                                             {
		auto* const newNode = new Celeste::ast::node::attribute_section({::Celeste::ast::Type::attribute_section, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_attribute_section) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15844 "Celeste_parser.tab.c"
    break;

  case 514: /* deamerreserved_arrow__attribute__: attribute deamerreserved_star__deamerreserved_optional__COMMA____attribute__  */
#line 6214 "./Celeste_parser.y"
                                                                                      {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__attribute__({::Celeste::ast::Type::deamerreserved_arrow__attribute__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) });
		((*yyvalp).Celeste_deamerreserved_arrow__attribute__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15855 "Celeste_parser.tab.c"
    break;

  case 515: /* deamerreserved_star__deamerreserved_optional__COMMA____attribute__: COMMA attribute deamerreserved_star__deamerreserved_optional__COMMA____attribute__  */
#line 6224 "./Celeste_parser.y"
                                                                                            {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__deamerreserved_optional__COMMA____attribute__({::Celeste::ast::Type::deamerreserved_star__deamerreserved_optional__COMMA____attribute__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) });
		((*yyvalp).Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 15867 "Celeste_parser.tab.c"
    break;

  case 516: /* deamerreserved_star__deamerreserved_optional__COMMA____attribute__: attribute deamerreserved_star__deamerreserved_optional__COMMA____attribute__  */
#line 6231 "./Celeste_parser.y"
                                                                                        {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__deamerreserved_optional__COMMA____attribute__({::Celeste::ast::Type::deamerreserved_star__deamerreserved_optional__COMMA____attribute__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) });
		((*yyvalp).Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15878 "Celeste_parser.tab.c"
    break;

  case 517: /* deamerreserved_star__deamerreserved_optional__COMMA____attribute__: %empty  */
#line 6237 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__deamerreserved_optional__COMMA____attribute__({::Celeste::ast::Type::deamerreserved_star__deamerreserved_optional__COMMA____attribute__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15889 "Celeste_parser.tab.c"
    break;

  case 518: /* attribute: symbol_name  */
#line 6247 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_name) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15900 "Celeste_parser.tab.c"
    break;

  case 519: /* attribute: symbol_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_argument__ RIGHT_PARANTHESIS  */
#line 6253 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_argument__) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15913 "Celeste_parser.tab.c"
    break;

  case 520: /* attribute: symbol_name LEFT_PARANTHESIS RIGHT_PARANTHESIS  */
#line 6261 "./Celeste_parser.y"
                                                          {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_symbol_name) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15926 "Celeste_parser.tab.c"
    break;

  case 521: /* attribute: symbol_name LEFT_SQUARE_BRACKET deamerreserved_arrow__attribute_template_argument__ RIGHT_SQUARE_BRACKET LEFT_PARANTHESIS deamerreserved_arrow__attribute_argument__ RIGHT_PARANTHESIS  */
#line 6269 "./Celeste_parser.y"
                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_template_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_argument__) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15941 "Celeste_parser.tab.c"
    break;

  case 522: /* attribute: symbol_name LEFT_SQUARE_BRACKET deamerreserved_arrow__attribute_template_argument__ RIGHT_SQUARE_BRACKET LEFT_PARANTHESIS RIGHT_PARANTHESIS  */
#line 6279 "./Celeste_parser.y"
                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_template_argument__) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15956 "Celeste_parser.tab.c"
    break;

  case 523: /* attribute: symbol_name LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET LEFT_PARANTHESIS deamerreserved_arrow__attribute_argument__ RIGHT_PARANTHESIS  */
#line 6289 "./Celeste_parser.y"
                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_argument__) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15971 "Celeste_parser.tab.c"
    break;

  case 524: /* attribute: symbol_name LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET LEFT_PARANTHESIS RIGHT_PARANTHESIS  */
#line 6299 "./Celeste_parser.y"
                                                                                                   {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_symbol_name) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15986 "Celeste_parser.tab.c"
    break;

  case 525: /* deamerreserved_arrow__attribute_argument__: attribute_argument deamerreserved_star__COMMA__attribute_argument__  */
#line 6313 "./Celeste_parser.y"
                                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__attribute_argument__({::Celeste::ast::Type::deamerreserved_arrow__attribute_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__attribute_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15997 "Celeste_parser.tab.c"
    break;

  case 526: /* deamerreserved_star__COMMA__attribute_argument__: COMMA attribute_argument deamerreserved_star__COMMA__attribute_argument__  */
#line 6323 "./Celeste_parser.y"
                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16009 "Celeste_parser.tab.c"
    break;

  case 527: /* deamerreserved_star__COMMA__attribute_argument__: %empty  */
#line 6330 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16020 "Celeste_parser.tab.c"
    break;

  case 528: /* deamerreserved_arrow__attribute_template_argument__: attribute_template_argument deamerreserved_star__COMMA__attribute_template_argument__  */
#line 6340 "./Celeste_parser.y"
                                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__attribute_template_argument__({::Celeste::ast::Type::deamerreserved_arrow__attribute_template_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_template_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_template_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__attribute_template_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16031 "Celeste_parser.tab.c"
    break;

  case 529: /* deamerreserved_star__COMMA__attribute_template_argument__: COMMA attribute_template_argument deamerreserved_star__COMMA__attribute_template_argument__  */
#line 6350 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_template_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_template_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_template_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_template_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_template_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16043 "Celeste_parser.tab.c"
    break;

  case 530: /* deamerreserved_star__COMMA__attribute_template_argument__: %empty  */
#line 6357 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_template_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_template_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_template_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16054 "Celeste_parser.tab.c"
    break;

  case 531: /* attribute_argument: expression  */
#line 6367 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::attribute_argument({::Celeste::ast::Type::attribute_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_attribute_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16065 "Celeste_parser.tab.c"
    break;

  case 532: /* attribute_template_argument: expression  */
#line 6377 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::attribute_template_argument({::Celeste::ast::Type::attribute_template_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_attribute_template_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16076 "Celeste_parser.tab.c"
    break;

  case 533: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6387 "./Celeste_parser.y"
                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16092 "Celeste_parser.tab.c"
    break;

  case 534: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6398 "./Celeste_parser.y"
                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16108 "Celeste_parser.tab.c"
    break;

  case 535: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6409 "./Celeste_parser.y"
                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16123 "Celeste_parser.tab.c"
    break;

  case 536: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6419 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16138 "Celeste_parser.tab.c"
    break;

  case 537: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6429 "./Celeste_parser.y"
                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16154 "Celeste_parser.tab.c"
    break;

  case 538: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6440 "./Celeste_parser.y"
                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16170 "Celeste_parser.tab.c"
    break;

  case 539: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6451 "./Celeste_parser.y"
                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16185 "Celeste_parser.tab.c"
    break;

  case 540: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6461 "./Celeste_parser.y"
                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16200 "Celeste_parser.tab.c"
    break;

  case 541: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6471 "./Celeste_parser.y"
                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16216 "Celeste_parser.tab.c"
    break;

  case 542: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6482 "./Celeste_parser.y"
                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16232 "Celeste_parser.tab.c"
    break;

  case 543: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6493 "./Celeste_parser.y"
                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16247 "Celeste_parser.tab.c"
    break;

  case 544: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6503 "./Celeste_parser.y"
                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16262 "Celeste_parser.tab.c"
    break;

  case 545: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6513 "./Celeste_parser.y"
                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16278 "Celeste_parser.tab.c"
    break;

  case 546: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6524 "./Celeste_parser.y"
                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16294 "Celeste_parser.tab.c"
    break;

  case 547: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6535 "./Celeste_parser.y"
                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16309 "Celeste_parser.tab.c"
    break;

  case 548: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6545 "./Celeste_parser.y"
                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16324 "Celeste_parser.tab.c"
    break;

  case 549: /* deamerreserved_arrow__attribute_function_argument__: attribute_function_argument deamerreserved_star__COMMA__attribute_function_argument__  */
#line 6559 "./Celeste_parser.y"
                                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__attribute_function_argument__({::Celeste::ast::Type::deamerreserved_arrow__attribute_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_function_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__attribute_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16335 "Celeste_parser.tab.c"
    break;

  case 550: /* deamerreserved_star__COMMA__attribute_function_argument__: COMMA attribute_function_argument deamerreserved_star__COMMA__attribute_function_argument__  */
#line 6569 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_function_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16347 "Celeste_parser.tab.c"
    break;

  case 551: /* deamerreserved_star__COMMA__attribute_function_argument__: %empty  */
#line 6576 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16358 "Celeste_parser.tab.c"
    break;

  case 552: /* attribute_function_argument: function_argument  */
#line 6586 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::attribute_function_argument({::Celeste::ast::Type::attribute_function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_argument) });
		((*yyvalp).Celeste_attribute_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16369 "Celeste_parser.tab.c"
    break;

  case 553: /* attribute_name: symbol_name  */
#line 6596 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::attribute_name({::Celeste::ast::Type::attribute_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_name) });
		((*yyvalp).Celeste_attribute_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16380 "Celeste_parser.tab.c"
    break;

  case 554: /* enum_declaration: attribute_section ENUM enum_name LEFT_BRACKET deamerreserved_star__enumeration__ RIGHT_BRACKET  */
#line 6606 "./Celeste_parser.y"
                                                                                                        {
		auto* const newNode = new Celeste::ast::node::enum_declaration({::Celeste::ast::Type::enum_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::ENUM({::Celeste::ast::Type::ENUM, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_enum_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__enumeration__) });
		((*yyvalp).Celeste_enum_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16393 "Celeste_parser.tab.c"
    break;

  case 555: /* deamerreserved_star__enumeration__: enumeration deamerreserved_star__enumeration__  */
#line 6618 "./Celeste_parser.y"
                                                        {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__enumeration__({::Celeste::ast::Type::deamerreserved_star__enumeration__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_enumeration), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__enumeration__) });
		((*yyvalp).Celeste_deamerreserved_star__enumeration__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16404 "Celeste_parser.tab.c"
    break;

  case 556: /* deamerreserved_star__enumeration__: %empty  */
#line 6624 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__enumeration__({::Celeste::ast::Type::deamerreserved_star__enumeration__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__enumeration__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16415 "Celeste_parser.tab.c"
    break;

  case 557: /* enum_name: symbol_reference  */
#line 6634 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::enum_name({::Celeste::ast::Type::enum_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_enum_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16426 "Celeste_parser.tab.c"
    break;

  case 558: /* enumeration: enumeration_name EQ enumeration_value COMMA  */
#line 6644 "./Celeste_parser.y"
                                                     {
		auto* const newNode = new Celeste::ast::node::enumeration({::Celeste::ast::Type::enumeration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_enumeration_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_enumeration_value) });
		((*yyvalp).Celeste_enumeration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16438 "Celeste_parser.tab.c"
    break;

  case 559: /* enumeration: enumeration_name EQ enumeration_value  */
#line 6651 "./Celeste_parser.y"
                                                 {
		auto* const newNode = new Celeste::ast::node::enumeration({::Celeste::ast::Type::enumeration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_enumeration_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_enumeration_value) });
		((*yyvalp).Celeste_enumeration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16449 "Celeste_parser.tab.c"
    break;

  case 560: /* enumeration: enumeration_name COMMA  */
#line 6657 "./Celeste_parser.y"
                                  {
		auto* const newNode = new Celeste::ast::node::enumeration({::Celeste::ast::Type::enumeration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_enumeration_name) });
		((*yyvalp).Celeste_enumeration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16461 "Celeste_parser.tab.c"
    break;

  case 561: /* enumeration: enumeration_name  */
#line 6664 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::enumeration({::Celeste::ast::Type::enumeration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_enumeration_name) });
		((*yyvalp).Celeste_enumeration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16472 "Celeste_parser.tab.c"
    break;

  case 562: /* enumeration_name: symbol_reference  */
#line 6674 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::enumeration_name({::Celeste::ast::Type::enumeration_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_enumeration_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16483 "Celeste_parser.tab.c"
    break;

  case 563: /* enumeration_value: full_value  */
#line 6684 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::enumeration_value({::Celeste::ast::Type::enumeration_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_enumeration_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16494 "Celeste_parser.tab.c"
    break;

  case 564: /* symbol_reference: deamerreserved_arrow__symbol__  */
#line 6694 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::symbol_reference({::Celeste::ast::Type::symbol_reference, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__symbol__) });
		((*yyvalp).Celeste_symbol_reference) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16505 "Celeste_parser.tab.c"
    break;

  case 565: /* deamerreserved_arrow__symbol__: symbol deamerreserved_star__DOT__symbol_secondary__  */
#line 6704 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__symbol__({::Celeste::ast::Type::deamerreserved_arrow__symbol__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__DOT__symbol_secondary__) });
		((*yyvalp).Celeste_deamerreserved_arrow__symbol__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16516 "Celeste_parser.tab.c"
    break;

  case 566: /* deamerreserved_star__DOT__symbol_secondary__: DOT symbol_secondary deamerreserved_star__DOT__symbol_secondary__  */
#line 6714 "./Celeste_parser.y"
                                                                           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__DOT__symbol_secondary__({::Celeste::ast::Type::deamerreserved_star__DOT__symbol_secondary__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_secondary), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__DOT__symbol_secondary__) });
		((*yyvalp).Celeste_deamerreserved_star__DOT__symbol_secondary__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16528 "Celeste_parser.tab.c"
    break;

  case 567: /* deamerreserved_star__DOT__symbol_secondary__: %empty  */
#line 6721 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__DOT__symbol_secondary__({::Celeste::ast::Type::deamerreserved_star__DOT__symbol_secondary__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__DOT__symbol_secondary__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16539 "Celeste_parser.tab.c"
    break;

  case 568: /* symbol_secondary: symbol_name_secondary deamerreserved_star__symbol_access__  */
#line 6731 "./Celeste_parser.y"
                                                                    {
		auto* const newNode = new Celeste::ast::node::symbol_secondary({::Celeste::ast::Type::symbol_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_name_secondary), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__symbol_access__) });
		((*yyvalp).Celeste_symbol_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16550 "Celeste_parser.tab.c"
    break;

  case 569: /* deamerreserved_star__symbol_access__: symbol_access deamerreserved_star__symbol_access__  */
#line 6741 "./Celeste_parser.y"
                                                            {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__symbol_access__({::Celeste::ast::Type::deamerreserved_star__symbol_access__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_access), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__symbol_access__) });
		((*yyvalp).Celeste_deamerreserved_star__symbol_access__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16561 "Celeste_parser.tab.c"
    break;

  case 570: /* deamerreserved_star__symbol_access__: %empty  */
#line 6747 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__symbol_access__({::Celeste::ast::Type::deamerreserved_star__symbol_access__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__symbol_access__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16572 "Celeste_parser.tab.c"
    break;

  case 571: /* symbol: symbol_name deamerreserved_star__symbol_access__  */
#line 6757 "./Celeste_parser.y"
                                                          {
		auto* const newNode = new Celeste::ast::node::symbol({::Celeste::ast::Type::symbol, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__symbol_access__) });
		((*yyvalp).Celeste_symbol) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16583 "Celeste_parser.tab.c"
    break;

  case 572: /* symbol_access: index_access  */
#line 6767 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::symbol_access({::Celeste::ast::Type::symbol_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_index_access) });
		((*yyvalp).Celeste_symbol_access) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16594 "Celeste_parser.tab.c"
    break;

  case 573: /* symbol_access: anonymous_access  */
#line 6773 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::symbol_access({::Celeste::ast::Type::symbol_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_anonymous_access) });
		((*yyvalp).Celeste_symbol_access) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16605 "Celeste_parser.tab.c"
    break;

  case 574: /* symbol_access: function_access  */
#line 6779 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::symbol_access({::Celeste::ast::Type::symbol_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_access) });
		((*yyvalp).Celeste_symbol_access) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16616 "Celeste_parser.tab.c"
    break;

  case 575: /* symbol_access: auto_deduce_array  */
#line 6785 "./Celeste_parser.y"
                             {
		auto* const newNode = new Celeste::ast::node::symbol_access({::Celeste::ast::Type::symbol_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_auto_deduce_array) });
		((*yyvalp).Celeste_symbol_access) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16627 "Celeste_parser.tab.c"
    break;

  case 576: /* auto_deduce_array: LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET  */
#line 6795 "./Celeste_parser.y"
                                                  {
		auto* const newNode = new Celeste::ast::node::auto_deduce_array({::Celeste::ast::Type::auto_deduce_array, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_auto_deduce_array) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16640 "Celeste_parser.tab.c"
    break;

  case 577: /* symbol_name_secondary: VARNAME  */
#line 6807 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16651 "Celeste_parser.tab.c"
    break;

  case 578: /* symbol_name_secondary: FOR  */
#line 6813 "./Celeste_parser.y"
               {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16662 "Celeste_parser.tab.c"
    break;

  case 579: /* symbol_name_secondary: CLASS  */
#line 6819 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16673 "Celeste_parser.tab.c"
    break;

  case 580: /* symbol_name_secondary: IF  */
#line 6825 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::IF({::Celeste::ast::Type::IF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16684 "Celeste_parser.tab.c"
    break;

  case 581: /* symbol_name_secondary: ELSEIF  */
#line 6831 "./Celeste_parser.y"
                  {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSEIF({::Celeste::ast::Type::ELSEIF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16695 "Celeste_parser.tab.c"
    break;

  case 582: /* symbol_name_secondary: ELSE  */
#line 6837 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSE({::Celeste::ast::Type::ELSE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16706 "Celeste_parser.tab.c"
    break;

  case 583: /* symbol_name_secondary: OPERATORNAME  */
#line 6843 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::OPERATORNAME({::Celeste::ast::Type::OPERATORNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16717 "Celeste_parser.tab.c"
    break;

  case 584: /* symbol_name_secondary: CODE  */
#line 6849 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16728 "Celeste_parser.tab.c"
    break;

  case 585: /* symbol_name: VARNAME  */
#line 6859 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::symbol_name({::Celeste::ast::Type::symbol_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16739 "Celeste_parser.tab.c"
    break;

  case 586: /* symbol_name: FOR  */
#line 6865 "./Celeste_parser.y"
               {
		auto* const newNode = new Celeste::ast::node::symbol_name({::Celeste::ast::Type::symbol_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16750 "Celeste_parser.tab.c"
    break;

  case 587: /* symbol_name: OPERATORNAME  */
#line 6871 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::symbol_name({::Celeste::ast::Type::symbol_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::OPERATORNAME({::Celeste::ast::Type::OPERATORNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16761 "Celeste_parser.tab.c"
    break;

  case 588: /* symbol_name: CODE  */
#line 6877 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::symbol_name({::Celeste::ast::Type::symbol_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16772 "Celeste_parser.tab.c"
    break;

  case 589: /* function_access: LEFT_PARANTHESIS deamerreserved_arrow__expression__ COMMA RIGHT_PARANTHESIS  */
#line 6887 "./Celeste_parser.y"
                                                                                     {
		auto* const newNode = new Celeste::ast::node::function_access({::Celeste::ast::Type::function_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__expression__) });
		((*yyvalp).Celeste_function_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16786 "Celeste_parser.tab.c"
    break;

  case 590: /* function_access: LEFT_PARANTHESIS deamerreserved_arrow__expression__ RIGHT_PARANTHESIS  */
#line 6896 "./Celeste_parser.y"
                                                                                 {
		auto* const newNode = new Celeste::ast::node::function_access({::Celeste::ast::Type::function_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__expression__) });
		((*yyvalp).Celeste_function_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16799 "Celeste_parser.tab.c"
    break;

  case 591: /* function_access: LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS  */
#line 6904 "./Celeste_parser.y"
                                                    {
		auto* const newNode = new Celeste::ast::node::function_access({::Celeste::ast::Type::function_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_function_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16813 "Celeste_parser.tab.c"
    break;

  case 592: /* function_access: LEFT_PARANTHESIS RIGHT_PARANTHESIS  */
#line 6913 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::function_access({::Celeste::ast::Type::function_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_function_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16826 "Celeste_parser.tab.c"
    break;

  case 593: /* deamerreserved_arrow__expression__: expression deamerreserved_star__COMMA__expression__  */
#line 6925 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__expression__({::Celeste::ast::Type::deamerreserved_arrow__expression__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__expression__) });
		((*yyvalp).Celeste_deamerreserved_arrow__expression__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16837 "Celeste_parser.tab.c"
    break;

  case 594: /* deamerreserved_star__COMMA__expression__: COMMA expression deamerreserved_star__COMMA__expression__  */
#line 6935 "./Celeste_parser.y"
                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__expression__({::Celeste::ast::Type::deamerreserved_star__COMMA__expression__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__expression__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__expression__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16849 "Celeste_parser.tab.c"
    break;

  case 595: /* deamerreserved_star__COMMA__expression__: %empty  */
#line 6942 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__expression__({::Celeste::ast::Type::deamerreserved_star__COMMA__expression__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__expression__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16860 "Celeste_parser.tab.c"
    break;

  case 596: /* index_access: LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET  */
#line 6952 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::index_access({::Celeste::ast::Type::index_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_index_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16873 "Celeste_parser.tab.c"
    break;

  case 597: /* anonymous_access: LEFT_BRACKET expression RIGHT_BRACKET  */
#line 6964 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::anonymous_access({::Celeste::ast::Type::anonymous_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_anonymous_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16886 "Celeste_parser.tab.c"
    break;

  case 598: /* type: deamerreserved_star__type_modifier__ symbol_reference  */
#line 6976 "./Celeste_parser.y"
                                                               {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16897 "Celeste_parser.tab.c"
    break;

  case 599: /* type: deamerreserved_star__type_modifier__ AUTOTYPE array_declaration  */
#line 6982 "./Celeste_parser.y"
                                                                           {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), new Celeste::ast::node::AUTOTYPE({::Celeste::ast::Type::AUTOTYPE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_array_declaration) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16908 "Celeste_parser.tab.c"
    break;

  case 600: /* type: deamerreserved_star__type_modifier__ AUTOTYPE  */
#line 6988 "./Celeste_parser.y"
                                                         {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), new Celeste::ast::node::AUTOTYPE({::Celeste::ast::Type::AUTOTYPE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16919 "Celeste_parser.tab.c"
    break;

  case 601: /* type: deamerreserved_star__type_modifier__ AUTO array_declaration  */
#line 6994 "./Celeste_parser.y"
                                                                       {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), new Celeste::ast::node::AUTO({::Celeste::ast::Type::AUTO, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_array_declaration) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16930 "Celeste_parser.tab.c"
    break;

  case 602: /* type: deamerreserved_star__type_modifier__ AUTO  */
#line 7000 "./Celeste_parser.y"
                                                     {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), new Celeste::ast::node::AUTO({::Celeste::ast::Type::AUTO, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16941 "Celeste_parser.tab.c"
    break;

  case 603: /* deamerreserved_star__type_modifier__: type_modifier deamerreserved_star__type_modifier__  */
#line 7010 "./Celeste_parser.y"
                                                            {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__type_modifier__({::Celeste::ast::Type::deamerreserved_star__type_modifier__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type_modifier), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__) });
		((*yyvalp).Celeste_deamerreserved_star__type_modifier__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16952 "Celeste_parser.tab.c"
    break;

  case 604: /* deamerreserved_star__type_modifier__: %empty  */
#line 7016 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__type_modifier__({::Celeste::ast::Type::deamerreserved_star__type_modifier__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__type_modifier__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16963 "Celeste_parser.tab.c"
    break;

  case 605: /* type_modifier: STATIC  */
#line 7026 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::type_modifier({::Celeste::ast::Type::type_modifier, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::STATIC({::Celeste::ast::Type::STATIC, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type_modifier) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16974 "Celeste_parser.tab.c"
    break;

  case 606: /* type_modifier: CONSTANT  */
#line 7032 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::type_modifier({::Celeste::ast::Type::type_modifier, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTANT({::Celeste::ast::Type::CONSTANT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type_modifier) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16985 "Celeste_parser.tab.c"
    break;

  case 607: /* type_modifier: INLINE  */
#line 7038 "./Celeste_parser.y"
                  {
		auto* const newNode = new Celeste::ast::node::type_modifier({::Celeste::ast::Type::type_modifier, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::INLINE({::Celeste::ast::Type::INLINE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type_modifier) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16996 "Celeste_parser.tab.c"
    break;

  case 608: /* value_list: deamerreserved_arrow__full_value__ COMMA  */
#line 7048 "./Celeste_parser.y"
                                                  {
		auto* const newNode = new Celeste::ast::node::value_list({::Celeste::ast::Type::value_list, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__full_value__) });
		((*yyvalp).Celeste_value_list) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 17008 "Celeste_parser.tab.c"
    break;

  case 609: /* value_list: deamerreserved_arrow__full_value__  */
#line 7055 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::value_list({::Celeste::ast::Type::value_list, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__full_value__) });
		((*yyvalp).Celeste_value_list) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17019 "Celeste_parser.tab.c"
    break;

  case 610: /* deamerreserved_arrow__full_value__: full_value deamerreserved_star__COMMA__full_value__  */
#line 7065 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__full_value__({::Celeste::ast::Type::deamerreserved_arrow__full_value__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_full_value), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__full_value__) });
		((*yyvalp).Celeste_deamerreserved_arrow__full_value__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17030 "Celeste_parser.tab.c"
    break;

  case 611: /* deamerreserved_star__COMMA__full_value__: COMMA full_value deamerreserved_star__COMMA__full_value__  */
#line 7075 "./Celeste_parser.y"
                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__full_value__({::Celeste::ast::Type::deamerreserved_star__COMMA__full_value__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_full_value), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__full_value__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__full_value__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 17042 "Celeste_parser.tab.c"
    break;

  case 612: /* deamerreserved_star__COMMA__full_value__: %empty  */
#line 7082 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__full_value__({::Celeste::ast::Type::deamerreserved_star__COMMA__full_value__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__full_value__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17053 "Celeste_parser.tab.c"
    break;

  case 613: /* full_value: expression  */
#line 7092 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::full_value({::Celeste::ast::Type::full_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_full_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17064 "Celeste_parser.tab.c"
    break;

  case 614: /* value: NUMBER  */
#line 7102 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::NUMBER({::Celeste::ast::Type::NUMBER, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17075 "Celeste_parser.tab.c"
    break;

  case 615: /* value: DECIMAL  */
#line 7108 "./Celeste_parser.y"
                   {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::DECIMAL({::Celeste::ast::Type::DECIMAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17086 "Celeste_parser.tab.c"
    break;

  case 616: /* value: TEXT  */
#line 7114 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEXT({::Celeste::ast::Type::TEXT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17097 "Celeste_parser.tab.c"
    break;

  case 617: /* value: symbol_reference  */
#line 7120 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17108 "Celeste_parser.tab.c"
    break;

  case 618: /* value: code_block  */
#line 7126 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_code_block) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17119 "Celeste_parser.tab.c"
    break;

  case 619: /* value: tuple  */
#line 7132 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_tuple) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17130 "Celeste_parser.tab.c"
    break;

  case 620: /* tuple: LEFT_PARANTHESIS deamerreserved_arrow__full_value__ COMMA RIGHT_PARANTHESIS  */
#line 7142 "./Celeste_parser.y"
                                                                                     {
		auto* const newNode = new Celeste::ast::node::tuple({::Celeste::ast::Type::tuple, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__full_value__) });
		((*yyvalp).Celeste_tuple) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 17144 "Celeste_parser.tab.c"
    break;

  case 621: /* tuple: LEFT_PARANTHESIS deamerreserved_arrow__full_value__ RIGHT_PARANTHESIS  */
#line 7151 "./Celeste_parser.y"
                                                                                 {
		auto* const newNode = new Celeste::ast::node::tuple({::Celeste::ast::Type::tuple, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__full_value__) });
		((*yyvalp).Celeste_tuple) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 17157 "Celeste_parser.tab.c"
    break;


#line 17161 "Celeste_parser.tab.c"

      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yylhsNonterm (yyrule), yyvalp, yylocp);

  return yyok;
# undef yyerrok
# undef YYABORT
# undef YYACCEPT
# undef YYNOMEM
# undef YYERROR
# undef YYBACKUP
# undef yyclearin
# undef YYRECOVERING
}


static void
yyuserMerge (int yyn, YYSTYPE* yy0, YYSTYPE* yy1)
{
  YY_USE (yy0);
  YY_USE (yy1);

  switch (yyn)
    {

      default: break;
    }
}

                              /* Bison grammar-table manipulation.  */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep)
{
  YY_USE (yyvaluep);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}

/** Number of symbols composing the right hand side of rule #RULE.  */
static inline int
yyrhsLength (yyRuleNum yyrule)
{
  return yyr2[yyrule];
}

static void
yydestroyGLRState (char const *yymsg, yyGLRState *yys)
{
  if (yys->yyresolved)
    yydestruct (yymsg, yy_accessing_symbol (yys->yylrState),
                &yys->yysemantics.yyval);
  else
    {
#if YYDEBUG
      if (yydebug)
        {
          if (yys->yysemantics.yyfirstVal)
            YY_FPRINTF ((stderr, "%s unresolved", yymsg));
          else
            YY_FPRINTF ((stderr, "%s incomplete", yymsg));
          YY_SYMBOL_PRINT ("", yy_accessing_symbol (yys->yylrState), YY_NULLPTR, &yys->yyloc);
        }
#endif

      if (yys->yysemantics.yyfirstVal)
        {
          yySemanticOption *yyoption = yys->yysemantics.yyfirstVal;
          yyGLRState *yyrh;
          int yyn;
          for (yyrh = yyoption->yystate, yyn = yyrhsLength (yyoption->yyrule);
               yyn > 0;
               yyrh = yyrh->yypred, yyn -= 1)
            yydestroyGLRState (yymsg, yyrh);
        }
    }
}

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

/** True iff LR state YYSTATE has only a default reduction (regardless
 *  of token).  */
static inline yybool
yyisDefaultedState (yy_state_t yystate)
{
  return yypact_value_is_default (yypact[yystate]);
}

/** The default reduction for YYSTATE, assuming it has one.  */
static inline yyRuleNum
yydefaultAction (yy_state_t yystate)
{
  return yydefact[yystate];
}

#define yytable_value_is_error(Yyn) \
  0

/** The action to take in YYSTATE on seeing YYTOKEN.
 *  Result R means
 *    R < 0:  Reduce on rule -R.
 *    R = 0:  Error.
 *    R > 0:  Shift to state R.
 *  Set *YYCONFLICTS to a pointer into yyconfl to a 0-terminated list
 *  of conflicting reductions.
 */
static inline int
yygetLRActions (yy_state_t yystate, yysymbol_kind_t yytoken, const short** yyconflicts)
{
  int yyindex = yypact[yystate] + yytoken;
  if (yytoken == YYSYMBOL_YYerror)
    {
      // This is the error token.
      *yyconflicts = yyconfl;
      return 0;
    }
  else if (yyisDefaultedState (yystate)
           || yyindex < 0 || YYLAST < yyindex || yycheck[yyindex] != yytoken)
    {
      *yyconflicts = yyconfl;
      return -yydefact[yystate];
    }
  else if (! yytable_value_is_error (yytable[yyindex]))
    {
      *yyconflicts = yyconfl + yyconflp[yyindex];
      return yytable[yyindex];
    }
  else
    {
      *yyconflicts = yyconfl + yyconflp[yyindex];
      return 0;
    }
}

/** Compute post-reduction state.
 * \param yystate   the current state
 * \param yysym     the nonterminal to push on the stack
 */
static inline yy_state_t
yyLRgotoState (yy_state_t yystate, yysymbol_kind_t yysym)
{
  int yyr = yypgoto[yysym - YYNTOKENS] + yystate;
  if (0 <= yyr && yyr <= YYLAST && yycheck[yyr] == yystate)
    return yytable[yyr];
  else
    return yydefgoto[yysym - YYNTOKENS];
}

static inline yybool
yyisShiftAction (int yyaction)
{
  return 0 < yyaction;
}

static inline yybool
yyisErrorAction (int yyaction)
{
  return yyaction == 0;
}

                                /* GLRStates */

/** Return a fresh GLRStackItem in YYSTACKP.  The item is an LR state
 *  if YYISSTATE, and otherwise a semantic option.  Callers should call
 *  YY_RESERVE_GLRSTACK afterwards to make sure there is sufficient
 *  headroom.  */

static inline yyGLRStackItem*
yynewGLRStackItem (yyGLRStack* yystackp, yybool yyisState)
{
  yyGLRStackItem* yynewItem = yystackp->yynextFree;
  yystackp->yyspaceLeft -= 1;
  yystackp->yynextFree += 1;
  yynewItem->yystate.yyisState = yyisState;
  return yynewItem;
}

/** Add a new semantic action that will execute the action for rule
 *  YYRULE on the semantic values in YYRHS to the list of
 *  alternative actions for YYSTATE.  Assumes that YYRHS comes from
 *  stack #YYK of *YYSTACKP. */
static void
yyaddDeferredAction (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yyGLRState* yystate,
                     yyGLRState* yyrhs, yyRuleNum yyrule)
{
  yySemanticOption* yynewOption =
    &yynewGLRStackItem (yystackp, yyfalse)->yyoption;
  YY_ASSERT (!yynewOption->yyisState);
  yynewOption->yystate = yyrhs;
  yynewOption->yyrule = yyrule;
  if (yystackp->yytops.yylookaheadNeeds[yyk])
    {
      yynewOption->yyrawchar = yychar;
      yynewOption->yyval = yylval;
    }
  else
    yynewOption->yyrawchar = YYEMPTY;
  yynewOption->yynext = yystate->yysemantics.yyfirstVal;
  yystate->yysemantics.yyfirstVal = yynewOption;

  YY_RESERVE_GLRSTACK (yystackp);
}

                                /* GLRStacks */

/** Initialize YYSET to a singleton set containing an empty stack.  */
static yybool
yyinitStateSet (yyGLRStateSet* yyset)
{
  yyset->yysize = 1;
  yyset->yycapacity = 16;
  yyset->yystates
    = YY_CAST (yyGLRState**,
               YYMALLOC (YY_CAST (YYSIZE_T, yyset->yycapacity)
                         * sizeof yyset->yystates[0]));
  if (! yyset->yystates)
    return yyfalse;
  yyset->yystates[0] = YY_NULLPTR;
  yyset->yylookaheadNeeds
    = YY_CAST (yybool*,
               YYMALLOC (YY_CAST (YYSIZE_T, yyset->yycapacity)
                         * sizeof yyset->yylookaheadNeeds[0]));
  if (! yyset->yylookaheadNeeds)
    {
      YYFREE (yyset->yystates);
      return yyfalse;
    }
  memset (yyset->yylookaheadNeeds,
          0,
          YY_CAST (YYSIZE_T, yyset->yycapacity) * sizeof yyset->yylookaheadNeeds[0]);
  return yytrue;
}

static void yyfreeStateSet (yyGLRStateSet* yyset)
{
  YYFREE (yyset->yystates);
  YYFREE (yyset->yylookaheadNeeds);
}

/** Initialize *YYSTACKP to a single empty stack, with total maximum
 *  capacity for all stacks of YYSIZE.  */
static yybool
yyinitGLRStack (yyGLRStack* yystackp, YYPTRDIFF_T yysize)
{
  yystackp->yyerrState = 0;
  yynerrs = 0;
  yystackp->yyspaceLeft = yysize;
  yystackp->yyitems
    = YY_CAST (yyGLRStackItem*,
               YYMALLOC (YY_CAST (YYSIZE_T, yysize)
                         * sizeof yystackp->yynextFree[0]));
  if (!yystackp->yyitems)
    return yyfalse;
  yystackp->yynextFree = yystackp->yyitems;
  yystackp->yysplitPoint = YY_NULLPTR;
  yystackp->yylastDeleted = YY_NULLPTR;
  return yyinitStateSet (&yystackp->yytops);
}


#if YYSTACKEXPANDABLE
# define YYRELOC(YYFROMITEMS, YYTOITEMS, YYX, YYTYPE)                   \
  &((YYTOITEMS)                                                         \
    - ((YYFROMITEMS) - YY_REINTERPRET_CAST (yyGLRStackItem*, (YYX))))->YYTYPE

/** If *YYSTACKP is expandable, extend it.  WARNING: Pointers into the
    stack from outside should be considered invalid after this call.
    We always expand when there are 1 or fewer items left AFTER an
    allocation, so that we can avoid having external pointers exist
    across an allocation.  */
static void
yyexpandGLRStack (yyGLRStack* yystackp)
{
  yyGLRStackItem* yynewItems;
  yyGLRStackItem* yyp0, *yyp1;
  YYPTRDIFF_T yynewSize;
  YYPTRDIFF_T yyn;
  YYPTRDIFF_T yysize = yystackp->yynextFree - yystackp->yyitems;
  if (YYMAXDEPTH - YYHEADROOM < yysize)
    yyMemoryExhausted (yystackp);
  yynewSize = 2*yysize;
  if (YYMAXDEPTH < yynewSize)
    yynewSize = YYMAXDEPTH;
  yynewItems
    = YY_CAST (yyGLRStackItem*,
               YYMALLOC (YY_CAST (YYSIZE_T, yynewSize)
                         * sizeof yynewItems[0]));
  if (! yynewItems)
    yyMemoryExhausted (yystackp);
  for (yyp0 = yystackp->yyitems, yyp1 = yynewItems, yyn = yysize;
       0 < yyn;
       yyn -= 1, yyp0 += 1, yyp1 += 1)
    {
      *yyp1 = *yyp0;
      if (*YY_REINTERPRET_CAST (yybool *, yyp0))
        {
          yyGLRState* yys0 = &yyp0->yystate;
          yyGLRState* yys1 = &yyp1->yystate;
          if (yys0->yypred != YY_NULLPTR)
            yys1->yypred =
              YYRELOC (yyp0, yyp1, yys0->yypred, yystate);
          if (! yys0->yyresolved && yys0->yysemantics.yyfirstVal != YY_NULLPTR)
            yys1->yysemantics.yyfirstVal =
              YYRELOC (yyp0, yyp1, yys0->yysemantics.yyfirstVal, yyoption);
        }
      else
        {
          yySemanticOption* yyv0 = &yyp0->yyoption;
          yySemanticOption* yyv1 = &yyp1->yyoption;
          if (yyv0->yystate != YY_NULLPTR)
            yyv1->yystate = YYRELOC (yyp0, yyp1, yyv0->yystate, yystate);
          if (yyv0->yynext != YY_NULLPTR)
            yyv1->yynext = YYRELOC (yyp0, yyp1, yyv0->yynext, yyoption);
        }
    }
  if (yystackp->yysplitPoint != YY_NULLPTR)
    yystackp->yysplitPoint = YYRELOC (yystackp->yyitems, yynewItems,
                                      yystackp->yysplitPoint, yystate);

  for (yyn = 0; yyn < yystackp->yytops.yysize; yyn += 1)
    if (yystackp->yytops.yystates[yyn] != YY_NULLPTR)
      yystackp->yytops.yystates[yyn] =
        YYRELOC (yystackp->yyitems, yynewItems,
                 yystackp->yytops.yystates[yyn], yystate);
  YYFREE (yystackp->yyitems);
  yystackp->yyitems = yynewItems;
  yystackp->yynextFree = yynewItems + yysize;
  yystackp->yyspaceLeft = yynewSize - yysize;
}
#endif

static void
yyfreeGLRStack (yyGLRStack* yystackp)
{
  YYFREE (yystackp->yyitems);
  yyfreeStateSet (&yystackp->yytops);
}

/** Assuming that YYS is a GLRState somewhere on *YYSTACKP, update the
 *  splitpoint of *YYSTACKP, if needed, so that it is at least as deep as
 *  YYS.  */
static inline void
yyupdateSplit (yyGLRStack* yystackp, yyGLRState* yys)
{
  if (yystackp->yysplitPoint != YY_NULLPTR && yystackp->yysplitPoint > yys)
    yystackp->yysplitPoint = yys;
}

/** Invalidate stack #YYK in *YYSTACKP.  */
static inline void
yymarkStackDeleted (yyGLRStack* yystackp, YYPTRDIFF_T yyk)
{
  if (yystackp->yytops.yystates[yyk] != YY_NULLPTR)
    yystackp->yylastDeleted = yystackp->yytops.yystates[yyk];
  yystackp->yytops.yystates[yyk] = YY_NULLPTR;
}

/** Undelete the last stack in *YYSTACKP that was marked as deleted.  Can
    only be done once after a deletion, and only when all other stacks have
    been deleted.  */
static void
yyundeleteLastStack (yyGLRStack* yystackp)
{
  if (yystackp->yylastDeleted == YY_NULLPTR || yystackp->yytops.yysize != 0)
    return;
  yystackp->yytops.yystates[0] = yystackp->yylastDeleted;
  yystackp->yytops.yysize = 1;
  YY_DPRINTF ((stderr, "Restoring last deleted stack as stack #0.\n"));
  yystackp->yylastDeleted = YY_NULLPTR;
}

static inline void
yyremoveDeletes (yyGLRStack* yystackp)
{
  YYPTRDIFF_T yyi, yyj;
  yyi = yyj = 0;
  while (yyj < yystackp->yytops.yysize)
    {
      if (yystackp->yytops.yystates[yyi] == YY_NULLPTR)
        {
          if (yyi == yyj)
            YY_DPRINTF ((stderr, "Removing dead stacks.\n"));
          yystackp->yytops.yysize -= 1;
        }
      else
        {
          yystackp->yytops.yystates[yyj] = yystackp->yytops.yystates[yyi];
          /* In the current implementation, it's unnecessary to copy
             yystackp->yytops.yylookaheadNeeds[yyi] since, after
             yyremoveDeletes returns, the parser immediately either enters
             deterministic operation or shifts a token.  However, it doesn't
             hurt, and the code might evolve to need it.  */
          yystackp->yytops.yylookaheadNeeds[yyj] =
            yystackp->yytops.yylookaheadNeeds[yyi];
          if (yyj != yyi)
            YY_DPRINTF ((stderr, "Rename stack %ld -> %ld.\n",
                        YY_CAST (long, yyi), YY_CAST (long, yyj)));
          yyj += 1;
        }
      yyi += 1;
    }
}

/** Shift to a new state on stack #YYK of *YYSTACKP, corresponding to LR
 * state YYLRSTATE, at input position YYPOSN, with (resolved) semantic
 * value *YYVALP and source location *YYLOCP.  */
static inline void
yyglrShift (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yy_state_t yylrState,
            YYPTRDIFF_T yyposn,
            YYSTYPE* yyvalp)
{
  yyGLRState* yynewState = &yynewGLRStackItem (yystackp, yytrue)->yystate;

  yynewState->yylrState = yylrState;
  yynewState->yyposn = yyposn;
  yynewState->yyresolved = yytrue;
  yynewState->yypred = yystackp->yytops.yystates[yyk];
  yynewState->yysemantics.yyval = *yyvalp;
  yystackp->yytops.yystates[yyk] = yynewState;

  YY_RESERVE_GLRSTACK (yystackp);
}

/** Shift stack #YYK of *YYSTACKP, to a new state corresponding to LR
 *  state YYLRSTATE, at input position YYPOSN, with the (unresolved)
 *  semantic value of YYRHS under the action for YYRULE.  */
static inline void
yyglrShiftDefer (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yy_state_t yylrState,
                 YYPTRDIFF_T yyposn, yyGLRState* yyrhs, yyRuleNum yyrule)
{
  yyGLRState* yynewState = &yynewGLRStackItem (yystackp, yytrue)->yystate;
  YY_ASSERT (yynewState->yyisState);

  yynewState->yylrState = yylrState;
  yynewState->yyposn = yyposn;
  yynewState->yyresolved = yyfalse;
  yynewState->yypred = yystackp->yytops.yystates[yyk];
  yynewState->yysemantics.yyfirstVal = YY_NULLPTR;
  yystackp->yytops.yystates[yyk] = yynewState;

  /* Invokes YY_RESERVE_GLRSTACK.  */
  yyaddDeferredAction (yystackp, yyk, yynewState, yyrhs, yyrule);
}

#if YYDEBUG

/*----------------------------------------------------------------------.
| Report that stack #YYK of *YYSTACKP is going to be reduced by YYRULE. |
`----------------------------------------------------------------------*/

static inline void
yy_reduce_print (yybool yynormal, yyGLRStackItem* yyvsp, YYPTRDIFF_T yyk,
                 yyRuleNum yyrule)
{
  int yynrhs = yyrhsLength (yyrule);
  int yyi;
  YY_FPRINTF ((stderr, "Reducing stack %ld by rule %d (line %d):\n",
               YY_CAST (long, yyk), yyrule - 1, yyrline[yyrule]));
  if (! yynormal)
    yyfillin (yyvsp, 1, -yynrhs);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YY_FPRINTF ((stderr, "   $%d = ", yyi + 1));
      yy_symbol_print (stderr,
                       yy_accessing_symbol (yyvsp[yyi - yynrhs + 1].yystate.yylrState),
                       &yyvsp[yyi - yynrhs + 1].yystate.yysemantics.yyval                       );
      if (!yyvsp[yyi - yynrhs + 1].yystate.yyresolved)
        YY_FPRINTF ((stderr, " (unresolved)"));
      YY_FPRINTF ((stderr, "\n"));
    }
}
#endif

/** Pop the symbols consumed by reduction #YYRULE from the top of stack
 *  #YYK of *YYSTACKP, and perform the appropriate semantic action on their
 *  semantic values.  Assumes that all ambiguities in semantic values
 *  have been previously resolved.  Set *YYVALP to the resulting value,
 *  and *YYLOCP to the computed location (if any).  Return value is as
 *  for userAction.  */
static inline YYRESULTTAG
yydoAction (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yyRuleNum yyrule,
            YYSTYPE* yyvalp)
{
  int yynrhs = yyrhsLength (yyrule);

  if (yystackp->yysplitPoint == YY_NULLPTR)
    {
      /* Standard special case: single stack.  */
      yyGLRStackItem* yyrhs
        = YY_REINTERPRET_CAST (yyGLRStackItem*, yystackp->yytops.yystates[yyk]);
      YY_ASSERT (yyk == 0);
      yystackp->yynextFree -= yynrhs;
      yystackp->yyspaceLeft += yynrhs;
      yystackp->yytops.yystates[0] = & yystackp->yynextFree[-1].yystate;
      return yyuserAction (yyrule, yynrhs, yyrhs, yystackp, yyk,
                           yyvalp);
    }
  else
    {
      yyGLRStackItem yyrhsVals[YYMAXRHS + YYMAXLEFT + 1];
      yyGLRState* yys = yyrhsVals[YYMAXRHS + YYMAXLEFT].yystate.yypred
        = yystackp->yytops.yystates[yyk];
      int yyi;
      for (yyi = 0; yyi < yynrhs; yyi += 1)
        {
          yys = yys->yypred;
          YY_ASSERT (yys);
        }
      yyupdateSplit (yystackp, yys);
      yystackp->yytops.yystates[yyk] = yys;
      return yyuserAction (yyrule, yynrhs, yyrhsVals + YYMAXRHS + YYMAXLEFT - 1,
                           yystackp, yyk, yyvalp);
    }
}

/** Pop items off stack #YYK of *YYSTACKP according to grammar rule YYRULE,
 *  and push back on the resulting nonterminal symbol.  Perform the
 *  semantic action associated with YYRULE and store its value with the
 *  newly pushed state, if YYFORCEEVAL or if *YYSTACKP is currently
 *  unambiguous.  Otherwise, store the deferred semantic action with
 *  the new state.  If the new state would have an identical input
 *  position, LR state, and predecessor to an existing state on the stack,
 *  it is identified with that existing state, eliminating stack #YYK from
 *  *YYSTACKP.  In this case, the semantic value is
 *  added to the options for the existing state's semantic value.
 */
static inline YYRESULTTAG
yyglrReduce (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yyRuleNum yyrule,
             yybool yyforceEval)
{
  YYPTRDIFF_T yyposn = yystackp->yytops.yystates[yyk]->yyposn;

  if (yyforceEval || yystackp->yysplitPoint == YY_NULLPTR)
    {
      YYSTYPE yyval;

      YYRESULTTAG yyflag = yydoAction (yystackp, yyk, yyrule, &yyval);
      if (yyflag == yyerr && yystackp->yysplitPoint != YY_NULLPTR)
        YY_DPRINTF ((stderr,
                     "Parse on stack %ld rejected by rule %d (line %d).\n",
                     YY_CAST (long, yyk), yyrule - 1, yyrline[yyrule]));
      if (yyflag != yyok)
        return yyflag;
      yyglrShift (yystackp, yyk,
                  yyLRgotoState (yystackp->yytops.yystates[yyk]->yylrState,
                                 yylhsNonterm (yyrule)),
                  yyposn, &yyval);
    }
  else
    {
      YYPTRDIFF_T yyi;
      int yyn;
      yyGLRState* yys, *yys0 = yystackp->yytops.yystates[yyk];
      yy_state_t yynewLRState;

      for (yys = yystackp->yytops.yystates[yyk], yyn = yyrhsLength (yyrule);
           0 < yyn; yyn -= 1)
        {
          yys = yys->yypred;
          YY_ASSERT (yys);
        }
      yyupdateSplit (yystackp, yys);
      yynewLRState = yyLRgotoState (yys->yylrState, yylhsNonterm (yyrule));
      YY_DPRINTF ((stderr,
                   "Reduced stack %ld by rule %d (line %d); action deferred.  "
                   "Now in state %d.\n",
                   YY_CAST (long, yyk), yyrule - 1, yyrline[yyrule],
                   yynewLRState));
      for (yyi = 0; yyi < yystackp->yytops.yysize; yyi += 1)
        if (yyi != yyk && yystackp->yytops.yystates[yyi] != YY_NULLPTR)
          {
            yyGLRState *yysplit = yystackp->yysplitPoint;
            yyGLRState *yyp = yystackp->yytops.yystates[yyi];
            while (yyp != yys && yyp != yysplit && yyp->yyposn >= yyposn)
              {
                if (yyp->yylrState == yynewLRState && yyp->yypred == yys)
                  {
                    yyaddDeferredAction (yystackp, yyk, yyp, yys0, yyrule);
                    yymarkStackDeleted (yystackp, yyk);
                    YY_DPRINTF ((stderr, "Merging stack %ld into stack %ld.\n",
                                 YY_CAST (long, yyk), YY_CAST (long, yyi)));
                    return yyok;
                  }
                yyp = yyp->yypred;
              }
          }
      yystackp->yytops.yystates[yyk] = yys;
      yyglrShiftDefer (yystackp, yyk, yynewLRState, yyposn, yys0, yyrule);
    }
  return yyok;
}

static YYPTRDIFF_T
yysplitStack (yyGLRStack* yystackp, YYPTRDIFF_T yyk)
{
  if (yystackp->yysplitPoint == YY_NULLPTR)
    {
      YY_ASSERT (yyk == 0);
      yystackp->yysplitPoint = yystackp->yytops.yystates[yyk];
    }
  if (yystackp->yytops.yycapacity <= yystackp->yytops.yysize)
    {
      YYPTRDIFF_T state_size = YYSIZEOF (yystackp->yytops.yystates[0]);
      YYPTRDIFF_T half_max_capacity = YYSIZE_MAXIMUM / 2 / state_size;
      if (half_max_capacity < yystackp->yytops.yycapacity)
        yyMemoryExhausted (yystackp);
      yystackp->yytops.yycapacity *= 2;

      {
        yyGLRState** yynewStates
          = YY_CAST (yyGLRState**,
                     YYREALLOC (yystackp->yytops.yystates,
                                (YY_CAST (YYSIZE_T, yystackp->yytops.yycapacity)
                                 * sizeof yynewStates[0])));
        if (yynewStates == YY_NULLPTR)
          yyMemoryExhausted (yystackp);
        yystackp->yytops.yystates = yynewStates;
      }

      {
        yybool* yynewLookaheadNeeds
          = YY_CAST (yybool*,
                     YYREALLOC (yystackp->yytops.yylookaheadNeeds,
                                (YY_CAST (YYSIZE_T, yystackp->yytops.yycapacity)
                                 * sizeof yynewLookaheadNeeds[0])));
        if (yynewLookaheadNeeds == YY_NULLPTR)
          yyMemoryExhausted (yystackp);
        yystackp->yytops.yylookaheadNeeds = yynewLookaheadNeeds;
      }
    }
  yystackp->yytops.yystates[yystackp->yytops.yysize]
    = yystackp->yytops.yystates[yyk];
  yystackp->yytops.yylookaheadNeeds[yystackp->yytops.yysize]
    = yystackp->yytops.yylookaheadNeeds[yyk];
  yystackp->yytops.yysize += 1;
  return yystackp->yytops.yysize - 1;
}

/** True iff YYY0 and YYY1 represent identical options at the top level.
 *  That is, they represent the same rule applied to RHS symbols
 *  that produce the same terminal symbols.  */
static yybool
yyidenticalOptions (yySemanticOption* yyy0, yySemanticOption* yyy1)
{
  if (yyy0->yyrule == yyy1->yyrule)
    {
      yyGLRState *yys0, *yys1;
      int yyn;
      for (yys0 = yyy0->yystate, yys1 = yyy1->yystate,
           yyn = yyrhsLength (yyy0->yyrule);
           yyn > 0;
           yys0 = yys0->yypred, yys1 = yys1->yypred, yyn -= 1)
        if (yys0->yyposn != yys1->yyposn)
          return yyfalse;
      return yytrue;
    }
  else
    return yyfalse;
}

/** Assuming identicalOptions (YYY0,YYY1), destructively merge the
 *  alternative semantic values for the RHS-symbols of YYY1 and YYY0.  */
static void
yymergeOptionSets (yySemanticOption* yyy0, yySemanticOption* yyy1)
{
  yyGLRState *yys0, *yys1;
  int yyn;
  for (yys0 = yyy0->yystate, yys1 = yyy1->yystate,
       yyn = yyrhsLength (yyy0->yyrule);
       0 < yyn;
       yys0 = yys0->yypred, yys1 = yys1->yypred, yyn -= 1)
    {
      if (yys0 == yys1)
        break;
      else if (yys0->yyresolved)
        {
          yys1->yyresolved = yytrue;
          yys1->yysemantics.yyval = yys0->yysemantics.yyval;
        }
      else if (yys1->yyresolved)
        {
          yys0->yyresolved = yytrue;
          yys0->yysemantics.yyval = yys1->yysemantics.yyval;
        }
      else
        {
          yySemanticOption** yyz0p = &yys0->yysemantics.yyfirstVal;
          yySemanticOption* yyz1 = yys1->yysemantics.yyfirstVal;
          while (yytrue)
            {
              if (yyz1 == *yyz0p || yyz1 == YY_NULLPTR)
                break;
              else if (*yyz0p == YY_NULLPTR)
                {
                  *yyz0p = yyz1;
                  break;
                }
              else if (*yyz0p < yyz1)
                {
                  yySemanticOption* yyz = *yyz0p;
                  *yyz0p = yyz1;
                  yyz1 = yyz1->yynext;
                  (*yyz0p)->yynext = yyz;
                }
              yyz0p = &(*yyz0p)->yynext;
            }
          yys1->yysemantics.yyfirstVal = yys0->yysemantics.yyfirstVal;
        }
    }
}

/** Y0 and Y1 represent two possible actions to take in a given
 *  parsing state; return 0 if no combination is possible,
 *  1 if user-mergeable, 2 if Y0 is preferred, 3 if Y1 is preferred.  */
static int
yypreference (yySemanticOption* y0, yySemanticOption* y1)
{
  yyRuleNum r0 = y0->yyrule, r1 = y1->yyrule;
  int p0 = yydprec[r0], p1 = yydprec[r1];

  if (p0 == p1)
    {
      if (yymerger[r0] == 0 || yymerger[r0] != yymerger[r1])
        return 0;
      else
        return 1;
    }
  if (p0 == 0 || p1 == 0)
    return 0;
  if (p0 < p1)
    return 3;
  if (p1 < p0)
    return 2;
  return 0;
}

static YYRESULTTAG
yyresolveValue (yyGLRState* yys, yyGLRStack* yystackp);


/** Resolve the previous YYN states starting at and including state YYS
 *  on *YYSTACKP. If result != yyok, some states may have been left
 *  unresolved possibly with empty semantic option chains.  Regardless
 *  of whether result = yyok, each state has been left with consistent
 *  data so that yydestroyGLRState can be invoked if necessary.  */
static YYRESULTTAG
yyresolveStates (yyGLRState* yys, int yyn,
                 yyGLRStack* yystackp)
{
  if (0 < yyn)
    {
      YY_ASSERT (yys->yypred);
      YYCHK (yyresolveStates (yys->yypred, yyn-1, yystackp));
      if (! yys->yyresolved)
        YYCHK (yyresolveValue (yys, yystackp));
    }
  return yyok;
}

/** Resolve the states for the RHS of YYOPT on *YYSTACKP, perform its
 *  user action, and return the semantic value and location in *YYVALP
 *  and *YYLOCP.  Regardless of whether result = yyok, all RHS states
 *  have been destroyed (assuming the user action destroys all RHS
 *  semantic values if invoked).  */
static YYRESULTTAG
yyresolveAction (yySemanticOption* yyopt, yyGLRStack* yystackp,
                 YYSTYPE* yyvalp)
{
  yyGLRStackItem yyrhsVals[YYMAXRHS + YYMAXLEFT + 1];
  int yynrhs = yyrhsLength (yyopt->yyrule);
  YYRESULTTAG yyflag =
    yyresolveStates (yyopt->yystate, yynrhs, yystackp);
  if (yyflag != yyok)
    {
      yyGLRState *yys;
      for (yys = yyopt->yystate; yynrhs > 0; yys = yys->yypred, yynrhs -= 1)
        yydestroyGLRState ("Cleanup: popping", yys);
      return yyflag;
    }

  yyrhsVals[YYMAXRHS + YYMAXLEFT].yystate.yypred = yyopt->yystate;
  {
    int yychar_current = yychar;
    YYSTYPE yylval_current = yylval;
    yychar = yyopt->yyrawchar;
    yylval = yyopt->yyval;
    yyflag = yyuserAction (yyopt->yyrule, yynrhs,
                           yyrhsVals + YYMAXRHS + YYMAXLEFT - 1,
                           yystackp, -1, yyvalp);
    yychar = yychar_current;
    yylval = yylval_current;
  }
  return yyflag;
}

#if YYDEBUG
static void
yyreportTree (yySemanticOption* yyx, int yyindent)
{
  int yynrhs = yyrhsLength (yyx->yyrule);
  int yyi;
  yyGLRState* yys;
  yyGLRState* yystates[1 + YYMAXRHS];
  yyGLRState yyleftmost_state;

  for (yyi = yynrhs, yys = yyx->yystate; 0 < yyi; yyi -= 1, yys = yys->yypred)
    yystates[yyi] = yys;
  if (yys == YY_NULLPTR)
    {
      yyleftmost_state.yyposn = 0;
      yystates[0] = &yyleftmost_state;
    }
  else
    yystates[0] = yys;

  if (yyx->yystate->yyposn < yys->yyposn + 1)
    YY_FPRINTF ((stderr, "%*s%s -> <Rule %d, empty>\n",
                 yyindent, "", yysymbol_name (yylhsNonterm (yyx->yyrule)),
                 yyx->yyrule - 1));
  else
    YY_FPRINTF ((stderr, "%*s%s -> <Rule %d, tokens %ld .. %ld>\n",
                 yyindent, "", yysymbol_name (yylhsNonterm (yyx->yyrule)),
                 yyx->yyrule - 1, YY_CAST (long, yys->yyposn + 1),
                 YY_CAST (long, yyx->yystate->yyposn)));
  for (yyi = 1; yyi <= yynrhs; yyi += 1)
    {
      if (yystates[yyi]->yyresolved)
        {
          if (yystates[yyi-1]->yyposn+1 > yystates[yyi]->yyposn)
            YY_FPRINTF ((stderr, "%*s%s <empty>\n", yyindent+2, "",
                         yysymbol_name (yy_accessing_symbol (yystates[yyi]->yylrState))));
          else
            YY_FPRINTF ((stderr, "%*s%s <tokens %ld .. %ld>\n", yyindent+2, "",
                         yysymbol_name (yy_accessing_symbol (yystates[yyi]->yylrState)),
                         YY_CAST (long, yystates[yyi-1]->yyposn + 1),
                         YY_CAST (long, yystates[yyi]->yyposn)));
        }
      else
        yyreportTree (yystates[yyi]->yysemantics.yyfirstVal, yyindent+2);
    }
}
#endif

static YYRESULTTAG
yyreportAmbiguity (yySemanticOption* yyx0,
                   yySemanticOption* yyx1)
{
  YY_USE (yyx0);
  YY_USE (yyx1);

#if YYDEBUG
  YY_FPRINTF ((stderr, "Ambiguity detected.\n"));
  YY_FPRINTF ((stderr, "Option 1,\n"));
  yyreportTree (yyx0, 2);
  YY_FPRINTF ((stderr, "\nOption 2,\n"));
  yyreportTree (yyx1, 2);
  YY_FPRINTF ((stderr, "\n"));
#endif

  yyerror (YY_("syntax is ambiguous"));
  return yyabort;
}

/** Resolve the ambiguity represented in state YYS in *YYSTACKP,
 *  perform the indicated actions, and set the semantic value of YYS.
 *  If result != yyok, the chain of semantic options in YYS has been
 *  cleared instead or it has been left unmodified except that
 *  redundant options may have been removed.  Regardless of whether
 *  result = yyok, YYS has been left with consistent data so that
 *  yydestroyGLRState can be invoked if necessary.  */
static YYRESULTTAG
yyresolveValue (yyGLRState* yys, yyGLRStack* yystackp)
{
  yySemanticOption* yyoptionList = yys->yysemantics.yyfirstVal;
  yySemanticOption* yybest = yyoptionList;
  yySemanticOption** yypp;
  yybool yymerge = yyfalse;
  YYSTYPE yyval;
  YYRESULTTAG yyflag;

  for (yypp = &yyoptionList->yynext; *yypp != YY_NULLPTR; )
    {
      yySemanticOption* yyp = *yypp;

      if (yyidenticalOptions (yybest, yyp))
        {
          yymergeOptionSets (yybest, yyp);
          *yypp = yyp->yynext;
        }
      else
        {
          switch (yypreference (yybest, yyp))
            {
            case 0:
              return yyreportAmbiguity (yybest, yyp);
              break;
            case 1:
              yymerge = yytrue;
              break;
            case 2:
              break;
            case 3:
              yybest = yyp;
              yymerge = yyfalse;
              break;
            default:
              /* This cannot happen so it is not worth a YY_ASSERT (yyfalse),
                 but some compilers complain if the default case is
                 omitted.  */
              break;
            }
          yypp = &yyp->yynext;
        }
    }

  if (yymerge)
    {
      yySemanticOption* yyp;
      int yyprec = yydprec[yybest->yyrule];
      yyflag = yyresolveAction (yybest, yystackp, &yyval);
      if (yyflag == yyok)
        for (yyp = yybest->yynext; yyp != YY_NULLPTR; yyp = yyp->yynext)
          {
            if (yyprec == yydprec[yyp->yyrule])
              {
                YYSTYPE yyval_other;
                yyflag = yyresolveAction (yyp, yystackp, &yyval_other);
                if (yyflag != yyok)
                  {
                    yydestruct ("Cleanup: discarding incompletely merged value for",
                                yy_accessing_symbol (yys->yylrState),
                                &yyval);
                    break;
                  }
                yyuserMerge (yymerger[yyp->yyrule], &yyval, &yyval_other);
              }
          }
    }
  else
    yyflag = yyresolveAction (yybest, yystackp, &yyval);

  if (yyflag == yyok)
    {
      yys->yyresolved = yytrue;
      yys->yysemantics.yyval = yyval;
    }
  else
    yys->yysemantics.yyfirstVal = YY_NULLPTR;
  return yyflag;
}

static YYRESULTTAG
yyresolveStack (yyGLRStack* yystackp)
{
  if (yystackp->yysplitPoint != YY_NULLPTR)
    {
      yyGLRState* yys;
      int yyn;

      for (yyn = 0, yys = yystackp->yytops.yystates[0];
           yys != yystackp->yysplitPoint;
           yys = yys->yypred, yyn += 1)
        continue;
      YYCHK (yyresolveStates (yystackp->yytops.yystates[0], yyn, yystackp
                             ));
    }
  return yyok;
}

/** Called when returning to deterministic operation to clean up the extra
 * stacks. */
static void
yycompressStack (yyGLRStack* yystackp)
{
  /* yyr is the state after the split point.  */
  yyGLRState *yyr;

  if (yystackp->yytops.yysize != 1 || yystackp->yysplitPoint == YY_NULLPTR)
    return;

  {
    yyGLRState *yyp, *yyq;
    for (yyp = yystackp->yytops.yystates[0], yyq = yyp->yypred, yyr = YY_NULLPTR;
         yyp != yystackp->yysplitPoint;
         yyr = yyp, yyp = yyq, yyq = yyp->yypred)
      yyp->yypred = yyr;
  }

  yystackp->yyspaceLeft += yystackp->yynextFree - yystackp->yyitems;
  yystackp->yynextFree = YY_REINTERPRET_CAST (yyGLRStackItem*, yystackp->yysplitPoint) + 1;
  yystackp->yyspaceLeft -= yystackp->yynextFree - yystackp->yyitems;
  yystackp->yysplitPoint = YY_NULLPTR;
  yystackp->yylastDeleted = YY_NULLPTR;

  while (yyr != YY_NULLPTR)
    {
      yystackp->yynextFree->yystate = *yyr;
      yyr = yyr->yypred;
      yystackp->yynextFree->yystate.yypred = &yystackp->yynextFree[-1].yystate;
      yystackp->yytops.yystates[0] = &yystackp->yynextFree->yystate;
      yystackp->yynextFree += 1;
      yystackp->yyspaceLeft -= 1;
    }
}

static YYRESULTTAG
yyprocessOneStack (yyGLRStack* yystackp, YYPTRDIFF_T yyk,
                   YYPTRDIFF_T yyposn)
{
  while (yystackp->yytops.yystates[yyk] != YY_NULLPTR)
    {
      yy_state_t yystate = yystackp->yytops.yystates[yyk]->yylrState;
      YY_DPRINTF ((stderr, "Stack %ld Entering state %d\n",
                   YY_CAST (long, yyk), yystate));

      YY_ASSERT (yystate != YYFINAL);

      if (yyisDefaultedState (yystate))
        {
          YYRESULTTAG yyflag;
          yyRuleNum yyrule = yydefaultAction (yystate);
          if (yyrule == 0)
            {
              YY_DPRINTF ((stderr, "Stack %ld dies.\n", YY_CAST (long, yyk)));
              yymarkStackDeleted (yystackp, yyk);
              return yyok;
            }
          yyflag = yyglrReduce (yystackp, yyk, yyrule, yyimmediate[yyrule]);
          if (yyflag == yyerr)
            {
              YY_DPRINTF ((stderr,
                           "Stack %ld dies "
                           "(predicate failure or explicit user error).\n",
                           YY_CAST (long, yyk)));
              yymarkStackDeleted (yystackp, yyk);
              return yyok;
            }
          if (yyflag != yyok)
            return yyflag;
        }
      else
        {
          yysymbol_kind_t yytoken = yygetToken (&yychar);
          const short* yyconflicts;
          const int yyaction = yygetLRActions (yystate, yytoken, &yyconflicts);
          yystackp->yytops.yylookaheadNeeds[yyk] = yytrue;

          for (/* nothing */; *yyconflicts; yyconflicts += 1)
            {
              YYRESULTTAG yyflag;
              YYPTRDIFF_T yynewStack = yysplitStack (yystackp, yyk);
              YY_DPRINTF ((stderr, "Splitting off stack %ld from %ld.\n",
                           YY_CAST (long, yynewStack), YY_CAST (long, yyk)));
              yyflag = yyglrReduce (yystackp, yynewStack,
                                    *yyconflicts,
                                    yyimmediate[*yyconflicts]);
              if (yyflag == yyok)
                YYCHK (yyprocessOneStack (yystackp, yynewStack,
                                          yyposn));
              else if (yyflag == yyerr)
                {
                  YY_DPRINTF ((stderr, "Stack %ld dies.\n", YY_CAST (long, yynewStack)));
                  yymarkStackDeleted (yystackp, yynewStack);
                }
              else
                return yyflag;
            }

          if (yyisShiftAction (yyaction))
            break;
          else if (yyisErrorAction (yyaction))
            {
              YY_DPRINTF ((stderr, "Stack %ld dies.\n", YY_CAST (long, yyk)));
              yymarkStackDeleted (yystackp, yyk);
              break;
            }
          else
            {
              YYRESULTTAG yyflag = yyglrReduce (yystackp, yyk, -yyaction,
                                                yyimmediate[-yyaction]);
              if (yyflag == yyerr)
                {
                  YY_DPRINTF ((stderr,
                               "Stack %ld dies "
                               "(predicate failure or explicit user error).\n",
                               YY_CAST (long, yyk)));
                  yymarkStackDeleted (yystackp, yyk);
                  break;
                }
              else if (yyflag != yyok)
                return yyflag;
            }
        }
    }
  return yyok;
}

/* Put in YYARG at most YYARGN of the expected tokens given the
   current YYSTACKP, and return the number of tokens stored in YYARG.  If
   YYARG is null, return the number of expected tokens (guaranteed to
   be less than YYNTOKENS).  */
static int
yypcontext_expected_tokens (const yyGLRStack* yystackp,
                            yysymbol_kind_t yyarg[], int yyargn)
{
  /* Actual size of YYARG. */
  int yycount = 0;
  int yyn = yypact[yystackp->yytops.yystates[0]->yylrState];
  if (!yypact_value_is_default (yyn))
    {
      /* Start YYX at -YYN if negative to avoid negative indexes in
         YYCHECK.  In other words, skip the first -YYN actions for
         this state because they are default actions.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;
      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yyx;
      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
        if (yycheck[yyx + yyn] == yyx && yyx != YYSYMBOL_YYerror
            && !yytable_value_is_error (yytable[yyx + yyn]))
          {
            if (!yyarg)
              ++yycount;
            else if (yycount == yyargn)
              return 0;
            else
              yyarg[yycount++] = YY_CAST (yysymbol_kind_t, yyx);
          }
    }
  if (yyarg && yycount == 0 && 0 < yyargn)
    yyarg[0] = YYSYMBOL_YYEMPTY;
  return yycount;
}

static int
yy_syntax_error_arguments (const yyGLRStack* yystackp,
                           yysymbol_kind_t yyarg[], int yyargn)
{
  yysymbol_kind_t yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* Actual size of YYARG. */
  int yycount = 0;
  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYSYMBOL_YYEMPTY)
    {
      int yyn;
      if (yyarg)
        yyarg[yycount] = yytoken;
      ++yycount;
      yyn = yypcontext_expected_tokens (yystackp,
                                        yyarg ? yyarg + 1 : yyarg, yyargn - 1);
      if (yyn == YYENOMEM)
        return YYENOMEM;
      else
        yycount += yyn;
    }
  return yycount;
}



static void
yyreportSyntaxError (yyGLRStack* yystackp)
{
  if (yystackp->yyerrState != 0)
    return;
  {
  yybool yysize_overflow = yyfalse;
  char* yymsg = YY_NULLPTR;
  enum { YYARGS_MAX = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat: reported tokens (one for the "unexpected",
     one per "expected"). */
  yysymbol_kind_t yyarg[YYARGS_MAX];
  /* Cumulated lengths of YYARG.  */
  YYPTRDIFF_T yysize = 0;

  /* Actual size of YYARG. */
  int yycount
    = yy_syntax_error_arguments (yystackp, yyarg, YYARGS_MAX);
  if (yycount == YYENOMEM)
    yyMemoryExhausted (yystackp);

  switch (yycount)
    {
#define YYCASE_(N, S)                   \
      case N:                           \
        yyformat = S;                   \
      break
    default: /* Avoid compiler warnings. */
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
#undef YYCASE_
    }

  /* Compute error message size.  Don't count the "%s"s, but reserve
     room for the terminator.  */
  yysize = yystrlen (yyformat) - 2 * yycount + 1;
  {
    int yyi;
    for (yyi = 0; yyi < yycount; ++yyi)
      {
        YYPTRDIFF_T yysz
          = yytnamerr (YY_NULLPTR, yytname[yyarg[yyi]]);
        if (YYSIZE_MAXIMUM - yysize < yysz)
          yysize_overflow = yytrue;
        else
          yysize += yysz;
      }
  }

  if (!yysize_overflow)
    yymsg = YY_CAST (char *, YYMALLOC (YY_CAST (YYSIZE_T, yysize)));

  if (yymsg)
    {
      char *yyp = yymsg;
      int yyi = 0;
      while ((*yyp = *yyformat))
        {
          if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
            {
              yyp += yytnamerr (yyp, yytname[yyarg[yyi++]]);
              yyformat += 2;
            }
          else
            {
              ++yyp;
              ++yyformat;
            }
        }
      yyerror (yymsg);
      YYFREE (yymsg);
    }
  else
    {
      yyerror (YY_("syntax error"));
      yyMemoryExhausted (yystackp);
    }
  }
  yynerrs += 1;
}

/* Recover from a syntax error on *YYSTACKP, assuming that *YYSTACKP->YYTOKENP,
   yylval, and yylloc are the syntactic category, semantic value, and location
   of the lookahead.  */
static void
yyrecoverSyntaxError (yyGLRStack* yystackp)
{
  if (yystackp->yyerrState == 3)
    /* We just shifted the error token and (perhaps) took some
       reductions.  Skip tokens until we can proceed.  */
    while (yytrue)
      {
        yysymbol_kind_t yytoken;
        int yyj;
        if (yychar == YYEOF)
          yyFail (yystackp, YY_NULLPTR);
        if (yychar != YYEMPTY)
          {
            yytoken = YYTRANSLATE (yychar);
            yydestruct ("Error: discarding",
                        yytoken, &yylval);
            yychar = YYEMPTY;
          }
        yytoken = yygetToken (&yychar);
        yyj = yypact[yystackp->yytops.yystates[0]->yylrState];
        if (yypact_value_is_default (yyj))
          return;
        yyj += yytoken;
        if (yyj < 0 || YYLAST < yyj || yycheck[yyj] != yytoken)
          {
            if (yydefact[yystackp->yytops.yystates[0]->yylrState] != 0)
              return;
          }
        else if (! yytable_value_is_error (yytable[yyj]))
          return;
      }

  /* Reduce to one stack.  */
  {
    YYPTRDIFF_T yyk;
    for (yyk = 0; yyk < yystackp->yytops.yysize; yyk += 1)
      if (yystackp->yytops.yystates[yyk] != YY_NULLPTR)
        break;
    if (yyk >= yystackp->yytops.yysize)
      yyFail (yystackp, YY_NULLPTR);
    for (yyk += 1; yyk < yystackp->yytops.yysize; yyk += 1)
      yymarkStackDeleted (yystackp, yyk);
    yyremoveDeletes (yystackp);
    yycompressStack (yystackp);
  }

  /* Pop stack until we find a state that shifts the error token.  */
  yystackp->yyerrState = 3;
  while (yystackp->yytops.yystates[0] != YY_NULLPTR)
    {
      yyGLRState *yys = yystackp->yytops.yystates[0];
      int yyj = yypact[yys->yylrState];
      if (! yypact_value_is_default (yyj))
        {
          yyj += YYSYMBOL_YYerror;
          if (0 <= yyj && yyj <= YYLAST && yycheck[yyj] == YYSYMBOL_YYerror
              && yyisShiftAction (yytable[yyj]))
            {
              /* Shift the error token.  */
              int yyaction = yytable[yyj];
              YY_SYMBOL_PRINT ("Shifting", yy_accessing_symbol (yyaction),
                               &yylval, &yyerrloc);
              yyglrShift (yystackp, 0, yyaction,
                          yys->yyposn, &yylval);
              yys = yystackp->yytops.yystates[0];
              break;
            }
        }
      if (yys->yypred != YY_NULLPTR)
        yydestroyGLRState ("Error: popping", yys);
      yystackp->yytops.yystates[0] = yys->yypred;
      yystackp->yynextFree -= 1;
      yystackp->yyspaceLeft += 1;
    }
  if (yystackp->yytops.yystates[0] == YY_NULLPTR)
    yyFail (yystackp, YY_NULLPTR);
}

#define YYCHK1(YYE)                             \
  do {                                          \
    switch (YYE) {                              \
    case yyok:     break;                       \
    case yyabort:  goto yyabortlab;             \
    case yyaccept: goto yyacceptlab;            \
    case yyerr:    goto yyuser_error;           \
    case yynomem:  goto yyexhaustedlab;         \
    default:       goto yybuglab;               \
    }                                           \
  } while (0)

/*----------.
| yyparse.  |
`----------*/

int
yyparse (void)
{
  int yyresult;
  yyGLRStack yystack;
  yyGLRStack* const yystackp = &yystack;
  YYPTRDIFF_T yyposn;

  YY_DPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY;
  yylval = yyval_default;

  if (! yyinitGLRStack (yystackp, YYINITDEPTH))
    goto yyexhaustedlab;
  switch (YYSETJMP (yystack.yyexception_buffer))
    {
    case 0: break;
    case 1: goto yyabortlab;
    case 2: goto yyexhaustedlab;
    default: goto yybuglab;
    }
  yyglrShift (&yystack, 0, 0, 0, &yylval);
  yyposn = 0;

  while (yytrue)
    {
      /* For efficiency, we have two loops, the first of which is
         specialized to deterministic operation (single stack, no
         potential ambiguity).  */
      /* Standard mode. */
      while (yytrue)
        {
          yy_state_t yystate = yystack.yytops.yystates[0]->yylrState;
          YY_DPRINTF ((stderr, "Entering state %d\n", yystate));
          if (yystate == YYFINAL)
            goto yyacceptlab;
          if (yyisDefaultedState (yystate))
            {
              yyRuleNum yyrule = yydefaultAction (yystate);
              if (yyrule == 0)
                {
                  yyreportSyntaxError (&yystack);
                  goto yyuser_error;
                }
              YYCHK1 (yyglrReduce (&yystack, 0, yyrule, yytrue));
            }
          else
            {
              yysymbol_kind_t yytoken = yygetToken (&yychar);
              const short* yyconflicts;
              int yyaction = yygetLRActions (yystate, yytoken, &yyconflicts);
              if (*yyconflicts)
                /* Enter nondeterministic mode.  */
                break;
              if (yyisShiftAction (yyaction))
                {
                  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
                  yychar = YYEMPTY;
                  yyposn += 1;
                  yyglrShift (&yystack, 0, yyaction, yyposn, &yylval);
                  if (0 < yystack.yyerrState)
                    yystack.yyerrState -= 1;
                }
              else if (yyisErrorAction (yyaction))
                {
                  /* Issue an error message unless the scanner already
                     did. */
                  if (yychar != YYerror)
                    yyreportSyntaxError (&yystack);
                  goto yyuser_error;
                }
              else
                YYCHK1 (yyglrReduce (&yystack, 0, -yyaction, yytrue));
            }
        }

      /* Nondeterministic mode. */
      while (yytrue)
        {
          yysymbol_kind_t yytoken_to_shift;
          YYPTRDIFF_T yys;

          for (yys = 0; yys < yystack.yytops.yysize; yys += 1)
            yystackp->yytops.yylookaheadNeeds[yys] = yychar != YYEMPTY;

          /* yyprocessOneStack returns one of three things:

              - An error flag.  If the caller is yyprocessOneStack, it
                immediately returns as well.  When the caller is finally
                yyparse, it jumps to an error label via YYCHK1.

              - yyok, but yyprocessOneStack has invoked yymarkStackDeleted
                (&yystack, yys), which sets the top state of yys to NULL.  Thus,
                yyparse's following invocation of yyremoveDeletes will remove
                the stack.

              - yyok, when ready to shift a token.

             Except in the first case, yyparse will invoke yyremoveDeletes and
             then shift the next token onto all remaining stacks.  This
             synchronization of the shift (that is, after all preceding
             reductions on all stacks) helps prevent double destructor calls
             on yylval in the event of memory exhaustion.  */

          for (yys = 0; yys < yystack.yytops.yysize; yys += 1)
            YYCHK1 (yyprocessOneStack (&yystack, yys, yyposn));
          yyremoveDeletes (&yystack);
          if (yystack.yytops.yysize == 0)
            {
              yyundeleteLastStack (&yystack);
              if (yystack.yytops.yysize == 0)
                yyFail (&yystack, YY_("syntax error"));
              YYCHK1 (yyresolveStack (&yystack));
              YY_DPRINTF ((stderr, "Returning to deterministic operation.\n"));
              yyreportSyntaxError (&yystack);
              goto yyuser_error;
            }

          /* If any yyglrShift call fails, it will fail after shifting.  Thus,
             a copy of yylval will already be on stack 0 in the event of a
             failure in the following loop.  Thus, yychar is set to YYEMPTY
             before the loop to make sure the user destructor for yylval isn't
             called twice.  */
          yytoken_to_shift = YYTRANSLATE (yychar);
          yychar = YYEMPTY;
          yyposn += 1;
          for (yys = 0; yys < yystack.yytops.yysize; yys += 1)
            {
              yy_state_t yystate = yystack.yytops.yystates[yys]->yylrState;
              const short* yyconflicts;
              int yyaction = yygetLRActions (yystate, yytoken_to_shift,
                              &yyconflicts);
              /* Note that yyconflicts were handled by yyprocessOneStack.  */
              YY_DPRINTF ((stderr, "On stack %ld, ", YY_CAST (long, yys)));
              YY_SYMBOL_PRINT ("shifting", yytoken_to_shift, &yylval, &yylloc);
              yyglrShift (&yystack, yys, yyaction, yyposn,
                          &yylval);
              YY_DPRINTF ((stderr, "Stack %ld now in state %d\n",
                           YY_CAST (long, yys),
                           yystack.yytops.yystates[yys]->yylrState));
            }

          if (yystack.yytops.yysize == 1)
            {
              YYCHK1 (yyresolveStack (&yystack));
              YY_DPRINTF ((stderr, "Returning to deterministic operation.\n"));
              yycompressStack (&yystack);
              break;
            }
        }
      continue;
    yyuser_error:
      yyrecoverSyntaxError (&yystack);
      yyposn = yystack.yytops.yystates[0]->yyposn;
    }

 yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;

 yybuglab:
  YY_ASSERT (yyfalse);
  goto yyabortlab;

 yyabortlab:
  yyresult = 1;
  goto yyreturnlab;

 yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;

 yyreturnlab:
  if (yychar != YYEMPTY)
    yydestruct ("Cleanup: discarding lookahead",
                YYTRANSLATE (yychar), &yylval);

  /* If the stack is well-formed, pop the stack until it is empty,
     destroying its entries as we go.  But free the stack regardless
     of whether it is well-formed.  */
  if (yystack.yyitems)
    {
      yyGLRState** yystates = yystack.yytops.yystates;
      if (yystates)
        {
          YYPTRDIFF_T yysize = yystack.yytops.yysize;
          YYPTRDIFF_T yyk;
          for (yyk = 0; yyk < yysize; yyk += 1)
            if (yystates[yyk])
              {
                while (yystates[yyk])
                  {
                    yyGLRState *yys = yystates[yyk];
                    if (yys->yypred != YY_NULLPTR)
                      yydestroyGLRState ("Cleanup: popping", yys);
                    yystates[yyk] = yys->yypred;
                    yystack.yynextFree -= 1;
                    yystack.yyspaceLeft += 1;
                  }
                break;
              }
        }
      yyfreeGLRStack (&yystack);
    }

  return yyresult;
}

/* DEBUGGING ONLY */
#if YYDEBUG
/* Print *YYS and its predecessors. */
static void
yy_yypstack (yyGLRState* yys)
{
  if (yys->yypred)
    {
      yy_yypstack (yys->yypred);
      YY_FPRINTF ((stderr, " -> "));
    }
  YY_FPRINTF ((stderr, "%d@%ld", yys->yylrState, YY_CAST (long, yys->yyposn)));
}

/* Print YYS (possibly NULL) and its predecessors. */
static void
yypstates (yyGLRState* yys)
{
  if (yys == YY_NULLPTR)
    YY_FPRINTF ((stderr, "<null>"));
  else
    yy_yypstack (yys);
  YY_FPRINTF ((stderr, "\n"));
}

/* Print the stack #YYK.  */
static void
yypstack (yyGLRStack* yystackp, YYPTRDIFF_T yyk)
{
  yypstates (yystackp->yytops.yystates[yyk]);
}

/* Print all the stacks.  */
static void
yypdumpstack (yyGLRStack* yystackp)
{
#define YYINDEX(YYX)                                                    \
  YY_CAST (long,                                                        \
           ((YYX)                                                       \
            ? YY_REINTERPRET_CAST (yyGLRStackItem*, (YYX)) - yystackp->yyitems \
            : -1))

  yyGLRStackItem* yyp;
  for (yyp = yystackp->yyitems; yyp < yystackp->yynextFree; yyp += 1)
    {
      YY_FPRINTF ((stderr, "%3ld. ",
                   YY_CAST (long, yyp - yystackp->yyitems)));
      if (*YY_REINTERPRET_CAST (yybool *, yyp))
        {
          YY_ASSERT (yyp->yystate.yyisState);
          YY_ASSERT (yyp->yyoption.yyisState);
          YY_FPRINTF ((stderr, "Res: %d, LR State: %d, posn: %ld, pred: %ld",
                       yyp->yystate.yyresolved, yyp->yystate.yylrState,
                       YY_CAST (long, yyp->yystate.yyposn),
                       YYINDEX (yyp->yystate.yypred)));
          if (! yyp->yystate.yyresolved)
            YY_FPRINTF ((stderr, ", firstVal: %ld",
                         YYINDEX (yyp->yystate.yysemantics.yyfirstVal)));
        }
      else
        {
          YY_ASSERT (!yyp->yystate.yyisState);
          YY_ASSERT (!yyp->yyoption.yyisState);
          YY_FPRINTF ((stderr, "Option. rule: %d, state: %ld, next: %ld",
                       yyp->yyoption.yyrule - 1,
                       YYINDEX (yyp->yyoption.yystate),
                       YYINDEX (yyp->yyoption.yynext)));
        }
      YY_FPRINTF ((stderr, "\n"));
    }

  YY_FPRINTF ((stderr, "Tops:"));
  {
    YYPTRDIFF_T yyi;
    for (yyi = 0; yyi < yystackp->yytops.yysize; yyi += 1)
      YY_FPRINTF ((stderr, "%ld: %ld; ", YY_CAST (long, yyi),
                   YYINDEX (yystackp->yytops.yystates[yyi])));
    YY_FPRINTF ((stderr, "\n"));
  }
#undef YYINDEX
}
#endif

#undef yylval
#undef yychar
#undef yynerrs

/* Substitute the variable and function names.  */
#define yyparse Celesteparse
#define yylex   Celestelex
#define yyerror Celesteerror
#define yylval  Celestelval
#define yychar  Celestechar
#define yydebug Celestedebug
#define yynerrs Celestenerrs


#line 7163 "./Celeste_parser.y"


void Celesteerror(const char* s)
{
	std::cout << "Error: " << s << "\n";
	std::cout << "In line: " << Celestelineno << ", Column: " << Celeste_column << '\n';

	std::size_t currentLineCount = 1;
	auto index = 0;
	static constexpr auto offsetShow = 2;

	while (index < Celeste_input_text->size())
	{
		if ((*Celeste_input_text)[index] == '\n')
		{
			currentLineCount += 1;
		}
		index++;

		if (currentLineCount + offsetShow >= Celestelineno)
		{
			break;
		}

	}

	bool donePreShow = false;
	while (!donePreShow && offsetShow > 0)
	{
		if ((*Celeste_input_text)[index] == '\t')
		{
			std::cout << ' ';
		}
		else if ((*Celeste_input_text)[index] == '\r')
		{
			// skip
		}
		else
		{
			std::cout << (*Celeste_input_text)[index];
		}

		if ((*Celeste_input_text)[index] == '\n')
		{
			if (currentLineCount + 1 == Celestelineno)
			{
				donePreShow = true;
			}
			currentLineCount += 1;
		}

		index++;
	}
	
	bool endLine = false;
	while (!endLine && index < Celeste_input_text->size())
	{
		if ((*Celeste_input_text)[index] == '\t')
		{
			std::cout << ' ';
		}
		else if ((*Celeste_input_text)[index] == '\r')
		{
			// skip
		}
		else
		{
			std::cout << (*Celeste_input_text)[index];
		}
		
		if ((*Celeste_input_text)[index] == '\n')
		{
			endLine = true;
		}
		
		index++;
	}

    for(int i = 0; i < Celeste_column - 1; i++)
	{
		std::cout << "_";
	}
	std::cout << "^\n";
}

deamer::external::cpp::ast::Tree* Celeste::bison::parser::Parser::Parse(const std::string& text) const
{
	Celeste_input_text = &text;
	outputTree = nullptr;
	YY_BUFFER_STATE buf;
	buf = Celeste_scan_string(text.c_str());
	Celesteparse();
	Celeste_delete_buffer(buf);
	Celestelex_destroy();

	return outputTree;
}
