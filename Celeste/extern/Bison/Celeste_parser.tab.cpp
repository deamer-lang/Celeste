/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Skeleton implementation for Bison GLR parsers in C

   Copyright (C) 2002-2015, 2018-2021 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C GLR parser skeleton written by Paul Hilfinger.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "glr.c"

/* Pure parsers.  */
#define YYPURE 0




/* Substitute the variable and function names.  */
#define yyparse Celesteparse
#define yylex   Celestelex
#define yyerror Celesteerror
#define yydebug Celestedebug
#define yylval  Celestelval
#define yychar  Celestechar
#define yynerrs Celestenerrs

/* First part of user prologue.  */
#line 5 "./Celeste_parser.y"

#include <iostream>
#include <vector>
#include <string>
#include <cstring>
#include <stdio.h>
#include <Deamer/External/Cpp/Lexer/TerminalObject.h>
#include <Deamer/External/Cpp/Ast/Node.h>
#include "Celeste/Bison/Parser.h"
#define YY_NO_UNISTD_H
#include "Flex/Celeste_lexer.h"
#undef YY_NO_UNISTD_H
#include "Celeste/Ast/Enum/Type.h"
#include "Celeste/Ast/Node/SINGLE_COMMENT.h"
#include "Celeste/Ast/Node/MULTI_COMMENT.h"
#include "Celeste/Ast/Node/CONSTANT.h"
#include "Celeste/Ast/Node/FUNCTION.h"
#include "Celeste/Ast/Node/CLASS.h"
#include "Celeste/Ast/Node/ENUM.h"
#include "Celeste/Ast/Node/CONDITIONAL.h"
#include "Celeste/Ast/Node/CODE.h"
#include "Celeste/Ast/Node/ATTRIBUTETOK.h"
#include "Celeste/Ast/Node/RUNTIME.h"
#include "Celeste/Ast/Node/STATIC.h"
#include "Celeste/Ast/Node/AUTO.h"
#include "Celeste/Ast/Node/AUTOTYPE.h"
#include "Celeste/Ast/Node/TEMPLATE.h"
#include "Celeste/Ast/Node/NAMESPACE.h"
#include "Celeste/Ast/Node/OPERATORNAME.h"
#include "Celeste/Ast/Node/OVERRIDE.h"
#include "Celeste/Ast/Node/VIRTUAL.h"
#include "Celeste/Ast/Node/PURE.h"
#include "Celeste/Ast/Node/AS.h"
#include "Celeste/Ast/Node/IN.h"
#include "Celeste/Ast/Node/DISPLAY.h"
#include "Celeste/Ast/Node/RETURN.h"
#include "Celeste/Ast/Node/FOR.h"
#include "Celeste/Ast/Node/IF.h"
#include "Celeste/Ast/Node/ELSEIF.h"
#include "Celeste/Ast/Node/ELSE.h"
#include "Celeste/Ast/Node/INLINE.h"
#include "Celeste/Ast/Node/CONSTRUCTOR.h"
#include "Celeste/Ast/Node/FILE_.h"
#include "Celeste/Ast/Node/PROGRAM_.h"
#include "Celeste/Ast/Node/IMPORT.h"
#include "Celeste/Ast/Node/PUBLIC.h"
#include "Celeste/Ast/Node/PROTECTED.h"
#include "Celeste/Ast/Node/PRIVATE.h"
#include "Celeste/Ast/Node/INHERIT.h"
#include "Celeste/Ast/Node/COMPOSITE.h"
#include "Celeste/Ast/Node/LEFT_BRACKET.h"
#include "Celeste/Ast/Node/RIGHT_BRACKET.h"
#include "Celeste/Ast/Node/LEFT_SQUARE_BRACKET.h"
#include "Celeste/Ast/Node/RIGHT_SQUARE_BRACKET.h"
#include "Celeste/Ast/Node/LEFT_PARANTHESIS.h"
#include "Celeste/Ast/Node/RIGHT_PARANTHESIS.h"
#include "Celeste/Ast/Node/COLON.h"
#include "Celeste/Ast/Node/SEMICOLON.h"
#include "Celeste/Ast/Node/COMMA.h"
#include "Celeste/Ast/Node/DOT.h"
#include "Celeste/Ast/Node/LTEQ.h"
#include "Celeste/Ast/Node/GTEQ.h"
#include "Celeste/Ast/Node/LT.h"
#include "Celeste/Ast/Node/GT.h"
#include "Celeste/Ast/Node/PLUSEQ.h"
#include "Celeste/Ast/Node/MINUSEQ.h"
#include "Celeste/Ast/Node/MULTIPLYEQ.h"
#include "Celeste/Ast/Node/DIVIDEEQ.h"
#include "Celeste/Ast/Node/EQEQ.h"
#include "Celeste/Ast/Node/EQ.h"
#include "Celeste/Ast/Node/NOTEQ.h"
#include "Celeste/Ast/Node/NOT.h"
#include "Celeste/Ast/Node/PLUSPLUS.h"
#include "Celeste/Ast/Node/PLUS.h"
#include "Celeste/Ast/Node/MINUSMINUS.h"
#include "Celeste/Ast/Node/MINUS.h"
#include "Celeste/Ast/Node/DIVIDE.h"
#include "Celeste/Ast/Node/MULTIPLY.h"
#include "Celeste/Ast/Node/VARNAME.h"
#include "Celeste/Ast/Node/NUMBER.h"
#include "Celeste/Ast/Node/DECIMAL.h"
#include "Celeste/Ast/Node/TEXT.h"
#include "Celeste/Ast/Node/ESCAPE_CHARS.h"


#include "Celeste/Ast/Node/program.h"
#include "Celeste/Ast/Node/root_program.h"
#include "Celeste/Ast/Node/standard_block.h"
#include "Celeste/Ast/Node/deamerreserved_star__stmt__.h"
#include "Celeste/Ast/Node/stmt.h"
#include "Celeste/Ast/Node/import_statement.h"
#include "Celeste/Ast/Node/file_import.h"
#include "Celeste/Ast/Node/mutation_group.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__symbol_reference__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__symbol_reference__.h"
#include "Celeste/Ast/Node/assignment.h"
#include "Celeste/Ast/Node/assignment_operator.h"
#include "Celeste/Ast/Node/conditional_if.h"
#include "Celeste/Ast/Node/conditional_else_if.h"
#include "Celeste/Ast/Node/conditional_else.h"
#include "Celeste/Ast/Node/conditional_block.h"
#include "Celeste/Ast/Node/template_conditional_function_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__template_parameter__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__template_parameter__.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__conditional_function_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__conditional_function_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__function_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__function_argument__.h"
#include "Celeste/Ast/Node/conditional_function_declaration.h"
#include "Celeste/Ast/Node/template_code_function_declaration.h"
#include "Celeste/Ast/Node/code_function_declaration.h"
#include "Celeste/Ast/Node/return_statement.h"
#include "Celeste/Ast/Node/symbol_increase.h"
#include "Celeste/Ast/Node/symbol_decrease.h"
#include "Celeste/Ast/Node/expression.h"
#include "Celeste/Ast/Node/expression_no_value.h"
#include "Celeste/Ast/Node/t_expression.h"
#include "Celeste/Ast/Node/f_expression.h"
#include "Celeste/Ast/Node/display_call.h"
#include "Celeste/Ast/Node/for_loop.h"
#include "Celeste/Ast/Node/for_iteration_loop.h"
#include "Celeste/Ast/Node/for_each_loop.h"
#include "Celeste/Ast/Node/for_variable.h"
#include "Celeste/Ast/Node/iterator.h"
#include "Celeste/Ast/Node/for_block.h"
#include "Celeste/Ast/Node/namespace_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__namespace_name__.h"
#include "Celeste/Ast/Node/deamerreserved_star__DOT__namespace_name__.h"
#include "Celeste/Ast/Node/namespace_block.h"
#include "Celeste/Ast/Node/namespace_name.h"
#include "Celeste/Ast/Node/inline_class_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__inline_class_declaration_composite__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__inline_class_declaration_composite__.h"
#include "Celeste/Ast/Node/inline_class_declaration_composite.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__inline_class_declaration_composite_alias__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__inline_class_declaration_composite_alias__.h"
#include "Celeste/Ast/Node/inline_class_declaration_composite_alias.h"
#include "Celeste/Ast/Node/inline_class_declaration_composite_name.h"
#include "Celeste/Ast/Node/created_class_name.h"
#include "Celeste/Ast/Node/code_block.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__code_block_input_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__code_block_input_argument__.h"
#include "Celeste/Ast/Node/code_block_input_argument.h"
#include "Celeste/Ast/Node/code_block_argument.h"
#include "Celeste/Ast/Node/code_block_argument_name.h"
#include "Celeste/Ast/Node/code_block_program.h"
#include "Celeste/Ast/Node/variable_declaration.h"
#include "Celeste/Ast/Node/array_declaration.h"
#include "Celeste/Ast/Node/variable_name.h"
#include "Celeste/Ast/Node/template_function_declaration.h"
#include "Celeste/Ast/Node/function_declaration.h"
#include "Celeste/Ast/Node/trailing_return_type.h"
#include "Celeste/Ast/Node/return_type.h"
#include "Celeste/Ast/Node/conditional_function_argument.h"
#include "Celeste/Ast/Node/function_argument.h"
#include "Celeste/Ast/Node/function_argument_type.h"
#include "Celeste/Ast/Node/function_argument_name.h"
#include "Celeste/Ast/Node/condition_modifier_function_call.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__condition_modifier_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__condition_modifier_argument__.h"
#include "Celeste/Ast/Node/condition_modifier_name.h"
#include "Celeste/Ast/Node/condition_modifier_argument.h"
#include "Celeste/Ast/Node/function_body.h"
#include "Celeste/Ast/Node/function_name.h"
#include "Celeste/Ast/Node/template_class_declaration.h"
#include "Celeste/Ast/Node/template_parameter.h"
#include "Celeste/Ast/Node/template_parameter_name.h"
#include "Celeste/Ast/Node/class_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__class_inherit_base__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__class_inherit_base__.h"
#include "Celeste/Ast/Node/class_name.h"
#include "Celeste/Ast/Node/execution_keyword_permutation.h"
#include "Celeste/Ast/Node/class_body.h"
#include "Celeste/Ast/Node/deamerreserved_star__class_stmt__.h"
#include "Celeste/Ast/Node/class_stmt.h"
#include "Celeste/Ast/Node/class_stmt_member_field_declaration.h"
#include "Celeste/Ast/Node/member_field_name.h"
#include "Celeste/Ast/Node/class_stmt_member_function.h"
#include "Celeste/Ast/Node/class_stmt_member_template_function.h"
#include "Celeste/Ast/Node/template_class_stmt_constructor.h"
#include "Celeste/Ast/Node/class_stmt_constructor.h"
#include "Celeste/Ast/Node/accessibility.h"
#include "Celeste/Ast/Node/class_inherit_base.h"
#include "Celeste/Ast/Node/inherit_base.h"
#include "Celeste/Ast/Node/inherit_base_name.h"
#include "Celeste/Ast/Node/compound_base.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__compound_base_alias__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__compound_base_alias__.h"
#include "Celeste/Ast/Node/compound_base_name.h"
#include "Celeste/Ast/Node/compound_base_alias.h"
#include "Celeste/Ast/Node/attribute_section.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__attribute__.h"
#include "Celeste/Ast/Node/deamerreserved_star__deamerreserved_optional__COMMA____attribute__.h"
#include "Celeste/Ast/Node/attribute.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__attribute_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__attribute_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__attribute_template_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__attribute_template_argument__.h"
#include "Celeste/Ast/Node/attribute_argument.h"
#include "Celeste/Ast/Node/attribute_template_argument.h"
#include "Celeste/Ast/Node/attribute_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__attribute_function_argument__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__attribute_function_argument__.h"
#include "Celeste/Ast/Node/attribute_function_argument.h"
#include "Celeste/Ast/Node/attribute_name.h"
#include "Celeste/Ast/Node/enum_declaration.h"
#include "Celeste/Ast/Node/deamerreserved_star__enumeration__.h"
#include "Celeste/Ast/Node/enum_name.h"
#include "Celeste/Ast/Node/enumeration.h"
#include "Celeste/Ast/Node/enumeration_name.h"
#include "Celeste/Ast/Node/enumeration_value.h"
#include "Celeste/Ast/Node/symbol_reference.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__symbol__.h"
#include "Celeste/Ast/Node/deamerreserved_star__DOT__symbol_secondary__.h"
#include "Celeste/Ast/Node/symbol_secondary.h"
#include "Celeste/Ast/Node/deamerreserved_star__symbol_access__.h"
#include "Celeste/Ast/Node/symbol.h"
#include "Celeste/Ast/Node/symbol_access.h"
#include "Celeste/Ast/Node/auto_deduce_array.h"
#include "Celeste/Ast/Node/symbol_name_secondary.h"
#include "Celeste/Ast/Node/symbol_name.h"
#include "Celeste/Ast/Node/function_access.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__expression__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__expression__.h"
#include "Celeste/Ast/Node/index_access.h"
#include "Celeste/Ast/Node/anonymous_access.h"
#include "Celeste/Ast/Node/type.h"
#include "Celeste/Ast/Node/deamerreserved_star__type_modifier__.h"
#include "Celeste/Ast/Node/type_modifier.h"
#include "Celeste/Ast/Node/value_list.h"
#include "Celeste/Ast/Node/deamerreserved_arrow__full_value__.h"
#include "Celeste/Ast/Node/deamerreserved_star__COMMA__full_value__.h"
#include "Celeste/Ast/Node/full_value.h"
#include "Celeste/Ast/Node/value.h"
#include "Celeste/Ast/Node/tuple.h"


#ifndef YY_parse_NERRS
#define YY_parse_NERRS Celestenerrs
#endif //YY_parse_NERRS
#ifndef YY_parse_LLOC
#define YY_parse_LLOC Celestelloc
#endif //YY_parse_LLOC
#define YYERROR_VERBOSE 1

#define YYDEBUG 1

void Celesteerror(const char* s);
int Celestelex();
static ::deamer::external::cpp::ast::Tree* outputTree = nullptr;

extern int Celestelineno;
extern int Celeste_column;

static const std::string* Celeste_input_text = nullptr;

#line 322 "Celeste_parser.tab.c"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "Celeste_parser.tab.h"

/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_SINGLE_COMMENT = 3,             /* SINGLE_COMMENT  */
  YYSYMBOL_MULTI_COMMENT = 4,              /* MULTI_COMMENT  */
  YYSYMBOL_CONSTANT = 5,                   /* CONSTANT  */
  YYSYMBOL_FUNCTION = 6,                   /* FUNCTION  */
  YYSYMBOL_CLASS = 7,                      /* CLASS  */
  YYSYMBOL_ENUM = 8,                       /* ENUM  */
  YYSYMBOL_CONDITIONAL = 9,                /* CONDITIONAL  */
  YYSYMBOL_CODE = 10,                      /* CODE  */
  YYSYMBOL_ATTRIBUTETOK = 11,              /* ATTRIBUTETOK  */
  YYSYMBOL_RUNTIME = 12,                   /* RUNTIME  */
  YYSYMBOL_STATIC = 13,                    /* STATIC  */
  YYSYMBOL_AUTO = 14,                      /* AUTO  */
  YYSYMBOL_AUTOTYPE = 15,                  /* AUTOTYPE  */
  YYSYMBOL_TEMPLATE = 16,                  /* TEMPLATE  */
  YYSYMBOL_NAMESPACE = 17,                 /* NAMESPACE  */
  YYSYMBOL_OPERATORNAME = 18,              /* OPERATORNAME  */
  YYSYMBOL_OVERRIDE = 19,                  /* OVERRIDE  */
  YYSYMBOL_VIRTUAL = 20,                   /* VIRTUAL  */
  YYSYMBOL_PURE = 21,                      /* PURE  */
  YYSYMBOL_AS = 22,                        /* AS  */
  YYSYMBOL_IN = 23,                        /* IN  */
  YYSYMBOL_DISPLAY = 24,                   /* DISPLAY  */
  YYSYMBOL_RETURN = 25,                    /* RETURN  */
  YYSYMBOL_FOR = 26,                       /* FOR  */
  YYSYMBOL_IF = 27,                        /* IF  */
  YYSYMBOL_ELSEIF = 28,                    /* ELSEIF  */
  YYSYMBOL_ELSE = 29,                      /* ELSE  */
  YYSYMBOL_INLINE = 30,                    /* INLINE  */
  YYSYMBOL_CONSTRUCTOR = 31,               /* CONSTRUCTOR  */
  YYSYMBOL_FILE_ = 32,                     /* FILE_  */
  YYSYMBOL_PROGRAM_ = 33,                  /* PROGRAM_  */
  YYSYMBOL_IMPORT = 34,                    /* IMPORT  */
  YYSYMBOL_PUBLIC = 35,                    /* PUBLIC  */
  YYSYMBOL_PROTECTED = 36,                 /* PROTECTED  */
  YYSYMBOL_PRIVATE = 37,                   /* PRIVATE  */
  YYSYMBOL_INHERIT = 38,                   /* INHERIT  */
  YYSYMBOL_COMPOSITE = 39,                 /* COMPOSITE  */
  YYSYMBOL_LEFT_BRACKET = 40,              /* LEFT_BRACKET  */
  YYSYMBOL_RIGHT_BRACKET = 41,             /* RIGHT_BRACKET  */
  YYSYMBOL_LEFT_SQUARE_BRACKET = 42,       /* LEFT_SQUARE_BRACKET  */
  YYSYMBOL_RIGHT_SQUARE_BRACKET = 43,      /* RIGHT_SQUARE_BRACKET  */
  YYSYMBOL_LEFT_PARANTHESIS = 44,          /* LEFT_PARANTHESIS  */
  YYSYMBOL_RIGHT_PARANTHESIS = 45,         /* RIGHT_PARANTHESIS  */
  YYSYMBOL_COLON = 46,                     /* COLON  */
  YYSYMBOL_SEMICOLON = 47,                 /* SEMICOLON  */
  YYSYMBOL_COMMA = 48,                     /* COMMA  */
  YYSYMBOL_DOT = 49,                       /* DOT  */
  YYSYMBOL_LTEQ = 50,                      /* LTEQ  */
  YYSYMBOL_GTEQ = 51,                      /* GTEQ  */
  YYSYMBOL_LT = 52,                        /* LT  */
  YYSYMBOL_GT = 53,                        /* GT  */
  YYSYMBOL_PLUSEQ = 54,                    /* PLUSEQ  */
  YYSYMBOL_MINUSEQ = 55,                   /* MINUSEQ  */
  YYSYMBOL_MULTIPLYEQ = 56,                /* MULTIPLYEQ  */
  YYSYMBOL_DIVIDEEQ = 57,                  /* DIVIDEEQ  */
  YYSYMBOL_EQEQ = 58,                      /* EQEQ  */
  YYSYMBOL_EQ = 59,                        /* EQ  */
  YYSYMBOL_NOTEQ = 60,                     /* NOTEQ  */
  YYSYMBOL_NOT = 61,                       /* NOT  */
  YYSYMBOL_PLUSPLUS = 62,                  /* PLUSPLUS  */
  YYSYMBOL_PLUS = 63,                      /* PLUS  */
  YYSYMBOL_MINUSMINUS = 64,                /* MINUSMINUS  */
  YYSYMBOL_MINUS = 65,                     /* MINUS  */
  YYSYMBOL_DIVIDE = 66,                    /* DIVIDE  */
  YYSYMBOL_MULTIPLY = 67,                  /* MULTIPLY  */
  YYSYMBOL_VARNAME = 68,                   /* VARNAME  */
  YYSYMBOL_NUMBER = 69,                    /* NUMBER  */
  YYSYMBOL_DECIMAL = 70,                   /* DECIMAL  */
  YYSYMBOL_TEXT = 71,                      /* TEXT  */
  YYSYMBOL_ESCAPE_CHARS = 72,              /* ESCAPE_CHARS  */
  YYSYMBOL_YYACCEPT = 73,                  /* $accept  */
  YYSYMBOL_program = 74,                   /* program  */
  YYSYMBOL_root_program = 75,              /* root_program  */
  YYSYMBOL_standard_block = 76,            /* standard_block  */
  YYSYMBOL_deamerreserved_star__stmt__ = 77, /* deamerreserved_star__stmt__  */
  YYSYMBOL_stmt = 78,                      /* stmt  */
  YYSYMBOL_import_statement = 79,          /* import_statement  */
  YYSYMBOL_file_import = 80,               /* file_import  */
  YYSYMBOL_mutation_group = 81,            /* mutation_group  */
  YYSYMBOL_deamerreserved_arrow__symbol_reference__ = 82, /* deamerreserved_arrow__symbol_reference__  */
  YYSYMBOL_deamerreserved_star__COMMA__symbol_reference__ = 83, /* deamerreserved_star__COMMA__symbol_reference__  */
  YYSYMBOL_assignment = 84,                /* assignment  */
  YYSYMBOL_assignment_operator = 85,       /* assignment_operator  */
  YYSYMBOL_conditional_if = 86,            /* conditional_if  */
  YYSYMBOL_conditional_else_if = 87,       /* conditional_else_if  */
  YYSYMBOL_conditional_else = 88,          /* conditional_else  */
  YYSYMBOL_conditional_block = 89,         /* conditional_block  */
  YYSYMBOL_template_conditional_function_declaration = 90, /* template_conditional_function_declaration  */
  YYSYMBOL_deamerreserved_arrow__template_parameter__ = 91, /* deamerreserved_arrow__template_parameter__  */
  YYSYMBOL_deamerreserved_star__COMMA__template_parameter__ = 92, /* deamerreserved_star__COMMA__template_parameter__  */
  YYSYMBOL_deamerreserved_arrow__conditional_function_argument__ = 93, /* deamerreserved_arrow__conditional_function_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__conditional_function_argument__ = 94, /* deamerreserved_star__COMMA__conditional_function_argument__  */
  YYSYMBOL_deamerreserved_arrow__function_argument__ = 95, /* deamerreserved_arrow__function_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__function_argument__ = 96, /* deamerreserved_star__COMMA__function_argument__  */
  YYSYMBOL_conditional_function_declaration = 97, /* conditional_function_declaration  */
  YYSYMBOL_template_code_function_declaration = 98, /* template_code_function_declaration  */
  YYSYMBOL_code_function_declaration = 99, /* code_function_declaration  */
  YYSYMBOL_return_statement = 100,         /* return_statement  */
  YYSYMBOL_symbol_increase = 101,          /* symbol_increase  */
  YYSYMBOL_symbol_decrease = 102,          /* symbol_decrease  */
  YYSYMBOL_expression = 103,               /* expression  */
  YYSYMBOL_expression_no_value = 104,      /* expression_no_value  */
  YYSYMBOL_t_expression = 105,             /* t_expression  */
  YYSYMBOL_f_expression = 106,             /* f_expression  */
  YYSYMBOL_display_call = 107,             /* display_call  */
  YYSYMBOL_for_loop = 108,                 /* for_loop  */
  YYSYMBOL_for_iteration_loop = 109,       /* for_iteration_loop  */
  YYSYMBOL_for_each_loop = 110,            /* for_each_loop  */
  YYSYMBOL_for_variable = 111,             /* for_variable  */
  YYSYMBOL_iterator = 112,                 /* iterator  */
  YYSYMBOL_for_block = 113,                /* for_block  */
  YYSYMBOL_namespace_declaration = 114,    /* namespace_declaration  */
  YYSYMBOL_deamerreserved_arrow__namespace_name__ = 115, /* deamerreserved_arrow__namespace_name__  */
  YYSYMBOL_deamerreserved_star__DOT__namespace_name__ = 116, /* deamerreserved_star__DOT__namespace_name__  */
  YYSYMBOL_namespace_block = 117,          /* namespace_block  */
  YYSYMBOL_namespace_name = 118,           /* namespace_name  */
  YYSYMBOL_inline_class_declaration = 119, /* inline_class_declaration  */
  YYSYMBOL_deamerreserved_arrow__inline_class_declaration_composite__ = 120, /* deamerreserved_arrow__inline_class_declaration_composite__  */
  YYSYMBOL_deamerreserved_star__COMMA__inline_class_declaration_composite__ = 121, /* deamerreserved_star__COMMA__inline_class_declaration_composite__  */
  YYSYMBOL_inline_class_declaration_composite = 122, /* inline_class_declaration_composite  */
  YYSYMBOL_deamerreserved_arrow__inline_class_declaration_composite_alias__ = 123, /* deamerreserved_arrow__inline_class_declaration_composite_alias__  */
  YYSYMBOL_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__ = 124, /* deamerreserved_star__COMMA__inline_class_declaration_composite_alias__  */
  YYSYMBOL_inline_class_declaration_composite_alias = 125, /* inline_class_declaration_composite_alias  */
  YYSYMBOL_inline_class_declaration_composite_name = 126, /* inline_class_declaration_composite_name  */
  YYSYMBOL_created_class_name = 127,       /* created_class_name  */
  YYSYMBOL_code_block = 128,               /* code_block  */
  YYSYMBOL_deamerreserved_arrow__code_block_input_argument__ = 129, /* deamerreserved_arrow__code_block_input_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__code_block_input_argument__ = 130, /* deamerreserved_star__COMMA__code_block_input_argument__  */
  YYSYMBOL_code_block_input_argument = 131, /* code_block_input_argument  */
  YYSYMBOL_code_block_argument = 132,      /* code_block_argument  */
  YYSYMBOL_code_block_argument_name = 133, /* code_block_argument_name  */
  YYSYMBOL_code_block_program = 134,       /* code_block_program  */
  YYSYMBOL_variable_declaration = 135,     /* variable_declaration  */
  YYSYMBOL_array_declaration = 136,        /* array_declaration  */
  YYSYMBOL_variable_name = 137,            /* variable_name  */
  YYSYMBOL_template_function_declaration = 138, /* template_function_declaration  */
  YYSYMBOL_function_declaration = 139,     /* function_declaration  */
  YYSYMBOL_trailing_return_type = 140,     /* trailing_return_type  */
  YYSYMBOL_return_type = 141,              /* return_type  */
  YYSYMBOL_conditional_function_argument = 142, /* conditional_function_argument  */
  YYSYMBOL_function_argument = 143,        /* function_argument  */
  YYSYMBOL_function_argument_type = 144,   /* function_argument_type  */
  YYSYMBOL_function_argument_name = 145,   /* function_argument_name  */
  YYSYMBOL_condition_modifier_function_call = 146, /* condition_modifier_function_call  */
  YYSYMBOL_deamerreserved_arrow__condition_modifier_argument__ = 147, /* deamerreserved_arrow__condition_modifier_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__condition_modifier_argument__ = 148, /* deamerreserved_star__COMMA__condition_modifier_argument__  */
  YYSYMBOL_condition_modifier_name = 149,  /* condition_modifier_name  */
  YYSYMBOL_condition_modifier_argument = 150, /* condition_modifier_argument  */
  YYSYMBOL_function_body = 151,            /* function_body  */
  YYSYMBOL_function_name = 152,            /* function_name  */
  YYSYMBOL_template_class_declaration = 153, /* template_class_declaration  */
  YYSYMBOL_template_parameter = 154,       /* template_parameter  */
  YYSYMBOL_template_parameter_name = 155,  /* template_parameter_name  */
  YYSYMBOL_class_declaration = 156,        /* class_declaration  */
  YYSYMBOL_deamerreserved_arrow__class_inherit_base__ = 157, /* deamerreserved_arrow__class_inherit_base__  */
  YYSYMBOL_deamerreserved_star__COMMA__class_inherit_base__ = 158, /* deamerreserved_star__COMMA__class_inherit_base__  */
  YYSYMBOL_class_name = 159,               /* class_name  */
  YYSYMBOL_execution_keyword_permutation = 160, /* execution_keyword_permutation  */
  YYSYMBOL_class_body = 161,               /* class_body  */
  YYSYMBOL_deamerreserved_star__class_stmt__ = 162, /* deamerreserved_star__class_stmt__  */
  YYSYMBOL_class_stmt = 163,               /* class_stmt  */
  YYSYMBOL_class_stmt_member_field_declaration = 164, /* class_stmt_member_field_declaration  */
  YYSYMBOL_member_field_name = 165,        /* member_field_name  */
  YYSYMBOL_class_stmt_member_function = 166, /* class_stmt_member_function  */
  YYSYMBOL_class_stmt_member_template_function = 167, /* class_stmt_member_template_function  */
  YYSYMBOL_template_class_stmt_constructor = 168, /* template_class_stmt_constructor  */
  YYSYMBOL_class_stmt_constructor = 169,   /* class_stmt_constructor  */
  YYSYMBOL_accessibility = 170,            /* accessibility  */
  YYSYMBOL_class_inherit_base = 171,       /* class_inherit_base  */
  YYSYMBOL_inherit_base = 172,             /* inherit_base  */
  YYSYMBOL_inherit_base_name = 173,        /* inherit_base_name  */
  YYSYMBOL_compound_base = 174,            /* compound_base  */
  YYSYMBOL_deamerreserved_arrow__compound_base_alias__ = 175, /* deamerreserved_arrow__compound_base_alias__  */
  YYSYMBOL_deamerreserved_star__COMMA__compound_base_alias__ = 176, /* deamerreserved_star__COMMA__compound_base_alias__  */
  YYSYMBOL_compound_base_name = 177,       /* compound_base_name  */
  YYSYMBOL_compound_base_alias = 178,      /* compound_base_alias  */
  YYSYMBOL_attribute_section = 179,        /* attribute_section  */
  YYSYMBOL_deamerreserved_arrow__attribute__ = 180, /* deamerreserved_arrow__attribute__  */
  YYSYMBOL_deamerreserved_star__deamerreserved_optional__COMMA____attribute__ = 181, /* deamerreserved_star__deamerreserved_optional__COMMA____attribute__  */
  YYSYMBOL_attribute = 182,                /* attribute  */
  YYSYMBOL_deamerreserved_arrow__attribute_argument__ = 183, /* deamerreserved_arrow__attribute_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__attribute_argument__ = 184, /* deamerreserved_star__COMMA__attribute_argument__  */
  YYSYMBOL_deamerreserved_arrow__attribute_template_argument__ = 185, /* deamerreserved_arrow__attribute_template_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__attribute_template_argument__ = 186, /* deamerreserved_star__COMMA__attribute_template_argument__  */
  YYSYMBOL_attribute_argument = 187,       /* attribute_argument  */
  YYSYMBOL_attribute_template_argument = 188, /* attribute_template_argument  */
  YYSYMBOL_attribute_declaration = 189,    /* attribute_declaration  */
  YYSYMBOL_deamerreserved_arrow__attribute_function_argument__ = 190, /* deamerreserved_arrow__attribute_function_argument__  */
  YYSYMBOL_deamerreserved_star__COMMA__attribute_function_argument__ = 191, /* deamerreserved_star__COMMA__attribute_function_argument__  */
  YYSYMBOL_attribute_function_argument = 192, /* attribute_function_argument  */
  YYSYMBOL_attribute_name = 193,           /* attribute_name  */
  YYSYMBOL_enum_declaration = 194,         /* enum_declaration  */
  YYSYMBOL_deamerreserved_star__enumeration__ = 195, /* deamerreserved_star__enumeration__  */
  YYSYMBOL_enum_name = 196,                /* enum_name  */
  YYSYMBOL_enumeration = 197,              /* enumeration  */
  YYSYMBOL_enumeration_name = 198,         /* enumeration_name  */
  YYSYMBOL_enumeration_value = 199,        /* enumeration_value  */
  YYSYMBOL_symbol_reference = 200,         /* symbol_reference  */
  YYSYMBOL_deamerreserved_arrow__symbol__ = 201, /* deamerreserved_arrow__symbol__  */
  YYSYMBOL_deamerreserved_star__DOT__symbol_secondary__ = 202, /* deamerreserved_star__DOT__symbol_secondary__  */
  YYSYMBOL_symbol_secondary = 203,         /* symbol_secondary  */
  YYSYMBOL_deamerreserved_star__symbol_access__ = 204, /* deamerreserved_star__symbol_access__  */
  YYSYMBOL_symbol = 205,                   /* symbol  */
  YYSYMBOL_symbol_access = 206,            /* symbol_access  */
  YYSYMBOL_auto_deduce_array = 207,        /* auto_deduce_array  */
  YYSYMBOL_symbol_name_secondary = 208,    /* symbol_name_secondary  */
  YYSYMBOL_symbol_name = 209,              /* symbol_name  */
  YYSYMBOL_function_access = 210,          /* function_access  */
  YYSYMBOL_deamerreserved_arrow__expression__ = 211, /* deamerreserved_arrow__expression__  */
  YYSYMBOL_deamerreserved_star__COMMA__expression__ = 212, /* deamerreserved_star__COMMA__expression__  */
  YYSYMBOL_index_access = 213,             /* index_access  */
  YYSYMBOL_anonymous_access = 214,         /* anonymous_access  */
  YYSYMBOL_type = 215,                     /* type  */
  YYSYMBOL_deamerreserved_star__type_modifier__ = 216, /* deamerreserved_star__type_modifier__  */
  YYSYMBOL_type_modifier = 217,            /* type_modifier  */
  YYSYMBOL_value_list = 218,               /* value_list  */
  YYSYMBOL_deamerreserved_arrow__full_value__ = 219, /* deamerreserved_arrow__full_value__  */
  YYSYMBOL_deamerreserved_star__COMMA__full_value__ = 220, /* deamerreserved_star__COMMA__full_value__  */
  YYSYMBOL_full_value = 221,               /* full_value  */
  YYSYMBOL_value = 222,                    /* value  */
  YYSYMBOL_tuple = 223                     /* tuple  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;


/* Default (constant) value used for initialization for null
   right-hand sides.  Unlike the standard yacc.c template, here we set
   the default value of $$ to a zeroed-out value.  Since the default
   value is undefined, this behavior is technically correct.  */
static YYSTYPE yyval_default;



#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif
#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YYFREE
# define YYFREE free
#endif
#ifndef YYMALLOC
# define YYMALLOC malloc
#endif
#ifndef YYREALLOC
# define YYREALLOC realloc
#endif

#ifdef __cplusplus
  typedef bool yybool;
# define yytrue true
# define yyfalse false
#else
  /* When we move to stdbool, get rid of the various casts to yybool.  */
  typedef signed char yybool;
# define yytrue 1
# define yyfalse 0
#endif

#ifndef YYSETJMP
# include <setjmp.h>
# define YYJMP_BUF jmp_buf
# define YYSETJMP(Env) setjmp (Env)
/* Pacify Clang and ICC.  */
# define YYLONGJMP(Env, Val)                    \
 do {                                           \
   longjmp (Env, Val);                          \
   YY_ASSERT (0);                               \
 } while (yyfalse)
#endif

#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* The _Noreturn keyword of C11.  */
#ifndef _Noreturn
# if (defined __cplusplus \
      && ((201103 <= __cplusplus && !(__GNUC__ == 4 && __GNUC_MINOR__ == 7)) \
          || (defined _MSC_VER && 1900 <= _MSC_VER)))
#  define _Noreturn [[noreturn]]
# elif ((!defined __cplusplus || defined __clang__) \
        && (201112 <= (defined __STDC_VERSION__ ? __STDC_VERSION__ : 0) \
            || (!defined __STRICT_ANSI__ \
                && (4 < __GNUC__ + (7 <= __GNUC_MINOR__) \
                    || (defined __apple_build_version__ \
                        ? 6000000 <= __apple_build_version__ \
                        : 3 < __clang_major__ + (5 <= __clang_minor__))))))
   /* _Noreturn works as-is.  */
# elif (2 < __GNUC__ + (8 <= __GNUC_MINOR__) || defined __clang__ \
        || 0x5110 <= __SUNPRO_C)
#  define _Noreturn __attribute__ ((__noreturn__))
# elif 1200 <= (defined _MSC_VER ? _MSC_VER : 0)
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  101
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   17801

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  73
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  151
/* YYNRULES -- Number of rules.  */
#define YYNRULES  621
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  2207
/* YYMAXRHS -- Maximum number of symbols on right-hand side of rule.  */
#define YYMAXRHS 19
/* YYMAXLEFT -- Maximum number of symbols to the left of a handle
   accessed by $0, $-1, etc., in any rule.  */
#define YYMAXLEFT 0

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   327

/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int8 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72
};

#if YYDEBUG
/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,   715,   715,   726,   736,   746,   752,   762,   768,   774,
     780,   786,   792,   798,   804,   810,   816,   823,   829,   835,
     841,   847,   853,   859,   865,   871,   877,   883,   889,   895,
     901,   907,   913,   924,   934,   944,   957,   969,   982,   994,
    1008,  1018,  1025,  1035,  1045,  1051,  1057,  1063,  1069,  1079,
    1093,  1103,  1117,  1129,  1139,  1155,  1170,  1186,  1201,  1216,
    1230,  1245,  1259,  1275,  1290,  1306,  1321,  1336,  1350,  1365,
    1379,  1392,  1404,  1417,  1429,  1445,  1460,  1476,  1491,  1506,
    1520,  1535,  1549,  1565,  1580,  1596,  1611,  1626,  1640,  1655,
    1669,  1682,  1694,  1707,  1723,  1733,  1740,  1750,  1760,  1767,
    1777,  1787,  1794,  1804,  1818,  1831,  1845,  1858,  1871,  1883,
    1896,  1908,  1922,  1935,  1949,  1962,  1975,  1987,  2000,  2012,
    2023,  2033,  2044,  2058,  2071,  2083,  2096,  2108,  2121,  2133,
    2146,  2162,  2173,  2183,  2194,  2208,  2218,  2228,  2238,  2248,
    2254,  2260,  2270,  2276,  2282,  2288,  2294,  2300,  2306,  2312,
    2318,  2324,  2334,  2342,  2352,  2362,  2368,  2378,  2390,  2400,
    2415,  2425,  2435,  2445,  2457,  2467,  2474,  2484,  2494,  2504,
    2512,  2519,  2527,  2538,  2548,  2555,  2565,  2571,  2579,  2588,
    2600,  2611,  2623,  2638,  2648,  2655,  2665,  2675,  2685,  2695,
    2706,  2716,  2727,  2737,  2749,  2759,  2766,  2776,  2786,  2792,
    2802,  2812,  2822,  2828,  2834,  2840,  2850,  2862,  2872,  2885,
    2898,  2910,  2922,  2935,  2948,  2960,  2972,  2985,  2998,  3010,
    3022,  3035,  3048,  3060,  3072,  3085,  3098,  3110,  3122,  3135,
    3148,  3160,  3172,  3185,  3198,  3210,  3222,  3235,  3248,  3260,
    3272,  3285,  3298,  3310,  3322,  3335,  3348,  3360,  3372,  3385,
    3398,  3410,  3422,  3435,  3448,  3460,  3472,  3485,  3498,  3510,
    3522,  3535,  3548,  3560,  3572,  3585,  3598,  3610,  3622,  3635,
    3648,  3660,  3676,  3687,  3698,  3708,  3718,  3729,  3740,  3750,
    3760,  3771,  3782,  3792,  3802,  3813,  3824,  3834,  3848,  3858,
    3868,  3878,  3884,  3890,  3896,  3906,  3916,  3926,  3937,  3947,
    3958,  3968,  3980,  3990,  3997,  4007,  4017,  4027,  4037,  4047,
    4057,  4067,  4077,  4087,  4097,  4107,  4117,  4127,  4137,  4147,
    4157,  4167,  4177,  4187,  4197,  4211,  4221,  4231,  4239,  4247,
    4255,  4267,  4277,  4284,  4294,  4304,  4310,  4316,  4322,  4328,
    4338,  4348,  4354,  4364,  4370,  4376,  4382,  4388,  4394,  4404,
    4411,  4418,  4425,  4432,  4439,  4446,  4453,  4460,  4466,  4472,
    4478,  4488,  4498,  4504,  4510,  4516,  4522,  4528,  4538,  4544,
    4550,  4556,  4562,  4568,  4578,  4591,  4603,  4616,  4628,  4641,
    4653,  4666,  4678,  4691,  4703,  4716,  4728,  4741,  4753,  4766,
    4778,  4791,  4803,  4816,  4828,  4841,  4853,  4866,  4878,  4891,
    4903,  4916,  4928,  4941,  4953,  4966,  4978,  4991,  5003,  5016,
    5028,  5041,  5053,  5066,  5078,  5091,  5103,  5116,  5128,  5141,
    5153,  5166,  5178,  5191,  5203,  5216,  5228,  5241,  5253,  5266,
    5278,  5291,  5303,  5316,  5328,  5341,  5353,  5366,  5378,  5391,
    5403,  5416,  5428,  5441,  5453,  5466,  5478,  5491,  5503,  5516,
    5528,  5541,  5553,  5566,  5578,  5591,  5603,  5616,  5628,  5641,
    5653,  5666,  5678,  5691,  5703,  5716,  5728,  5741,  5753,  5766,
    5782,  5793,  5803,  5814,  5824,  5835,  5845,  5856,  5866,  5877,
    5887,  5898,  5908,  5919,  5929,  5940,  5950,  5961,  5971,  5982,
    5992,  6003,  6013,  6024,  6038,  6044,  6050,  6060,  6066,  6076,
    6086,  6096,  6102,  6108,  6117,  6125,  6134,  6146,  6156,  6163,
    6173,  6183,  6193,  6203,  6217,  6227,  6234,  6240,  6250,  6256,
    6264,  6272,  6282,  6292,  6302,  6316,  6326,  6333,  6343,  6353,
    6360,  6370,  6380,  6390,  6401,  6412,  6422,  6432,  6443,  6454,
    6464,  6474,  6485,  6496,  6506,  6516,  6527,  6538,  6548,  6562,
    6572,  6579,  6589,  6599,  6609,  6621,  6627,  6637,  6647,  6654,
    6660,  6667,  6677,  6687,  6697,  6707,  6717,  6724,  6734,  6744,
    6750,  6760,  6770,  6776,  6782,  6788,  6798,  6810,  6816,  6822,
    6828,  6834,  6840,  6846,  6852,  6862,  6868,  6874,  6880,  6890,
    6899,  6907,  6916,  6928,  6938,  6945,  6955,  6967,  6979,  6985,
    6991,  6997,  7003,  7013,  7019,  7029,  7035,  7041,  7051,  7058,
    7068,  7078,  7085,  7095,  7105,  7111,  7117,  7123,  7129,  7135,
    7145,  7154
};
#endif

#define YYPACT_NINF (-619)
#define YYTABLE_NINF (-605)

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const yytype_int16 yypact[] =
{
    1078,  -619,   158,    20,    59,  -619,   -24,  -619,   386,   175,
    1139,    89,   105,    33,  -619,    74,   165,    23,  -619,   193,
     268,  -619,  -619,  -619,  1818,  -619,  -619,  -619,  -619,  -619,
    -619,  -619,  -619,  -619,  -619,  -619,  -619,  -619,  -619,  -619,
    -619,  -619,  -619,  -619,  -619,   232,  -619,  -619,  -619,  -619,
    -619,   905,  2598,  -619,  -619,  2490,  -619,   240,   585,   386,
      72,   169,  -619,  -619,   164,  -619,   252,  -619,  -619,   263,
    -619,  -619,   277,   278,  -619,  1927,    35,   824,  -619,  -619,
    -619,  -619,   133,  2508,  -619,  -619,  -619,  -619,  -619,   372,
     300,   175,   175,   314,  2005,  2740,   179,   330,   349,   103,
     370,  -619,  -619,    24,   169,   386,   386,   413,   427,   386,
     458,   243,   386,  -619,  -619,  -619,  -619,  -619,  -619,  -619,
    -619,   175,   203,  -619,   175,   395,   595,  -619,   615,  -619,
    -619,  -619,  -619,   442,  -619,   435,   435,  -619,  -619,   386,
     480,   125,   481,  -619,   386,  -619,   299,   311,  2825,   -24,
    -619,  -619,   495,   502,   503,  -619,   170,   301,   506,  -619,
     490,   333,   515,  -619,   175,   175,   824,   824,   824,   824,
     824,   824,   824,   824,   500,  3006,   547,   554,   175,  -619,
     563,   592,   599,   601,   119,   578,   586,   614,   618,   640,
     386,  -619,    13,  -619,   641,   645,   673,  -619,   386,  -619,
    1060,  -619,   623,  -619,   173,   626,   659,  -619,   169,   386,
     386,   661,   658,  -619,  -619,  -619,  -619,  -619,  -619,  -619,
    -619,  -619,   240,   628,   688,  -619,   709,  -619,   721,   671,
     381,  -619,   175,   175,  -619,  -619,   733,   386,   386,   737,
     169,  -619,    83,  -619,   756,   753,   448,   754,   770,   773,
     489,  -619,   781,   278,  -619,  3162,   797,  -619,   802,   804,
     169,  -619,  -619,  -619,  -619,   812,   175,  -619,  2508,  2508,
    -619,  -619,  -619,  -619,  -619,  -619,  -619,  -619,   535,    39,
    -619,   818,   825,   829,   827,  -619,   833,  -619,   845,   386,
    -619,   119,  1281,   608,  3311,   836,   848,   892,   849,   107,
    -619,   888,  -619,   238,  -619,   898,   897,   386,   386,   510,
     910,   903,  -619,  -619,   552,   326,   902,   908,   909,  -619,
     386,   386,  1297,   926,   260,   175,  -619,  -619,  -619,  -619,
    -619,   175,  -619,  -619,   937,  -619,   938,   945,   779,   985,
     989,   386,   946,   386,   175,   975,  3378,   969,  1001,  1004,
     169,  -619,  3473,  1013,  1015,  1012,  -619,  -619,  1018,  3869,
    3945,  1028,  1063,  -619,  1067,   175,   175,  -619,  4006,  4051,
    1054,  -619,  -619,   119,  -619,  1073,  -619,  1076,  1080,  -619,
    -619,  1081,  1085,  1091,  4112,  4148,  1103,  -619,  1101,  1115,
     194,  1116,   386,  1120,  1108,   912,  -619,  -619,  1141,  -619,
     505,  1138,    47,    47,   295,  -619,  -619,  -619,  1166,  1182,
    1159,    94,  1172,  -619,   917,  -619,  -619,  -619,  -619,  -619,
    -619,   269,   386,  1252,    37,  -619,    34,  1173,  -619,   679,
    1176,   335,   488,   245,   562,   466,   169,  -619,  -619,  -619,
    1179,   386,   -31,  -619,  1188,  1672,  1194,   931,    47,  1209,
    -619,  1212,  -619,  -619,  -619,  1235,  1236,   680,   982,  1037,
    1242,  -619,   286,  -619,  -619,   175,  -619,  1249,  4184,  4229,
    1257,  1248,  1264,  4275,  4320,  1270,  -619,  1263,  1273,  4365,
    -619,  -619,  1282,  -619,  1298,  1313,  1314,  4401,  -619,   665,
    1301,   175,  -619,  -619,   175,  -619,  1345,  1318,  1326,  4446,
     386,  1351,  1352,  1365,  1108,  -619,  1376,  -619,  1381,   359,
    1400,   716,    16,   337,  1428,  1433,   562,  1441,  1448,  1125,
    1432,  -619,  -619,  1147,  1437,  -619,  -619,  1446,   401,  1452,
     130,   386,   425,  -619,  1456,   903,  4482,  1461,  -619,   519,
     566,  1465,   169,  -619,  1154,  1468,  1469,   169,   386,   402,
     418,   488,   428,   562,   908,  -619,  -619,  -619,   175,  1185,
    1463,  2290,   571,  1473,   720,   444,   562,    47,  -619,  4527,
    1485,  1497,  1493,  1500,  1498,   722,  1506,  1509,   730,  1226,
     838,  -619,  -619,  -619,  1528,  1529,  4572,  -619,  -619,  1533,
    1535,  4617,  -619,  -619,  1546,  1532,  1538,  -619,  -619,  1544,
    -619,  1551,   955,  1080,  1085,  -619,  1557,  1562,  1565,  1566,
     386,   386,  1568,  1563,  -619,  -619,  4662,  1575,   950,  1006,
    1576,   215,  -619,  -619,    25,  1577,  -619,  -619,  -619,  -619,
    1583,  1586,   731,  1231,  1593,  1594,   743,   469,   530,  1250,
    1598,  1327,  1607,   432,  -619,  -619,   175,  -619,  -619,  1609,
    4707,  4752,  1613,  4797,  1615,  1046,  1621,   386,  1625,   749,
    1328,  1333,   386,  1390,   169,   386,  1334,  1630,  1635,   169,
     386,   609,  -619,  1623,  -619,  1084,  1636,   758,  -619,  1639,
    4842,  1654,  1126,  1149,  1650,   169,   386,   667,   732,   562,
    1655,  4887,  4932,  1661,  4977,  1670,  1671,  1675,  5022,  1676,
    1684,  1686,  1692,  1688,   763,  1690,  1694,   317,  1667,  -619,
    -619,  -619,  1698,  -619,  -619,  1700,  -619,  5067,  5112,  -619,
    -619,  -619,  1703,  -619,  -619,  -619,  -619,  1702,  -619,  1709,
    1715,   386,  -619,  1720,  5157,  5202,  1722,  5247,  1726,  1156,
    -619,  1724,   367,  1717,   551,  1728,   471,   266,  5292,  1729,
    1735,  1733,  1739,  1742,   784,  5337,  1749,  1750,  1753,    47,
    1752,   283,  1757,  1761,  1758,   785,  1387,  1764,  1762,   806,
     619,  -619,  -619,   175,   132,  -619,  1765,  1767,  5382,  1770,
    5427,  5472,  1773,  -619,  1766,   386,   386,  1771,  1779,  1776,
     810,  1784,  1780,   822,  1768,  3517,  1797,   386,  1443,   386,
    1793,   828,  1388,  1408,   386,  1453,   169,   386,  -619,  5517,
    1799,  1272,  1304,  1795,  -619,  1800,  5562,  5607,  1810,  5652,
    1812,  1459,   386,  1477,   169,   386,   169,   386,   750,  -619,
    1813,  1816,  5697,  1826,  5742,  5787,  1828,  1829,  5832,  5877,
    1831,  5922,  1833,  1834,  1808,  -619,  1845,  1848,  1835,   175,
    -619,  -619,  -619,  1853,  1856,  -619,  -619,  -619,  -619,  1857,
    -619,  1858,  1862,  5967,  1864,  6012,  6057,  1869,  -619,  -619,
    1875,  1844,  -619,  1409,  1877,  1421,   672,  1880,   676,  1881,
     674,  1874,  6102,  6147,  1882,  6192,  1887,  1895,  1898,  1906,
    6237,  6282,  1908,  1943,   562,    47,   678,  1915,   727,   284,
    6327,  1921,  1922,  1920,  1928,  1930,   857,  6372,  1932,  1940,
    1937,    47,  1945,   377,  -619,  -619,  -619,  -619,  1948,  -619,
    1951,  1955,  6417,  1450,  1929,  1942,   386,  6462,  1957,  1962,
    1958,  6507,  1964,  1966,  1967,  1460,  1970, 17257,  1972, 17291,
    1987,  1992,   386,   386,  1993,  1997,  2003,   870,  2011,  2008,
     883,  2010, 17325,  2016,   386,  1542,  2019,  6552,  6597,  2017,
    6642,  2023,  1517,  -619,  2024,  2031,  6687,  2035,  6732,  6777,
    2037,  2036, 17359,  2041,   386,  1554,   386,  1579,   169,   386,
    -619,  -619,  2046,  -619,  2048,  2057,  6822,  -619,  2063,  2068,
    6867,  2069,  6912,  6957,  2055,  -619,  -619,  2062,  2067,  -619,
    -619,  -619,  -619,  -619,  2078,  -619,  2079,  2084,  7002,  -619,
    2080,  2090,  2082,   901,  1481,  2098,  2094,   919,  1515,  2099,
    1519,  1543,  2101,  1599,   705,  2102,  -619,  2106,  2108,  7047,
    2109,  7092,  7137,  2113,  -619,  2110,  2116,  7182,  2136,  2158,
     562,  1600,  2122,  1611,   745,  2123,   775,  2124,   794,  2128,
    7227,  7272,  2133,  7317,  2141,  2144,  2142,  2148,  7362,  7407,
    2151,  2187,   562,    47,  -619,  -619,  -619,  -619,  -619,  2154,
    2164,  2160,   927,  1627,  1638,  2166,  2170,  7452,  7497,  2174,
    2176,  7542,  7587,  2184,  1522,  2178,   956,  -619,  2191,  1699,
    2196, 17393,  1712,  2192,  2194,   386,  7632,  2199,  2200,  2197,
    7677,  2203,  2204,  2205,  1725,  2213, 17427,  2201, 17461,  2216,
    -619,  2218,  2219,  7722,  2224,  7767,  7812,  2229,  -619,  -619,
    2233,  -619,  2234,  2235,  7857,  1746,  2238, 17495,  2237, 17529,
    2243,  2241, 17563,  2246,   386,  1626,  -619,  -619,  -619,  2247,
    -619,  -619,  2248,  -619,  2250,  2251,  7902,  -619,  -619,  -619,
    -619,  -619,  2252,  -619,  7947,  2254,  2257,  2242,  2265,  2264,
     965,  7992,  2279,  2283,  2288,  2295,  2291,   983,  1772,  2300,
    2298,   990,  2304,  2301,  1000,  1821,  2305,  2302,  1017,  1850,
    2284,  1859,  -619,  -619,  2311,  -619,  2312,  2316,  8037,  -619,
    -619,  2320,  2366,  2327,  2331,  1024,  1871,  2337,  2335,  1026,
    1872,  2338,  1878,  1883,  2341,  1933,   835,  2344,  -619,  2340,
    2348,  8082,  2349,  8127,  8172,  2353,  -619,  2357,  2358,  8217,
    2399,  2412,   562,  -619,  8262,  2382,  2383,  2380,  2387,  2384,
    1064,  2388,  2385,  1065,  1994,  -619,  2397,  2404,  8307,  -619,
    2408,  2411,  8352,  8397,  2392,  1531,  1622,  2395,  -619,  1633,
    2410,  1087,  -619,  2417,  2413,  2415,  1095,  1995,  1996,  2400,
    2422,  8442,  8487,  2426,  2429,  8532,  8577,  2432,  1723,  2428,
    1127,  -619,  2433,  2045,  2434, 17597,  -619,  -619,  2435,  -619,
    2436,  2437,  8622,  -619,  -619,  -619,  2438,  1769,  2445,  1169,
    -619,  2440,  2054,  2462, 17631,  2066,  2464, 17665,  2463, 17699,
    2466,  -619,  -619,  -619,  -619,  2471,  -619,  2474,  8667,  8712,
    2478,  8757,  2479,  2481,  2477,  2484,  8802,  8847,  2488,  8892,
    2489,  2492,  2485,  2493,  2491,  1174,  8937,  2494,  2498,  2495,
    8982,  2499,  2502,  2510,  2503,  2512,  1180,  9027,  2513,  2522,
    2519,  2525,  2524,  1181,  2073,  2527,  2526,  1193,  -619,  -619,
    -619,  2535,  -619,  9072,  2537,  2539,  2536,  2540,  2538,  1205,
    9117,  2546,  2547,  2543,  2549,  2551,  1221,  2087,  2554,  2552,
    1255,  2558,  2557,  1256,  2092,  2559,  2562,  1266,  2111,  2568,
    2131,  -619,  -619,  2550,  -619,  2574,  2575,  9162,  -619,  -619,
    2576,  2442,  2577,  9207,  9252,  2579,  9297,  2580,  2581,  2578,
    9342,  2582,  2585,  2584,  2586,  2587,  1308,  -619,  -619,  2589,
    -619,  -619,  2592,  2593,  9387,  9432,  2596,  9477,  2599,  1775,
    9522,  2600,  1953,  2061,  2597,  -619,  9567,  2601,  2603,  2602,
    2604,  2606,  1320,  2605,  2609,  1329,  2167,  -619,  2607,  2608,
    9612,  -619,  2614,  2615,  9657,  9702,  2617,  2118,  2189,  2613,
    -619,  2195,  2618,  1335,  -619,  2619,  -619,  -619,  -619,  2621,
    -619,  9747,  2624,  2217,  2221,  2625,  -619,  2228,  2626,  1340,
    -619,  2628,  2277,  2627,  1346,  -619,  2633,  2173,  2636, 17733,
    -619,  -619,  2637,  2640,  9792,  2642,  9837,  9882,  2644,  -619,
    2645,  2646,  9927,  2647,  9972, 10017,  2649, 10062,  2650,  2651,
    2648,  2653, 10107, 10152,  2652,  2654, 10197, 10242,  2658, 10287,
    2659,  2661,  2660,  2662, 10332, 10377,  2664, 10422,  2666,  2667,
    2663,  2669,  2665,  1361, 10467,  2671,  2672,  2668,  -619,  2673,
   10512, 10557,  2675, 10602,  2676,  2678,  2677,  2679, 10647, 10692,
    2681, 10737,  2683,  2684,  2680,  2686,  2685,  1362, 10782,  2688,
    2689,  2687, 10827,  2691,  2693,  2690,  2699,  2695,  1395, 10872,
    2701,  2703,  2702,  2704,  2706,  1396,  2183,  2708,  2711,  1413,
    -619,  -619,  -619,  2705,  -619,  -619,  2718,  2719, 10917,  2720,
   10962, 11007,  2722,  2730, 11052, 11097,  2732, 11142,  2733,  2735,
    2731,  -619,  -619,  -619,  2736,  2737, 11187,  2738, 11232, 11277,
    2746,  2747, 11322, 11367,  2749, 11412,  2750,  2309,  2752, 11457,
   11502,  2751, 11547,  2754,  2755,  2756, 11592,  2757,  2760,  2758,
    2762,  2759,  1414,  -619,  -619,  2764,  -619,  -619,  2765,  2766,
   11637, 11682,  2769, 11727,  2770,  2324, 11772,  2771,  2325,  2329,
    2767,  -619,  -619,  2772, 11817, 11862,  2774, 11907,  2775,  2361,
   11952,  2776,  2370,  2391,  2773,  -619, 11997,  2777,  2403,  2406,
    2778,  -619,  2407,  2779,  1426,  -619,  2785,  -619,  -619,  2790,
    -619,  2791,  2792, 12042,  -619,  -619,  2800,  -619,  2803,  2804,
   12087,  2805, 12132, 12177,  2780,  -619,  2806,  2807, 12222,  -619,
    2816,  2817, 12267,  2818, 12312, 12357,  2820,  -619,  2821,  2822,
   12402,  2823, 12447, 12492,  2828, 12537,  2831,  2835,  2832,  2839,
   12582, 12627,  2836,  -619,  2840,  2841, 12672,  2842, 12717, 12762,
    2844,  -619,  2845,  2846, 12807,  2847, 12852, 12897,  2849, 12942,
    2850,  2851,  2852,  2853, 12987, 13032,  2860,  2862, 13077, 13122,
    2861, 13167,  2864,  2865,  2867,  2866, 13212, 13257,  2869, 13302,
    2873,  2876,  2872,  2879,  2875,  1430, 13347,  2881,  2885,  2882,
    -619,  -619,  -619,  2888,  -619,  2889,  2891, 13392,  -619,  2892,
    2893, 13437,  2894, 13482, 13527,  2886,  -619,  -619,  2895,  -619,
    2896,  2897, 13572,  -619,  2898,  2900, 13617,  2901, 13662, 13707,
    2906,  -619,  2907,  2908, 13752,  2909, 13797, 13842,  2911,  2912,
   13887, 13932,  2914, 13977,  2915,  2916,  2902,  -619,  -619,  -619,
    2918,  2919, 14022,  2920, 14067, 14112,  2917,  2921, 14157, 14202,
    2924, 14247,  2925,  2421,  -619,  2926,  2927, 14292,  2928, 14337,
   14382,  2930,  2932, 14427, 14472,  2931, 14517,  2934,  2454,  2935,
   14562, 14607,  2937, 14652,  2938,  2480, 14697,  2939,  2483,  2486,
    2936,  -619,  -619,  -619,  -619,  2941,  -619,  -619,  -619,  2952,
    -619,  2953,  2954, 14742,  -619,  -619,  2955,  -619,  -619,  2957,
    -619,  2958,  2959, 14787,  -619,  -619,  2960,  -619,  2961,  2962,
   14832,  2963, 14877, 14922,  2940,  -619,  2964,  2965, 14967,  -619,
    -619,  2966,  -619,  2967,  2969, 15012,  -619,  -619,  2971,  -619,
    2972,  2973, 15057,  2981, 15102, 15147,  2985,  -619,  2986,  2996,
   15192,  -619,  2997,  2998, 15237,  2999, 15282, 15327,  3001,  -619,
    3002,  3003, 15372,  3004, 15417, 15462,  3009, 15507,  3014,  3015,
    3016,  3018, 15552, 15597,  3020,  -619,  -619,  -619,  3021,  -619,
    -619,  3022,  -619,  3023,  3024, 15642,  -619,  -619,  -619,  3025,
    -619,  -619,  3026,  -619,  3027,  3028, 15687,  -619,  -619,  3029,
    -619,  3030,  3031, 15732,  -619,  3032,  3034, 15777,  3035, 15822,
   15867,  3037,  -619,  -619,  3038,  -619,  3039,  3040, 15912,  -619,
    3041,  3042, 15957,  3043, 16002, 16047,  3047,  -619,  -619,  3050,
    -619,  3053,  3054, 16092,  -619,  3055,  3056, 16137,  3057, 16182,
   16227,  3048,  -619,  3058,  3060, 16272,  3061, 16317, 16362,  3065,
    3066, 16407, 16452,  3068, 16497,  3074,  2487,  -619,  -619,  -619,
    -619,  3075,  -619,  -619,  -619,  -619,  3076,  -619,  -619,  -619,
    3077,  -619,  3078,  3079, 16542,  -619,  -619,  3080,  -619,  -619,
    -619,  3082,  -619,  -619,  -619,  3083,  -619,  3084,  3088, 16587,
    -619,  -619,  3089,  -619,  -619,  3090,  -619,  3091,  3092, 16632,
    -619,  -619,  3093,  -619,  3094,  3095, 16677,  3096, 16722, 16767,
    3098,  -619,  3100,  3101, 16812,  -619,  -619,  -619,  -619,  3102,
    -619,  -619,  -619,  -619,  3104,  -619,  -619,  -619,  3105,  -619,
    -619,  3106,  -619,  3107,  3108, 16857,  -619,  -619,  -619,  3110,
    -619,  -619,  3111,  -619,  3113,  3114, 16902,  -619,  -619,  -619,
    3115,  -619,  -619,  3117,  -619,  3118,  3120, 16947,  -619,  -619,
    3123,  -619,  3124,  3125, 16992,  -619,  3127,  3128, 17037,  3129,
   17082, 17127,  3133,  -619,  -619,  -619,  -619,  -619,  3137,  -619,
    -619,  -619,  -619,  -619,  3140,  -619,  -619,  -619,  -619,  3141,
    -619,  -619,  -619,  3142,  -619,  3153,  3154, 17172,  -619,  -619,
    3155,  -619,  -619,  -619,  -619,  -619,  -619,  3156,  -619,  -619,
    -619,  -619,  3157,  -619,  -619,  -619,  -619,  3158,  -619,  -619,
    -619,  3159,  -619,  -619,  3160,  -619,  3166,  3167, 17217,  -619,
    -619,  -619,  -619,  -619,  -619,  3169,  -619,  -619,  -619,  -619,
    -619,  -619,  -619,  -619,  3171,  -619,  -619
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
     339,   606,     0,   588,   336,   605,     0,   587,     0,     0,
     586,     0,     0,     0,   607,     0,     0,     0,    32,   585,
       0,     2,     3,     4,   339,    31,    33,    30,    29,    26,
      27,    28,    24,    25,    22,    23,    21,    19,    20,    18,
      17,   156,   155,    15,    14,     0,    13,     7,     9,     8,
      11,     0,   604,    10,    12,     0,   564,   567,   570,     0,
       0,   604,   588,   586,   604,   585,     0,   308,   337,     0,
     338,   168,     0,   166,   154,   339,   604,     0,   614,   615,
     616,   135,   138,   141,   151,   618,   617,   153,   619,   604,
       0,     0,     0,     0,   339,   339,     0,     0,     0,     0,
      42,     1,     5,   172,   604,     0,     0,     0,     0,     0,
     335,     0,     0,    16,    44,    45,    46,    47,    48,   136,
     137,     0,     0,   565,     0,     0,     0,   571,   570,   575,
     574,   572,   573,   205,   207,   602,   600,   598,   603,     0,
       0,     0,    99,   290,     0,   295,   604,   604,   339,     0,
     164,   201,     0,     0,     0,   613,   138,     0,   196,   197,
     199,     0,   612,   150,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   199,   339,     0,     0,     0,    53,
       0,     0,     0,     0,   517,   518,     0,     0,     0,     0,
       0,    40,     0,   171,   170,   175,   176,   187,     0,   289,
       0,   334,     0,   553,   604,     0,     0,   557,   604,     0,
       0,     0,   203,    43,   579,   584,   583,   578,   580,   581,
     582,   577,   567,   570,     0,   576,     0,   592,     0,   595,
       0,   569,     0,     0,   601,   599,     0,     0,     0,     0,
     604,    97,   294,   296,     0,     0,     0,   102,     0,     0,
       0,   167,     0,   166,   193,   339,     0,   152,     0,     0,
     604,   194,   200,   198,   621,     0,     0,   610,   139,   140,
     144,   145,   146,   147,   148,   149,   143,   142,   160,     0,
     162,     0,     0,     0,     0,    52,     0,   513,     0,     0,
     514,   517,     0,     0,   339,     0,     0,     0,    42,     0,
     186,     0,   169,     0,   173,     0,     0,     0,     0,   604,
       0,   333,   497,   498,   604,   339,     0,    96,     0,    34,
     556,     0,     0,     0,   604,     0,   566,   568,   597,   596,
     591,     0,   593,   590,     0,   204,   609,     0,   604,     0,
       0,     0,    99,     0,     0,   292,   339,     0,     0,     0,
     604,   100,   339,     0,     0,     0,   163,   165,     0,   339,
     339,     0,   196,   620,   612,     0,     0,   157,   339,   339,
       0,    39,   512,   517,   516,     0,   532,     0,   530,   520,
     531,     0,   527,     0,   339,   339,     0,    41,     0,     0,
       0,   185,     0,   175,     0,   604,   499,   500,   501,   510,
     588,     0,   339,   339,     0,   494,   495,   496,   373,   367,
       0,     0,     0,   340,   604,   344,   345,   346,   348,   347,
     343,   604,     0,   604,     0,   331,   604,     0,   552,     0,
     551,     0,   335,     0,   339,   339,   604,    94,   326,   325,
       0,   556,   561,   562,     0,   604,     0,   604,   339,     0,
     202,   595,   589,   608,   206,     0,     0,     0,   604,   604,
       0,    98,     0,   305,   293,     0,   307,     0,   339,   339,
       0,   102,     0,   339,   339,     0,   192,     0,     0,   339,
     195,   611,     0,   161,     0,     0,     0,   339,   515,     0,
       0,     0,   528,   519,     0,   525,     0,     0,     0,   339,
       0,     0,     0,     0,     0,   183,     0,   174,     0,   604,
       0,     0,     0,   604,   369,   363,   339,   371,   365,   604,
       0,   372,   366,   604,     0,   330,   341,     0,     0,     0,
       0,     0,   360,   361,     0,   333,   339,     0,   288,   604,
     604,     0,   604,   549,   604,     0,     0,   604,     0,     0,
       0,   335,     0,   339,    96,   554,   555,   560,     0,   604,
       0,   604,   604,     0,     0,     0,   339,   339,   594,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   604,
       0,   301,   291,   122,     0,     0,   339,   101,   134,     0,
       0,   339,   191,   190,     0,     0,     0,    49,    50,     0,
     524,     0,     0,   530,   527,    38,     0,     0,     0,     0,
       0,     0,     0,   185,   178,   177,   339,     0,   604,   604,
       0,     0,   511,   502,     0,     0,   368,   362,   370,   364,
       0,     0,     0,   604,     0,     0,     0,   604,   604,   604,
       0,   604,     0,   358,   356,   352,     0,   329,   332,     0,
     339,   339,     0,   339,     0,   604,   551,     0,     0,     0,
     604,   604,     0,     0,   604,     0,   604,     0,     0,   604,
       0,     0,    95,   559,   563,   604,     0,     0,   328,     0,
     339,     0,   604,   604,     0,   604,     0,     0,     0,   339,
       0,   339,   339,     0,   339,     0,     0,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   304,   306,
     121,   120,     0,   133,   132,     0,   189,   339,   339,    51,
     523,   522,     0,   529,   526,    37,    36,     0,   182,     0,
       0,     0,   184,     0,   339,   339,     0,   339,     0,   604,
     506,     0,     0,   509,     0,     0,     0,     0,   339,     0,
       0,     0,     0,     0,     0,   339,     0,     0,     0,   339,
       0,     0,     0,     0,     0,     0,   604,     0,     0,     0,
     604,   354,   350,     0,   359,   548,     0,     0,   339,     0,
     339,   339,     0,   550,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   604,     0,     0,     0,     0,
       0,     0,   604,   604,     0,     0,   604,     0,   558,   339,
       0,   604,   604,     0,   327,     0,   339,   339,     0,   339,
       0,   604,     0,     0,   604,     0,   604,     0,     0,   118,
       0,     0,   339,     0,   339,   339,     0,     0,   339,   339,
       0,   339,     0,     0,     0,   300,     0,     0,     0,     0,
     302,   119,   131,     0,     0,   521,    35,   181,   180,     0,
     287,     0,     0,   339,     0,   339,   339,     0,   505,   504,
       0,     0,   507,   604,     0,   604,     0,     0,     0,     0,
       0,     0,   339,   339,     0,   339,     0,     0,     0,     0,
     339,   339,     0,     0,   339,   339,     0,     0,     0,     0,
     339,     0,     0,     0,     0,     0,     0,   339,     0,     0,
       0,   339,     0,   357,   355,   351,   547,   546,     0,   544,
       0,     0,   339,   604,     0,     0,     0,   339,     0,     0,
       0,   339,     0,     0,     0,   604,     0,   604,     0,   604,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   604,     0,     0,     0,     0,   339,   339,     0,
     339,     0,   604,   540,     0,     0,   339,     0,   339,   339,
       0,     0,   604,     0,     0,     0,     0,     0,   604,     0,
     117,   116,     0,   114,     0,     0,   339,   110,     0,     0,
     339,     0,   339,   339,     0,   299,   298,     0,   304,   158,
     159,   179,   286,   285,     0,   283,     0,     0,   339,   503,
     509,     0,     0,     0,   604,     0,     0,     0,   604,     0,
     604,   604,     0,   604,     0,     0,   493,     0,     0,   339,
       0,   339,   339,     0,   477,     0,     0,   339,     0,     0,
     339,   604,     0,   604,     0,     0,     0,     0,     0,     0,
     339,   339,     0,   339,     0,     0,     0,     0,   339,   339,
       0,     0,   339,   339,   353,   349,   545,   543,   542,     0,
       0,     0,     0,   604,   604,     0,     0,   339,   339,     0,
       0,   339,   339,     0,   604,     0,     0,   324,     0,   604,
       0,   604,   604,     0,     0,     0,   339,     0,     0,     0,
     339,     0,     0,     0,   604,     0,   604,     0,   604,     0,
     279,     0,     0,   339,     0,   339,   339,     0,   539,   538,
       0,   536,     0,     0,   339,   604,     0,   604,     0,   604,
       0,     0,   604,     0,     0,     0,   115,   113,   112,     0,
     109,   108,     0,   106,     0,     0,   339,   297,   303,   284,
     282,   281,     0,   508,   339,     0,     0,     0,     0,     0,
       0,   339,     0,     0,     0,     0,     0,     0,   604,     0,
       0,     0,     0,     0,     0,   604,     0,     0,     0,   604,
       0,   604,   492,   491,     0,   489,     0,     0,   339,   476,
     475,     0,     0,     0,     0,     0,   604,     0,     0,     0,
     604,     0,   604,   604,     0,   604,     0,     0,   485,     0,
       0,   339,     0,   339,   339,     0,   473,     0,     0,   339,
       0,     0,   339,   541,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   604,    93,     0,     0,   339,   130,
       0,     0,   339,   339,     0,   604,   604,     0,   323,   604,
       0,     0,   322,     0,     0,     0,     0,   604,   604,     0,
       0,   339,   339,     0,     0,   339,   339,     0,   604,     0,
       0,   320,     0,   604,     0,   604,   278,   277,     0,   275,
       0,     0,   339,   537,   535,   534,     0,   604,     0,     0,
     316,     0,   604,     0,   604,   604,     0,   604,     0,   604,
       0,   111,   107,   105,   104,     0,   280,     0,   339,   339,
       0,   339,     0,     0,     0,     0,   339,   339,     0,   339,
       0,     0,     0,     0,     0,     0,   339,     0,     0,     0,
     339,     0,     0,     0,     0,     0,     0,   339,     0,     0,
       0,     0,     0,     0,   604,     0,     0,     0,   490,   488,
     487,     0,   474,   339,     0,     0,     0,     0,     0,     0,
     339,     0,     0,     0,     0,     0,     0,   604,     0,     0,
       0,     0,     0,     0,   604,     0,     0,     0,   604,     0,
     604,   484,   483,     0,   481,     0,     0,   339,   472,   471,
       0,     0,     0,   339,   339,     0,   339,     0,     0,     0,
     339,     0,     0,     0,     0,     0,     0,    92,    91,     0,
     129,   128,     0,     0,   339,   339,     0,   339,     0,   604,
     339,     0,   604,   604,     0,   321,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   604,    73,     0,     0,
     339,   126,     0,     0,   339,   339,     0,   604,   604,     0,
     319,   604,     0,     0,   318,     0,   276,   274,   273,     0,
     533,   339,     0,   604,   604,     0,   315,   604,     0,     0,
     314,     0,   604,     0,     0,   312,     0,   604,     0,   604,
     103,   469,     0,     0,   339,     0,   339,   339,     0,   405,
       0,     0,   339,     0,   339,   339,     0,   339,     0,     0,
       0,     0,   339,   339,     0,     0,   339,   339,     0,   339,
       0,     0,     0,     0,   339,   339,     0,   339,     0,     0,
       0,     0,     0,     0,   339,     0,     0,     0,   486,     0,
     339,   339,     0,   339,     0,     0,     0,     0,   339,   339,
       0,   339,     0,     0,     0,     0,     0,     0,   339,     0,
       0,     0,   339,     0,     0,     0,     0,     0,     0,   339,
       0,     0,     0,     0,     0,     0,   604,     0,     0,     0,
     482,   480,   479,     0,   470,    89,     0,     0,   339,     0,
     339,   339,     0,     0,   339,   339,     0,   339,     0,     0,
       0,    90,   127,   271,     0,     0,   339,     0,   339,   339,
       0,     0,   339,   339,     0,   339,     0,   604,     0,   339,
     339,     0,   339,     0,     0,     0,   339,     0,     0,     0,
       0,     0,     0,    72,    71,     0,   125,   124,     0,     0,
     339,   339,     0,   339,     0,   604,   339,     0,   604,   604,
       0,   317,   272,     0,   339,   339,     0,   339,     0,   604,
     339,     0,   604,   604,     0,   313,   339,     0,   604,   604,
       0,   311,   604,     0,     0,   310,     0,   468,   467,     0,
     465,     0,     0,   339,   404,   403,     0,   461,     0,     0,
     339,     0,   339,   339,     0,   401,     0,     0,   339,   453,
       0,     0,   339,     0,   339,   339,     0,   397,     0,     0,
     339,     0,   339,   339,     0,   339,     0,     0,     0,     0,
     339,   339,     0,   437,     0,     0,   339,     0,   339,   339,
       0,   389,     0,     0,   339,     0,   339,   339,     0,   339,
       0,     0,     0,     0,   339,   339,     0,     0,   339,   339,
       0,   339,     0,     0,     0,     0,   339,   339,     0,   339,
       0,     0,     0,     0,     0,     0,   339,     0,     0,     0,
     478,    88,    87,     0,    85,     0,     0,   339,    81,     0,
       0,   339,     0,   339,   339,     0,   270,   269,     0,   267,
       0,     0,   339,   263,     0,     0,   339,     0,   339,   339,
       0,    69,     0,     0,   339,     0,   339,   339,     0,     0,
     339,   339,     0,   339,     0,     0,     0,    70,   123,   255,
       0,     0,   339,     0,   339,   339,     0,     0,   339,   339,
       0,   339,     0,   604,   239,     0,     0,   339,     0,   339,
     339,     0,     0,   339,   339,     0,   339,     0,   604,     0,
     339,   339,     0,   339,     0,   604,   339,     0,   604,   604,
       0,   309,   466,   464,   463,     0,   402,   460,   459,     0,
     457,     0,     0,   339,   400,   399,     0,   452,   451,     0,
     449,     0,     0,   339,   396,   395,     0,   445,     0,     0,
     339,     0,   339,   339,     0,   393,     0,     0,   339,   436,
     435,     0,   433,     0,     0,   339,   388,   387,     0,   429,
       0,     0,   339,     0,   339,   339,     0,   385,     0,     0,
     339,   421,     0,     0,   339,     0,   339,   339,     0,   381,
       0,     0,   339,     0,   339,   339,     0,   339,     0,     0,
       0,     0,   339,   339,     0,    86,    84,    83,     0,    80,
      79,     0,    77,     0,     0,   339,   268,   266,   265,     0,
     262,   261,     0,   259,     0,     0,   339,    68,    67,     0,
      65,     0,     0,   339,    61,     0,     0,   339,     0,   339,
     339,     0,   254,   253,     0,   251,     0,     0,   339,   247,
       0,     0,   339,     0,   339,   339,     0,   238,   237,     0,
     235,     0,     0,   339,   231,     0,     0,   339,     0,   339,
     339,     0,   223,     0,     0,   339,     0,   339,   339,     0,
       0,   339,   339,     0,   339,     0,   604,   462,   458,   456,
     455,     0,   398,   450,   448,   447,     0,   394,   444,   443,
       0,   441,     0,     0,   339,   392,   391,     0,   434,   432,
     431,     0,   386,   428,   427,     0,   425,     0,     0,   339,
     384,   383,     0,   420,   419,     0,   417,     0,     0,   339,
     380,   379,     0,   413,     0,     0,   339,     0,   339,   339,
       0,   377,     0,     0,   339,    82,    78,    76,    75,     0,
     264,   260,   258,   257,     0,    66,    64,    63,     0,    60,
      59,     0,    57,     0,     0,   339,   252,   250,   249,     0,
     246,   245,     0,   243,     0,     0,   339,   236,   234,   233,
       0,   230,   229,     0,   227,     0,     0,   339,   222,   221,
       0,   219,     0,     0,   339,   215,     0,     0,   339,     0,
     339,   339,     0,   454,   446,   442,   440,   439,     0,   390,
     430,   426,   424,   423,     0,   382,   418,   416,   415,     0,
     378,   412,   411,     0,   409,     0,     0,   339,   376,   375,
       0,    74,   256,    62,    58,    56,    55,     0,   248,   244,
     242,   241,     0,   232,   228,   226,   225,     0,   220,   218,
     217,     0,   214,   213,     0,   211,     0,     0,   339,   438,
     422,   414,   410,   408,   407,     0,   374,    54,   240,   224,
     216,   212,   210,   209,     0,   406,   208
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
    -619,  -619,  -619,    63,  2500,  -619,  -619,  -619,  -619,  -619,
    2368,  -619,  -619,  -619,  -619,  -619,  -346,  -619,  -318,  2105,
    -531,  2285,  2634,  2214,  -619,  -619,  -619,  -619,  -619,  -619,
      99,    50,   622,    -7,  -619,  -619,  -619,  -619,  -619,  2453,
     196,  -619,  -619,  2632,  -619,  2712,  -619,  -619,  2573,  2723,
    -619,  2293,  -270,  -383,  -619,  -619,  -619,  2530,  2692,  -619,
    -619,  -239,  -619,  2942,  2863,  -291,  -231,  1451,   -94,  2802,
     -59,  -619,  -619,  -619,  -619,  2117,  -619,  2354,   668,   780,
    -619,  2670,  -619,  -619,  2899,  2682,   643,   -48,  -292,  2801,
    -619,  -619,  2694,  -619,  -619,  -619,  -619,  -619,  -422,  -619,
    -619,  -619,  -619,  2206,  -619,  -618,  -301,  -619,  -266,   -89,
    -474,  2610,  -619,  2616,  2724,  2729,  -619,  2781,  2566,  2696,
    3017,  -619,  2783,  -619,  -619,  -619,  -619,  2819,  -619,  3007,
    -619,  -108,  -619,  -619,  -619,  -619,   -85,  -619,  -619,  2784,
    -619,  -619,   -52,  3165,  -619,  -324,    54,  2868,  -247,  -619,
    -619
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,    20,    21,   466,    23,    24,    25,    26,    27,    99,
     191,    28,   121,    29,    30,    31,   180,    32,   316,   437,
     141,   241,   246,   351,    33,    34,    35,    36,    37,    38,
     155,    82,    83,    84,    39,    40,    41,    42,   279,   482,
     281,    43,    72,   150,   252,    73,    44,   194,   304,   195,
     390,   505,   301,   196,    45,    85,   157,   261,   158,   159,
     263,   152,    46,   234,   133,    47,    48,   537,   538,   142,
     247,   144,   242,   345,   707,   850,   462,   708,   467,    66,
      49,   317,   439,    50,   310,   425,   410,    51,   412,   413,
     414,   415,   532,   416,   417,   418,   419,   420,   311,   312,
     396,   313,   742,   872,   398,   623,    52,   183,   290,   291,
     381,   495,   377,   492,   382,   378,    53,   429,   543,   430,
     202,    54,   440,   206,   441,   442,   673,    55,    56,   123,
     222,   127,    57,   128,   129,   223,    58,   130,   230,   332,
     131,   132,    59,    60,    61,   335,   336,   267,   162,    87,
      88
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     112,   450,   535,   743,   111,   143,   449,   184,   421,   506,
     198,   185,   145,   659,   434,   601,   358,   557,   408,   364,
     231,   203,   485,   486,   160,   374,  -335,  -335,   558,   391,
      62,  -335,    68,    62,    62,    62,  -335,   174,     7,     1,
       1,     7,     7,     7,    71,    62,    63,     5,     5,    63,
      63,    63,   199,     7,  -335,   299,   744,   110,   621,     4,
      93,    63,   365,    22,    14,    14,   192,    16,    97,    70,
     163,    98,   193,    94,   536,   307,   308,    75,   409,    76,
     153,   300,    62,   154,   622,   366,   135,   136,    65,    16,
       7,    65,    65,    65,   145,   145,    77,   464,    63,   185,
     104,   516,   516,    65,    78,    79,    80,   488,    81,    90,
     524,   514,   517,   421,   321,   327,    95,   609,   483,   483,
     477,   478,   421,   408,   508,   203,   156,   343,   722,    62,
     161,   534,   408,    91,   553,   801,   208,     7,   151,   156,
      65,   599,   344,   161,   421,    63,   642,   566,   188,    92,
     388,   189,   318,   560,   408,   389,   199,   179,   181,   270,
     271,   272,   273,   274,   275,   276,   277,   289,    62,     1,
     238,   515,   518,   239,     1,   300,     7,     5,     1,   914,
     915,   143,     5,   409,    63,    62,     5,    65,   145,    62,
     176,   177,   409,     7,    14,   625,   164,     7,   165,    14,
     373,    63,    64,    14,   185,    63,   185,    96,   160,   139,
     214,   251,   140,   215,   409,   257,   315,    75,   582,    76,
     213,   216,   182,   224,   226,   229,    65,   729,   730,   217,
     218,   219,   220,   164,   613,   165,    77,   502,   280,  -188,
     594,   796,   503,    65,    78,    79,    80,    65,    62,   208,
     209,   547,   548,  1010,   210,   428,     7,   422,   740,   211,
     421,   411,   145,   741,    63,     1,   689,   433,   101,   679,
     408,   221,   318,     5,     1,  -339,    62,   284,   103,   400,
     192,     4,     5,   622,     7,   527,   145,     7,   185,   122,
      14,   471,    63,    62,    62,    63,   146,   878,   145,    14,
     528,     7,     7,   448,     1,    62,    65,   147,    16,    63,
      63,   674,     5,     7,   896,  1046,     1,   148,   151,   760,
     762,    63,   774,   746,     5,    16,    16,   149,   580,    14,
     409,   581,   337,   709,    65,   431,   432,    65,     4,   519,
     175,    14,     1,   145,   244,    62,   258,   245,   859,   259,
       5,    65,    65,     7,   411,   411,   248,   383,   178,   249,
     847,    63,   422,    65,     1,   848,   411,    14,    16,   531,
     186,   422,     5,   530,   199,   411,   940,     1,   264,   544,
     624,   265,    62,   953,   318,     5,   549,   552,   428,    14,
       7,   376,   380,   422,   187,   145,    62,   411,    63,   616,
     565,   973,    14,    65,     7,    62,   145,   145,   664,   665,
     869,    62,    63,     7,    75,   870,    76,   153,   190,     7,
     154,    63,   151,   151,  1064,  1065,   333,    63,    62,   334,
     451,   179,   179,    77,   669,   670,     7,    75,   225,    76,
      65,    78,    79,    80,    63,   639,   880,   497,   498,   913,
     685,   686,   912,   662,    65,   204,    77,   199,   894,   205,
     898,   318,   666,    65,    78,    79,    80,   145,   530,    65,
      68,   145,   644,   645,     1,   550,   551,   233,     4,   771,
     772,    62,     5,   428,   646,   143,    65,   199,   199,     7,
     145,   773,   145,   348,   421,   199,   349,    63,    62,    14,
      68,   232,   876,   936,   408,   671,     7,   145,    16,   422,
     199,  -335,   759,   411,    63,     1,  -339,    68,   687,   688,
     400,  -335,     4,     5,     1,   237,   401,   145,     7,   240,
     402,   403,     5,  1109,   354,     1,    63,   355,   254,    65,
      14,   404,   151,     5,   255,   405,   406,   407,   256,    14,
     179,  -342,    16,  1130,   260,  1133,    65,     1,   262,   651,
      14,    62,   608,   266,   409,     5,   199,   199,   278,     7,
     797,     1,   110,   761,     4,   804,     1,    63,    65,     5,
    -200,   145,    14,  -200,     5,   318,   318,   145,   380,   145,
     376,   822,   282,   380,  1040,   873,    14,   426,  1048,   283,
     427,    14,   709,   199,   285,    62,   653,   143,   145,   145,
    1062,   680,   199,     7,   145,   806,   807,   199,    62,    65,
     292,    63,   293,   199,     1,   124,     7,   125,   294,   126,
     199,   199,     5,   199,    63,   286,   421,    75,   421,    76,
     227,   828,   287,   228,   288,  1088,   408,  1090,   408,    14,
      75,   421,    76,   379,   295,   124,    77,   125,   296,   126,
    1105,   408,   911,    65,    78,    79,    80,   314,   124,    77,
     125,   421,   126,   824,   825,    62,    65,    78,    79,    80,
    1126,   408,    62,     7,    62,   297,    62,   199,    62,   302,
       7,    63,     7,   303,     7,   305,     7,   319,    63,   320,
      63,   380,    63,   324,    63,  1024,   409,    75,   409,    76,
     600,   893,   954,  1300,   145,    62,  1018,   325,   318,   331,
    1021,   409,  1041,     7,   540,   571,    77,   541,   572,   328,
     974,    63,   976,    65,    78,    79,    80,    62,   826,   827,
      65,   409,    65,   422,    65,     7,    65,   411,   200,  1179,
     145,   145,   329,    63,   199,    62,   978,   979,  1044,   199,
     199,   619,  1222,     7,   620,   683,   330,   696,   684,   199,
     697,    63,   199,    65,   199,   700,   750,   338,   701,   751,
     280,   280,   341,    69,     1,    62,   268,   269,   757,  1200,
     421,   758,     5,     7,   786,    65,   346,   787,   347,  1253,
     408,    63,   350,   812,    62,   421,   813,   421,   843,    14,
     352,   844,     7,    65,  1272,   408,  1274,   408,   353,  1203,
      63,   145,   356,   145,   455,  1206,   421,   456,   421,   887,
     902,   421,   888,   903,    62,  1291,   408,  1293,   408,   359,
    1296,   408,     7,    65,   360,    62,  1038,  1039,    62,   361,
      63,   909,   322,     7,   910,   929,     7,   363,   930,   367,
     409,    63,    65,  1061,    63,   368,    75,   933,    76,   369,
     934,   145,   370,   943,   371,   409,   944,   409,   384,  1378,
      75,   705,    76,   145,  1134,   422,   706,   422,   372,   411,
     385,   411,    65,    78,    79,    80,   409,   190,   409,    77,
     422,   409,  1055,    65,   411,  1056,    65,    78,    79,    80,
     199,   104,   105,   853,   854,  1098,   106,     1,  1099,   236,
     422,   107,     1,  -339,   411,     5,   199,   400,  1102,     4,
       5,  1103,   386,   401,   392,     7,     1,   402,   403,   108,
     394,   395,    14,    63,     5,   435,  1156,    14,   404,  1157,
     423,   424,   405,   406,   407,     1,   436,   509,  -342,    16,
     510,    14,   145,     5,  1163,    62,   145,  1164,   145,   145,
     447,   145,  1226,     7,   421,  1227,   562,   438,   306,   563,
      14,    63,   452,  1455,   408,    65,   453,     1,   454,   145,
     735,   145,  1192,   421,   240,     5,   421,    75,   421,    76,
     721,  1246,  1471,   408,  1247,  1476,   408,  1478,   408,   468,
    1313,     1,    14,  1314,  1220,  1221,    77,   339,   340,     5,
     472,   145,   145,    65,    78,    79,    80,   573,  1321,   458,
     574,  1322,   199,   459,   465,  1328,    14,   145,  1329,   422,
     145,   469,     1,   411,   409,  1332,   737,   520,  1333,   470,
       5,     1,   145,   473,   422,   474,   422,   475,   411,     5,
     411,   476,  1339,   409,   529,  1340,   409,    14,   409,  1355,
     479,  1362,  1356,   145,  1363,   422,    14,   422,    -6,   411,
     422,   411,   576,     1,   411,   577,   781,     2,     3,     1,
       4,     5,  -604,  -604,   487,     6,     7,     5,   307,   308,
     309,   444,     8,     9,    10,    11,    12,    13,    14,  1398,
    1402,   260,  1399,  1403,    14,   266,   145,   489,    15,   490,
      16,   460,    17,   145,   809,    18,   493,   145,   491,   145,
       1,     1,  1423,   494,   496,  1424,   584,   585,     5,     5,
    1428,   589,   590,  1429,   145,   499,    19,   500,   145,    62,
     145,   145,     1,   145,     1,    14,    14,     7,   501,     1,
       5,     1,     5,   512,   504,    63,   817,     5,   303,     5,
     630,   640,  1448,   631,  1391,  1449,   300,    14,   421,    14,
     513,    75,   145,    89,    14,   521,    14,  1666,   408,   819,
       1,   663,   634,   199,   199,   635,   866,   199,     5,   657,
      77,   522,   658,   523,   649,   145,   145,    65,    78,    79,
      80,   545,   546,   525,  1464,    14,   199,  1465,   539,  1499,
     555,   145,  1500,   422,   542,  1511,  1519,   411,  1512,  1520,
     675,     1,   559,   676,   561,   199,     1,   690,  1526,     5,
     145,  1527,   422,   145,     5,   422,   411,   422,   409,   411,
    1535,   411,   567,  1536,   712,     1,    14,     1,  -339,   715,
     331,    14,   400,     5,     4,     5,  1543,   745,   401,  1544,
       7,   702,   402,   403,   703,   569,   752,     1,    63,   753,
      14,   570,    14,   404,   733,     5,   579,   405,   406,   407,
     583,    62,   145,  -342,    16,   763,   350,   586,   764,     7,
    1550,  1554,    14,  1551,  1555,   588,   592,    63,   798,     1,
     591,  1561,   958,   805,  1562,   145,   593,     5,   776,   777,
      65,   779,   145,    75,   375,    76,   145,   595,   145,   823,
     667,   668,     1,     1,    14,   307,   308,   445,     1,     1,
       5,     5,    77,   596,   960,   602,     5,     5,   815,    65,
      78,    79,    80,  1589,   597,   598,  1590,    14,    14,   830,
     831,   606,   833,    14,    14,  1614,   837,   199,  1615,   607,
     199,   199,   767,   788,  1618,   768,   789,  1619,   791,   799,
    1639,   792,   800,  1640,   145,  1653,   605,   874,  1654,   877,
     879,  1659,     1,     1,  1660,   199,   199,   610,   611,   199,
       5,     5,   861,   862,   897,   864,  1707,  1731,   612,  1708,
    1732,   199,   199,     1,     1,   199,   881,    14,    14,   614,
     199,     5,     5,   889,   615,   145,     1,   422,   307,   308,
     795,   411,   904,   945,     5,   905,   946,   784,    14,    14,
    1743,  1751,   794,  1744,  1752,   618,   918,   626,   920,   921,
     955,    14,   627,   948,  1011,     1,   949,  1012,  1758,  1805,
     628,  1759,  1806,     5,     1,     1,  1015,   629,   975,  1016,
     977,  1849,     5,     5,  1850,  1929,   633,   956,  1930,   637,
      14,   307,   308,   939,   964,   965,     1,   967,   638,    14,
      14,   307,   308,   952,     5,  1070,   641,   647,  1071,   969,
     982,   650,   984,   985,   678,  1084,   988,   989,  1085,   991,
     655,    14,   660,   661,   145,   307,   308,   972,   682,  1019,
       1,  1022,     1,  1025,     1,   691,  1158,     1,     5,  1159,
       5,  1004,     5,  1006,  1007,     5,     1,   692,   693,  1042,
     694,  1045,  1047,   695,     5,    14,   698,    14,     1,    14,
    1027,  1028,    14,  1030,   699,   199,     5,  1116,  1035,  1036,
    1165,    14,  1243,  1166,  1169,   924,   925,  1170,  1049,   710,
     711,  1415,   717,    14,   713,  1057,   714,   938,   718,   941,
     307,   308,  1108,   199,   951,   719,   199,   199,  1172,   716,
    1069,  1173,   307,   308,  1129,  1076,   720,   199,   725,  1080,
     199,   199,   971,   726,     1,     1,   199,   199,   727,   728,
     199,   504,     5,     5,   731,   734,     1,   307,   308,  1132,
     747,   739,  1135,   748,     5,  1111,  1112,     1,  1114,    14,
      14,   749,     1,   755,  1120,     5,  1122,  1123,     1,   756,
       5,    14,   766,     1,  1176,  1193,     5,  1177,  1194,   770,
     775,     5,    14,   778,  1139,   780,  1197,    14,  1142,  1198,
    1144,  1145,  1417,    14,   307,   308,  1299,  1180,    14,   542,
     785,   808,  1228,  1420,   802,  1229,  1152,     1,  -339,   803,
     814,   811,   400,  1231,     4,     5,  1232,  1201,   401,  1204,
       7,  1207,   402,   403,   816,   821,   829,  1184,    63,  1186,
    1187,   832,    14,   404,     1,  1191,  1075,   405,   406,   407,
     834,   835,     5,  -342,    16,   849,   838,     1,  1209,  1210,
     836,  1212,  1093,  1094,   839,     5,  1217,  1218,     1,    14,
       1,   840,   841,   842,  1107,   845,     5,   846,     5,   851,
      65,   852,    14,   856,  1249,  1236,  1237,  1250,   855,  1240,
    1241,     1,   857,    14,  1128,    14,  1131,  1254,   858,     5,
    1255,   860,   863,  1445,  1260,   871,   865,   868,  1264,   882,
    1268,   199,   875,  1269,     1,   883,    14,     1,   884,   885,
       1,  1278,     5,  1280,  1281,     5,   199,   886,     5,   890,
     891,  1287,  1286,   199,  1288,   895,   199,   199,   892,    14,
     899,   900,    14,   901,   907,    14,   916,   908,   917,  1461,
     923,   919,   935,   922,  1305,  1599,   926,  1323,    -6,   927,
    1324,   928,  1307,     1,   931,   932,     1,     2,     3,  1315,
       4,     5,  -604,  -604,     5,     6,     7,   937,   942,   957,
     962,   963,     8,     9,    10,    11,    12,    13,    14,  1379,
     966,    14,   968,   994,   980,     1,  1351,   981,    15,    -6,
      16,    -6,    17,     5,     1,    18,  1334,   983,   986,  1335,
     987,   990,     5,   992,   993,  1259,     1,     1,   997,  1383,
      14,  1385,  1386,     1,     5,     5,    19,  1390,     1,    14,
     995,     5,  1392,   996,   999,  1341,     5,  1000,  1342,  1002,
    1001,    14,    14,  1003,  1345,  1005,  1409,  1346,    14,  1008,
    1412,  1413,   622,    14,  1298,  1026,  1357,  1364,  1009,  1358,
    1365,  1014,  1029,  1368,  1020,  1023,  1369,  1031,  1371,  1438,
    1439,  1372,     1,  1442,  1443,  1032,     2,     3,     1,     4,
       5,  -604,  -604,  1033,     6,     7,     5,  1034,  1037,   547,
    1459,     8,     9,    10,    11,    12,    13,    14,     1,  1043,
     617,  1050,  1051,    14,   199,  1052,     5,    15,  1053,    16,
      -6,    17,  1058,  1073,    18,  1054,  1482,  1483,  1375,  1485,
    1059,  1376,  1060,    14,  1490,  1491,  1074,  1493,  1063,  1066,
     652,   654,  1067,  1603,  1501,    19,  1068,  1077,  1505,     1,
       1,     1,  1078,  1079,  1081,  1513,  1082,     5,     5,     5,
       1,  1087,  1083,   681,     2,     3,  1089,     4,     5,  -604,
    -604,  1529,     6,     7,    14,    14,    14,  1091,  1537,     8,
       9,    10,    11,    12,    13,    14,  1092,  1096,  1095,  1404,
    1430,  1433,  1405,  1431,  1434,    15,    -6,    16,  1097,    17,
       1,  1100,    18,  1101,  1104,  1573,  1106,  1113,     5,     1,
    1110,  1576,  1577,  1115,  1579,  1118,     1,     5,  1583,   736,
     738,     1,  1119,    19,     5,    14,  1121,  1124,     1,     5,
    1125,  1127,  1594,  1595,    14,  1597,     5,  1136,  1601,  1137,
    1451,    14,     1,  1452,  1608,  1146,    14,     1,  1138,  1467,
       5,  1605,  1468,    14,  1140,     5,   782,  1147,  1625,  1141,
    1143,  1472,  1628,  1629,  1473,   849,     1,    14,  1521,  1149,
    1150,  1522,    14,     1,     5,  1151,   810,  1155,   871,  1643,
    1154,     5,  1545,   818,   820,  1546,     1,  1556,  1161,  1162,
    1557,    14,   664,  1168,     5,  1175,  1181,  1182,    14,  1183,
    1185,  1189,  1669,  1188,  1671,  1672,  1563,  1190,  1631,  1564,
    1676,    14,  1678,  1679,   669,  1681,  1196,  1202,  1205,  1208,
    1686,  1687,     1,  1211,  1690,  1691,  1567,  1693,     1,  1568,
       5,  1213,  1698,  1699,  1214,  1701,     5,  1215,     1,  1216,
     867,  1219,  1709,   685,     1,  1223,     5,    14,  1714,  1715,
       1,  1717,     5,    14,  1224,  1225,  1722,  1723,     5,  1725,
    1234,  1235,  1620,    14,  1238,  1621,  1733,  1239,  1662,    14,
    1737,  1663,     1,  1245,  1242,    14,     1,  1745,  1753,  1633,
       5,  1754,  1248,     1,     5,  1636,  1257,  1252,  1258,  1261,
    1262,     5,  1263,  1265,  1266,  1273,  1763,    14,  1765,  1766,
    1267,    14,  1769,  1770,  1271,  1772,  1275,  1645,    14,  1276,
    1277,  1647,   959,   961,  1778,  1279,  1780,  1781,  1650,  1282,
    1784,  1785,   970,  1787,  1283,  1284,  1285,  1792,  1793,  1290,
    1795,  1292,     1,  1294,  1799,  1295,  1297,  1310,  1301,  1302,
       5,  1303,  1304,  1306,  1308,     1,  -339,  1309,  1810,  1811,
     400,  1813,     4,     5,  1817,  1311,   401,    14,     7,  1312,
     402,   403,  1825,  1826,     1,  1828,    63,  1656,  1832,  1316,
      14,   404,     5,  1317,  1839,   405,   406,   407,  1344,     1,
       1,  -342,    16,  1318,     1,  1319,  1320,     5,     5,    14,
    1326,  1855,     5,  1327,  1330,  1337,  1331,  1338,  1859,  1789,
    1861,  1862,  1348,  1349,    14,    14,  1866,  1350,    65,    14,
    1869,  1352,  1871,  1872,  1815,  1819,     1,  1353,  1876,  1821,
    1878,  1879,   806,  1881,     5,     1,  1354,  1360,  1886,  1887,
    1361,  1381,  1367,     5,  1891,  1374,  1893,  1894,  1380,  1382,
    1384,    14,  1898,  1387,  1900,  1901,     1,  1903,  1388,  1389,
      14,  1830,  1908,  1909,     5,   824,  1912,  1913,     1,  1915,
    1834,     1,     1,  1117,  1920,  1921,     5,  1923,   826,     5,
       5,    14,  1393,  1394,  1931,  1395,     1,  1396,  1400,  1397,
    1401,  1836,  1414,    14,     5,  1938,    14,    14,  1407,  1941,
    1419,  1943,  1944,  1841,  1436,  1408,  1843,  1846,   978,  1410,
    1949,    14,  1411,  1426,  1952,  1422,  1954,  1955,  1425,     1,
    1427,  1985,  1959,  1437,  1961,  1962,  1440,     5,  1965,  1966,
    1441,  1968,  1444,  1447,  1450,  1454,  1456,  1457,  1458,  1460,
    1974,  1466,  1976,  1977,    14,     1,  1980,  1981,     1,  1983,
    1463,     1,     1,     5,  2000,  1989,     5,  1991,  1992,     5,
       5,  1995,  1996,  1470,  1998,  1475,  1479,  1477,  2003,  2004,
      14,  2006,  1480,    14,  2010,  1481,    14,    14,  1484,  1486,
    2008,  1487,  1488,  2012,   102,  1489,  2014,  2131,  1492,  1494,
    1496,  2021,  1495,  1497,  1502,  1244,  1498,   113,  1503,  1506,
    1504,  2026,  1507,  1509,   114,   115,   116,   117,  2030,   118,
    2032,  2033,   119,  1514,   120,  1508,  2037,  1510,   166,   167,
     168,   169,  1515,  2041,  1516,  1517,   170,  1524,   171,  1518,
    2045,  1525,  2047,  2048,   172,   173,  1528,  1530,  2052,  1531,
    1533,  1532,  2055,  1534,  2057,  2058,  1538,  1539,  1540,  1541,
    2062,  1570,  2064,  2065,  1548,  2067,  1542,  1549,  1552,  1559,
    2072,  2073,  1553,     1,  -339,  -339,   109,  1560,   110,  -339,
       4,     5,  1566,  2079,  -339,  1571,  1572,  1574,  1575,  1578,
    1580,  1581,  1584,  1582,  2084,  1585,  1587,   461,    14,  1586,
    1591,  2088,  1588,  1592,  1593,  2091,  1596,  2093,  2094,  1598,
    1602,  1609,  1607,  1610,  1612,  1616,  2099,  1611,  1623,  1624,
    2102,  1613,  2104,  2105,  1617,  1626,  1627,  1630,  1635,   672,
    1641,  2110,  1642,  1638,  1644,  2113,   387,  2115,  2116,  1655,
    1649,  1652,  1658,  2120,  1661,  2122,  2123,  1665,  1667,  2126,
    2127,  1668,  2129,  1670,  1673,   587,  1674,  1675,  1677,  1680,
    1682,  1683,  1688,  1684,  1685,  1689,  1416,  1418,  1692,  1694,
    1421,  1695,  2138,  1697,  1700,  1696,  1702,  1703,  1704,  1705,
    1706,  1710,  1711,  1712,  1713,  1716,  1718,  2144,  1719,  1446,
    1721,  1724,  1720,  1726,  1727,  1728,  1729,  2149,  1734,  1735,
    1730,  1738,  1736,  1739,  2153,  1740,  2155,  2156,  1462,  1741,
    1742,  1746,  2160,  1747,  1749,     1,  1760,  1748,  1756,     2,
       3,  1750,     4,     5,  -604,  -604,  1757,     6,     7,  1761,
    1762,  1764,  1767,  2167,     8,     9,    10,    11,    12,    13,
      14,  1768,  1771,  1773,  2172,  1774,  1775,  1776,  1777,  1779,
      15,   250,    16,    -6,    17,  2177,  1782,    18,  1783,  1786,
    1788,  1794,  2181,  1791,  1796,  1797,  2184,  1800,  2186,  2187,
    1801,  1798,  1803,  1802,  1804,  1807,  1808,  1809,    19,  1812,
    1814,  1818,  1823,  1824,  1827,  1829,  1833,  1840,  1838,   484,
    1863,    67,    67,  1845,  1848,  2195,  1851,    74,    86,    86,
       1,  1852,  1853,  1854,     2,     3,   100,     4,     5,  -604,
    -604,  1856,     6,     7,  1857,  1858,  1860,  1864,  1865,     8,
       9,    10,    11,    12,    13,    14,  2204,  1867,  1868,  1870,
    1873,   253,  1874,  1875,  1877,    15,    -6,    16,  1880,    17,
    1600,  1882,    18,  1604,  1606,  1883,  1888,  1884,   134,   137,
    1885,  1889,  1890,  1892,  1895,   357,  1896,  1897,  1899,  1902,
    1904,  1905,   480,    19,  1907,    86,    86,  1906,  1632,  1634,
    1910,  1914,  1637,  1911,  1916,  1917,   732,  1919,    86,  1922,
      86,    86,  1918,  1924,  1646,  1648,  1925,  1926,  1651,  1927,
    1928,  1932,   197,  1657,   201,  1933,  1945,  1934,   207,  1935,
    1936,   134,  1937,  1939,  1940,  1942,  1946,  1947,  1948,  1950,
      86,  1951,  1953,    86,    86,    86,  1956,  1971,  1957,  1958,
    1960,  1963,   362,  1964,  1967,  1969,  1970,  1978,    67,  1972,
    1973,  1975,  1979,   243,  1982,  1984,   507,  1987,  1988,  1990,
    1993,  1997,   457,  1994,  1999,   212,  2002,  2005,  2007,  2011,
    2034,  2016,  2017,    86,    86,    86,    86,    86,    86,    86,
      86,    86,    86,  2018,  2019,  2020,  2022,    86,  2023,  2024,
    2025,  2027,  2028,  2029,  2031,  2035,  2036,  2038,  2039,   298,
    2040,     1,  2042,  2043,  2044,     2,     3,    67,     4,     5,
    -604,  -604,  2046,     6,     7,  2049,   393,  2050,   201,   511,
       8,     9,    10,    11,    12,    13,    14,  2051,  2053,  2054,
    2056,  2059,   342,  2060,  2061,  2063,    15,    -6,    16,  2066,
      17,    86,    86,    18,  2068,  2069,    67,    67,  1790,  2071,
    2074,  2070,  2075,  2076,  2077,  2078,  2080,  2081,  2082,  2083,
    2085,  2086,  2087,  2089,    19,  2090,  2092,  2095,   235,  2096,
    2097,  2098,  2100,  2101,  2103,    86,  1816,  2106,  2117,  1820,
    1822,  2107,   575,   578,  2108,  2109,  2111,  2112,  2114,  2118,
    1831,  2119,  2121,  1835,  1837,  2124,   554,  2125,  2128,  1842,
    1844,    86,    86,  1847,  2130,  1148,  2133,  2134,  2135,  2136,
    2137,  2139,   197,  2140,  2141,  2142,   397,   399,   201,  2143,
    2145,  2146,  2147,  2148,  2150,  2151,  2152,  2154,  2157,   443,
      67,  2158,  2159,  2161,    86,  2162,  2163,  2164,  2165,  2166,
      86,  2168,  2169,   632,  2170,  2171,  2173,   636,  2174,  2175,
      67,  2176,   463,    86,  2178,  2179,  2180,     1,  2182,  2183,
    2185,     2,     3,  2188,     4,     5,  -604,  -604,  2189,     6,
       7,  2190,  2191,  2192,    86,    86,     8,     9,    10,    11,
      12,    13,    14,   677,  2193,  2194,  2196,  2197,  2198,  2199,
    2200,  2201,    15,   998,    16,    -6,    17,  2202,  2203,    18,
    2205,   197,  2206,   704,   724,   526,  1153,   648,   604,   723,
     603,   446,   783,   201,   556,   643,   138,   323,   564,   326,
      19,     0,   481,   201,     0,   568,     0,     0,   656,     0,
     201,   533,   201,     0,     0,     0,     0,     0,     0,     0,
      67,    67,     0,     0,     0,     0,     0,     0,     0,     0,
     443,     0,     0,     0,   201,     0,     0,   754,     0,     0,
       0,     0,     0,   765,  1986,   769,     0,     0,     0,     0,
       0,     0,     0,     0,    86,     0,     0,     0,     0,  2001,
       0,     0,     0,     0,   790,   793,  2009,     0,     0,  2013,
    2015,     0,     0,     0,     0,     0,     0,     0,    86,     0,
      86,     0,     0,    86,     0,     0,     1,     0,     0,   197,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,     0,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,     0,     0,   201,     0,     0,
     533,    15,     0,    16,    -6,    17,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,   201,     0,    67,
      67,     0,     0,     0,     0,     0,     0,    86,     0,    19,
     201,     0,     0,     1,     0,     0,     0,     2,     3,     0,
       4,     5,  -604,  -604,     0,     6,     7,     0,     0,    86,
     906,     0,     8,     9,    10,    11,    12,    13,    14,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    15,    -6,
      16,    86,    17,     0,     0,    18,     0,     0,     0,   197,
     197,     0,     0,     0,     0,     0,   947,   950,     0,     0,
       0,     0,     0,   201,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    86,     0,  2132,     0,     0,
       0,     0,     0,     0,     0,     0,    67,     0,     1,     0,
       0,    67,     2,     3,   201,     4,     5,  -604,  -604,   201,
       6,     7,     0,     0,     0,     0,     0,     8,     9,    10,
      11,    12,    13,    14,     0,   201,     0,  1013,     0,  1017,
       0,     0,     0,    15,    -6,    16,     0,    17,     0,     0,
      18,     0,     1,  -339,     0,     0,     0,   400,     0,     4,
       5,     0,     0,   401,     0,     7,     0,   402,   403,     0,
       0,    19,     0,    63,     0,     0,     0,    14,   404,     0,
     197,     0,   405,   406,   407,     0,     0,  1072,  -342,    16,
       0,     0,     0,   201,     0,   201,   201,     0,     0,  1086,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     201,     0,     0,     0,     0,    65,     0,     0,     0,     0,
       0,     0,    86,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    67,    67,     0,     0,     0,     0,
       0,     0,     0,     0,   201,     0,    67,     0,    67,     0,
       0,     0,     0,    67,     0,     0,   201,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    67,     0,     0,   201,     0,   201,     0,  1160,     0,
       0,     0,  1167,     0,  1171,  1174,     0,  1178,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    86,     0,
       0,     0,     0,     0,     0,  1195,     0,  1199,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   201,     0,   201,     0,   201,
       0,     0,     0,     0,     0,     0,     0,  1230,  1233,     0,
       0,     0,     0,     0,     0,   201,     0,   201,   201,     0,
       0,     0,     0,  1251,     0,     0,  1256,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1270,     0,
       0,     0,     0,     0,     0,    67,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   201,     0,   201,  1289,
       0,    67,    67,     0,     0,     0,     0,     0,     0,     0,
       0,   201,     0,    67,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   201,     0,    67,     0,    67,     0,     0,   201,     0,
       0,     0,  1325,     0,     0,     0,     0,     0,     0,  1336,
       0,     0,     0,  1343,     0,  1347,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1359,     0,     0,     0,  1366,     0,  1370,  1373,     0,  1377,
       0,     0,     0,   201,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   201,     0,   201,     0,   201,  1406,     0,
       0,     0,     0,     0,     1,     0,     0,     0,     2,     3,
       0,     4,     5,  -604,  -604,     0,     6,     7,     0,     0,
       0,  1432,  1435,     8,     9,    10,    11,    12,    13,    14,
       0,     0,     0,     0,     0,     0,     0,  1453,     0,    15,
     201,    16,    -6,    17,    67,     0,    18,     0,     0,     0,
       0,     0,     0,     0,     0,   201,  1469,   201,     0,  1474,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,   201,     0,   201,     0,
       1,   201,     0,    67,     2,     3,     0,     4,     5,  -604,
    -604,     0,     6,     7,     0,     0,     0,     0,     0,     8,
       9,    10,    11,    12,    13,    14,     0,     0,  1523,     0,
       0,     0,     0,     0,     0,    15,     0,    16,    -6,    17,
       0,     0,    18,     0,     0,     0,     0,     0,     0,     0,
       0,  1547,     0,     0,     0,     0,     0,     0,  1558,     0,
       0,     1,  1565,    19,  1569,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,   201,     0,     0,     0,     0,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    15,    -6,    16,     0,
      17,     0,     0,    18,     0,     0,     1,     0,     0,     0,
       2,     3,     0,     4,     5,  -604,  -604,     0,     6,     7,
    1622,     0,     0,     0,    19,     8,     9,    10,    11,    12,
      13,    14,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    15,    -6,    16,   201,    17,     0,     0,    18,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1664,     0,   201,     0,     0,   201,     1,   201,    19,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,     0,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,     1,    16,    -6,    17,     2,     3,    18,
       4,     5,  -604,  -604,     0,     6,     7,     0,     0,     0,
       0,     0,     8,     9,    10,    11,    12,    13,    14,     0,
      19,     0,     0,     0,     0,     0,     0,     0,    15,     1,
      16,    -6,    17,     2,     3,    18,     4,     5,  -604,  -604,
    1755,     6,     7,     0,     0,     0,     0,     0,     8,     9,
      10,    11,    12,    13,    14,     0,    19,     0,     0,     0,
       0,     0,     0,     0,    15,    -6,    16,     0,    17,     0,
       0,    18,     0,     0,     1,     0,     0,     0,     2,     3,
       0,     4,     5,  -604,  -604,     0,     6,     7,     0,     0,
       0,     0,    19,     8,     9,    10,    11,    12,    13,    14,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    15,
      -6,    16,     0,    17,     0,     0,    18,     0,     0,     0,
       1,     0,     0,     0,     2,     3,     0,     4,     5,  -604,
    -604,     0,     6,     7,     0,     0,     0,    19,   201,     8,
       9,    10,    11,    12,    13,    14,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    15,    -6,    16,     0,    17,
       0,     0,    18,     0,     0,     1,     0,     0,     0,     2,
       3,     0,     4,     5,  -604,  -604,     0,     6,     7,     0,
       0,     0,     0,    19,     8,     9,    10,    11,    12,    13,
      14,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      15,    -6,    16,     0,    17,     0,     0,    18,     0,     0,
       1,     0,     0,     0,     2,     3,     0,     4,     5,  -604,
    -604,     0,     6,     7,     0,     0,     0,     0,    19,     8,
       9,    10,    11,    12,    13,    14,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    15,     1,    16,    -6,    17,
       2,     3,    18,     4,     5,  -604,  -604,     0,     6,     7,
       0,     0,     0,     0,     0,     8,     9,    10,    11,    12,
      13,    14,     0,    19,     0,     0,     0,     0,     0,     0,
       0,    15,    -6,    16,     0,    17,     0,     0,    18,     0,
       0,     1,     0,     0,     0,     2,     3,     0,     4,     5,
    -604,  -604,     0,     6,     7,     0,     0,     0,     0,    19,
       8,     9,    10,    11,    12,    13,    14,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    15,     1,    16,    -6,
      17,     2,     3,    18,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,     0,     8,     9,    10,    11,
      12,    13,    14,     0,    19,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     0,     0,    18,     0,     0,     1,     0,     0,
       0,     2,     3,     0,     4,     5,  -604,  -604,     0,     6,
       7,     0,     0,     0,     0,    19,     8,     9,    10,    11,
      12,    13,    14,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    15,    -6,    16,     0,    17,     0,     0,    18,
       0,     0,     1,     0,     0,     0,     2,     3,     0,     4,
       5,  -604,  -604,     0,     6,     7,     0,     0,     0,     0,
      19,     8,     9,    10,    11,    12,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    -6,    16,
       0,    17,     1,  -339,    18,     0,     0,   400,     0,     4,
       5,     0,     0,   401,     0,     7,     0,   402,   403,     0,
       0,     0,     0,    63,     0,    19,     0,    14,   404,     0,
       0,     0,   405,   406,   407,     0,     1,  -339,  -342,    16,
       0,   400,     0,     4,     5,     0,     0,   401,     0,     7,
       0,   402,   403,     0,     0,     0,     0,    63,     0,     0,
       0,    14,   404,     0,     0,    65,   405,   406,   407,     0,
       1,  -339,  -342,    16,     0,   400,     0,     4,     5,     0,
       0,   401,     0,     7,     0,   402,   403,     0,     0,     0,
       0,    63,     0,     0,     0,    14,   404,     0,     0,    65,
     405,   406,   407,     0,     1,  -339,  -342,    16,     0,   400,
       0,     4,     5,     0,     0,   401,     0,     7,     0,   402,
     403,     0,     0,     0,     0,    63,     0,     0,     0,    14,
     404,     0,     0,    65,   405,   406,   407,     0,     1,  -339,
    -342,    16,     0,   400,     0,     4,     5,     0,     0,   401,
       0,     7,     0,   402,   403,     0,     0,     0,     0,    63,
       0,     0,     0,    14,   404,     0,     0,    65,   405,   406,
     407,     0,     1,  -339,  -342,    16,     0,   400,     0,     4,
       5,     0,     0,   401,     0,     7,     0,   402,   403,     0,
       0,     0,     0,    63,     0,     0,     0,    14,   404,     0,
       0,    65,   405,   406,   407,     0,     1,  -339,  -342,    16,
       0,   400,     0,     4,     5,     0,     0,   401,     0,     7,
       0,   402,   403,     0,     0,     0,     0,    63,     0,     0,
       0,    14,   404,     0,     0,    65,   405,   406,   407,     0,
       1,  -339,  -342,    16,     0,   400,     0,     4,     5,     0,
       0,   401,     0,     7,     0,   402,   403,     0,     0,     0,
       0,    63,     0,     0,     0,    14,   404,     0,     0,    65,
     405,   406,   407,     0,     1,  -339,  -342,    16,     0,   400,
       0,     4,     5,     0,     0,   401,     0,     7,     0,   402,
     403,     0,     0,     0,     0,    63,     0,     0,     0,    14,
     404,     0,     0,    65,   405,   406,   407,     0,     1,  -339,
    -342,    16,     0,   400,     0,     4,     5,     0,     0,   401,
       0,     7,     0,   402,   403,     0,     0,     0,     0,    63,
       0,     0,     0,    14,   404,     0,     0,    65,   405,   406,
     407,     0,     1,  -339,  -342,    16,     0,   400,     0,     4,
       5,     0,     0,   401,     0,     7,     0,   402,   403,     0,
       0,     0,     0,    63,     0,     0,     0,    14,   404,     0,
       0,    65,   405,   406,   407,     0,     1,  -339,  -342,    16,
       0,   400,     0,     4,     5,     0,     0,   401,     0,     7,
       0,   402,   403,     0,     0,     0,     0,    63,     0,     0,
       0,    14,   404,     0,     0,    65,   405,   406,   407,     0,
       1,  -339,  -342,    16,     0,   400,     0,     4,     5,     0,
       0,   401,     0,     7,     0,   402,   403,     0,     0,     0,
       0,    63,     0,     0,     0,    14,   404,     0,     0,    65,
     405,   406,   407,     0,     1,  -339,  -342,    16,     0,   400,
       0,     4,     5,     0,     0,   401,     0,     7,     0,   402,
     403,     0,     0,     0,     0,    63,     0,     0,     0,    14,
     404,     0,     0,    65,   405,   406,   407,     0,     1,  -339,
    -342,    16,     0,   400,     0,     4,     5,     0,     0,   401,
       0,     7,     0,   402,   403,     0,     0,     0,     0,    63,
       0,     0,     0,    14,   404,     0,     0,    65,   405,   406,
     407,     0,     0,     0,  -342,    16,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    65
};

static const yytype_int16 yycheck[] =
{
      52,   325,   424,   621,    52,    64,   324,    96,   309,   392,
     104,    96,    64,   544,   315,   489,   255,    48,   309,   266,
     128,   106,   368,   369,    76,   291,     6,     7,    59,   299,
      10,    11,    12,    10,    10,    10,    16,    89,    18,     5,
       5,    18,    18,    18,    68,    10,    26,    13,    13,    26,
      26,    26,   104,    18,    34,    42,    31,    10,    42,    12,
      27,    26,    23,     0,    30,    30,    42,    42,    45,    10,
      77,    48,    48,    40,    40,    38,    39,    42,   309,    44,
      45,    68,    10,    48,    68,    46,    14,    15,    68,    42,
      18,    68,    68,    68,   146,   147,    61,   344,    26,   184,
       6,   402,   403,    68,    69,    70,    71,   373,     9,    10,
      16,   402,   403,   414,   208,   223,    42,   500,   365,   366,
     359,   360,   423,   414,   394,   210,    76,    44,   602,    10,
      76,   423,   423,    44,   435,   666,     6,    18,    75,    89,
      68,   487,    59,    89,   445,    26,    16,   448,    45,    44,
      43,    48,   204,   445,   445,    48,   208,    94,    95,   166,
     167,   168,   169,   170,   171,   172,   173,    48,    10,     5,
      45,   402,   403,    48,     5,    68,    18,    13,     5,    47,
      48,   240,    13,   414,    26,    10,    13,    68,   240,    10,
      91,    92,   423,    18,    30,   513,    63,    18,    65,    30,
     289,    26,    44,    30,   289,    26,   291,    42,   260,    45,
       7,   148,    48,    10,   445,    45,    43,    42,   465,    44,
     121,    18,    43,   124,   125,   126,    68,   610,   611,    26,
      27,    28,    29,    63,   504,    65,    61,    43,   175,    46,
     479,   663,    48,    68,    69,    70,    71,    68,    10,     6,
       7,     6,     7,   871,    11,   314,    18,   309,    43,    16,
     561,   309,   314,    48,    26,     5,   567,   315,     0,   561,
     561,    68,   324,    13,     5,     6,    10,   178,    46,    10,
      42,    12,    13,    68,    18,    16,   338,    18,   373,    49,
      30,   350,    26,    10,    10,    26,    44,    31,   350,    30,
      31,    18,    18,    43,     5,    10,    68,    44,    42,    26,
      26,   558,    13,    18,    31,    31,     5,    40,   255,   637,
     638,    26,   646,   624,    13,    42,    42,    49,    42,    30,
     561,    45,   233,   580,    68,     9,    10,    68,    12,    44,
      40,    30,     5,   395,    45,    10,    45,    48,   731,    48,
      13,    68,    68,    18,   402,   403,    45,   294,    44,    48,
      43,    26,   414,    68,     5,    48,   414,    30,    42,   421,
      40,   423,    13,   421,   426,   423,   798,     5,    45,    44,
      43,    48,    10,   805,   436,    13,   434,   435,   447,    30,
      18,   292,   293,   445,    45,   447,    10,   445,    26,    40,
     448,   823,    30,    68,    18,    10,   458,   459,     6,     7,
      43,    10,    26,    18,    42,    48,    44,    45,    48,    18,
      48,    26,   359,   360,    47,    48,    45,    26,    10,    48,
     331,   368,   369,    61,     6,     7,    18,    42,    43,    44,
      68,    69,    70,    71,    26,    44,   747,   384,   385,   773,
       6,     7,   770,   547,    68,    42,    61,   509,   759,    32,
     761,   513,    44,    68,    69,    70,    71,   519,   516,    68,
      12,   523,    47,    48,     5,     9,    10,    42,    12,    47,
      48,    10,    13,   542,    59,   544,    68,   539,   540,    18,
     542,    59,   544,    45,   795,   547,    48,    26,    10,    30,
      12,    59,    31,   795,   795,   553,    18,   559,    42,   561,
     562,     6,    43,   561,    26,     5,     6,    12,   566,   567,
      10,    16,    12,    13,     5,    45,    16,   579,    18,    48,
      20,    21,    13,   955,    45,     5,    26,    48,    43,    68,
      30,    31,   479,    13,    42,    35,    36,    37,    45,    30,
     487,    41,    42,   975,    48,   977,    68,     5,    68,    40,
      30,    10,   499,    48,   795,    13,   618,   619,    68,    18,
     664,     5,    10,    43,    12,   669,     5,    26,    68,    13,
      45,   633,    30,    48,    13,   637,   638,   639,   489,   641,
     491,   685,    45,   494,   895,    44,    30,    45,   899,    45,
      48,    30,   849,   655,    41,    10,    40,   666,   660,   661,
     911,    40,   664,    18,   666,     6,     7,   669,    10,    68,
      42,    26,    44,   675,     5,    40,    18,    42,    42,    44,
     682,   683,    13,   685,    26,    43,   937,    42,   939,    44,
      45,   689,    43,    48,    43,   937,   937,   939,   939,    30,
      42,   952,    44,    45,    40,    40,    61,    42,    40,    44,
     952,   952,    43,    68,    69,    70,    71,    44,    40,    61,
      42,   972,    44,     6,     7,    10,    68,    69,    70,    71,
     972,   972,    10,    18,    10,    45,    10,   739,    10,    48,
      18,    26,    18,    48,    18,    22,    18,    71,    26,    40,
      26,   602,    26,    42,    26,    31,   937,    42,   939,    44,
      45,   759,   806,  1135,   766,    10,    44,    59,   770,    48,
      44,   952,    44,    18,    45,    45,    61,    48,    48,    41,
     824,    26,   826,    68,    69,    70,    71,    10,     6,     7,
      68,   972,    68,   795,    68,    18,    68,   795,   105,    44,
     802,   803,    43,    26,   806,    10,     6,     7,    31,   811,
     812,    45,  1063,    18,    48,    45,    45,    45,    48,   821,
      48,    26,   824,    68,   826,    45,    45,    44,    48,    48,
     717,   718,    45,     3,     5,    10,   164,   165,    45,    44,
    1091,    48,    13,    18,    45,    68,    40,    48,    45,  1091,
    1091,    26,    48,    45,    10,  1106,    48,  1108,    45,    30,
      40,    48,    18,    68,  1106,  1106,  1108,  1108,    45,    44,
      26,   873,    41,   875,    45,    31,  1127,    48,  1129,    45,
      45,  1132,    48,    48,    10,  1127,  1127,  1129,  1129,    42,
    1132,  1132,    18,    68,    42,    10,   894,   895,    10,    45,
      26,    45,   209,    18,    48,    45,    18,    45,    48,    41,
    1091,    26,    68,   911,    26,    40,    42,    45,    44,    40,
      48,   923,    45,    45,    41,  1106,    48,  1108,    42,    44,
      42,    43,    44,   935,   978,   937,    48,   939,    43,   937,
      42,   939,    68,    69,    70,    71,  1127,    48,  1129,    61,
     952,  1132,    45,    68,   952,    48,    68,    69,    70,    71,
     962,     6,     7,   717,   718,    45,    11,     5,    48,   139,
     972,    16,     5,     6,   972,    13,   978,    10,    45,    12,
      13,    48,    40,    16,    46,    18,     5,    20,    21,    34,
      42,    44,    30,    26,    13,    43,    45,    30,    31,    48,
      40,    48,    35,    36,    37,     5,    48,    45,    41,    42,
      48,    30,  1014,    13,    45,    10,  1018,    48,  1020,  1021,
      44,  1023,    45,    18,  1275,    48,    45,    68,   198,    48,
      30,    26,    45,  1275,  1275,    68,    48,     5,    43,  1041,
      40,  1043,  1040,  1294,    48,    13,  1297,    42,  1299,    44,
      45,    45,  1294,  1294,    48,  1297,  1297,  1299,  1299,    40,
      45,     5,    30,    48,  1062,  1063,    61,   237,   238,    13,
     352,  1073,  1074,    68,    69,    70,    71,    45,    45,    44,
      48,    48,  1084,    44,    59,    45,    30,  1089,    48,  1091,
    1092,    40,     5,  1091,  1275,    45,    40,   404,    48,    45,
      13,     5,  1104,    40,  1106,    40,  1108,    45,  1106,    13,
    1108,    43,    45,  1294,   421,    48,  1297,    30,  1299,    45,
      42,    45,    48,  1125,    48,  1127,    30,  1129,     0,  1127,
    1132,  1129,    45,     5,  1132,    48,    40,     9,    10,     5,
      12,    13,    14,    15,    40,    17,    18,    13,    38,    39,
      40,   321,    24,    25,    26,    27,    28,    29,    30,    45,
      45,    48,    48,    48,    30,    48,  1168,    44,    40,    43,
      42,   341,    44,  1175,    40,    47,    45,  1179,    48,  1181,
       5,     5,    45,    48,    43,    48,   468,   469,    13,    13,
      45,   473,   474,    48,  1196,    42,    68,    46,  1200,    10,
    1202,  1203,     5,  1205,     5,    30,    30,    18,    43,     5,
      13,     5,    13,    22,    48,    26,    40,    13,    48,    13,
      45,   528,    45,    48,  1222,    48,    68,    30,  1479,    30,
      42,    42,  1234,    44,    30,    19,    30,  1479,  1479,    40,
       5,   548,    45,  1245,  1246,    48,    40,  1249,    13,    45,
      61,    19,    48,    44,   536,  1257,  1258,    68,    69,    70,
      71,   431,   432,    41,    45,    30,  1268,    48,    45,    45,
      41,  1273,    48,  1275,    48,    45,    45,  1275,    48,    48,
      45,     5,    44,    48,    40,  1287,     5,   569,    45,    13,
    1292,    48,  1294,  1295,    13,  1297,  1294,  1299,  1479,  1297,
      45,  1299,    43,    48,   586,     5,    30,     5,     6,   591,
      48,    30,    10,    13,    12,    13,    45,   624,    16,    48,
      18,    45,    20,    21,    48,    40,    45,     5,    26,    48,
      30,    45,    30,    31,   616,    13,    44,    35,    36,    37,
      41,    10,  1344,    41,    42,    45,    48,    40,    48,    18,
      45,    45,    30,    48,    48,    41,    43,    26,   665,     5,
      40,    45,    40,   670,    48,  1367,    43,    13,   650,   651,
      68,   653,  1374,    42,    43,    44,  1378,    45,  1380,   686,
     550,   551,     5,     5,    30,    38,    39,    40,     5,     5,
      13,    13,    61,    45,    40,    44,    13,    13,   680,    68,
      69,    70,    71,    45,    41,    41,    48,    30,    30,   691,
     692,    43,   694,    30,    30,    45,   698,  1419,    48,    43,
    1422,  1423,    45,    45,    45,    48,    48,    48,    45,    45,
      45,    48,    48,    48,  1436,    45,    41,   744,    48,   746,
     747,    45,     5,     5,    48,  1447,  1448,    46,    46,  1451,
      13,    13,   734,   735,   761,   737,    45,    45,    43,    48,
      48,  1463,  1464,     5,     5,  1467,   748,    30,    30,    43,
    1472,    13,    13,   755,    43,  1477,     5,  1479,    38,    39,
      40,  1479,    45,    45,    13,    48,    48,   657,    30,    30,
      45,    45,   662,    48,    48,    45,   778,    19,   780,   781,
     807,    30,    19,    45,    45,     5,    48,    48,    45,    45,
      19,    48,    48,    13,     5,     5,    45,    19,   825,    48,
     827,    45,    13,    13,    48,    45,    44,   809,    48,    42,
      30,    38,    39,    40,   816,   817,     5,   819,    42,    30,
      30,    38,    39,    40,    13,    45,    44,    41,    48,    40,
     832,    40,   834,   835,    41,    45,   838,   839,    48,   841,
      45,    30,    44,    44,  1566,    38,    39,    40,    45,   876,
       5,   878,     5,   880,     5,    40,    45,     5,    13,    48,
      13,   863,    13,   865,   866,    13,     5,    40,    45,   896,
      40,   898,   899,    45,    13,    30,    40,    30,     5,    30,
     882,   883,    30,   885,    45,  1607,    13,    40,   890,   891,
      45,    30,    40,    48,    45,   785,   786,    48,   900,    41,
      41,    40,    40,    30,    41,   907,    41,   797,    40,   799,
      38,    39,    40,  1635,   804,    41,  1638,  1639,    45,    43,
     922,    48,    38,    39,    40,   927,    45,  1649,    41,   931,
    1652,  1653,   822,    41,     5,     5,  1658,  1659,    43,    43,
    1662,    48,    13,    13,    46,    40,     5,    38,    39,    40,
      43,    45,   979,    40,    13,   957,   958,     5,   960,    30,
      30,    45,     5,    40,   966,    13,   968,   969,     5,    45,
      13,    30,    44,     5,    45,    45,    13,    48,    48,    42,
      41,    13,    30,    40,   986,    40,    45,    30,   990,    48,
     992,   993,    40,    30,    38,    39,    40,  1024,    30,    48,
      45,    48,    45,    40,    44,    48,  1008,     5,     6,    44,
      41,    45,    10,    45,    12,    13,    48,  1044,    16,  1046,
      18,  1048,    20,    21,    40,    45,    41,  1029,    26,  1031,
    1032,    40,    30,    31,     5,  1037,   926,    35,    36,    37,
      40,    40,    13,    41,    42,    48,    40,     5,  1050,  1051,
      45,  1053,   942,   943,    40,    13,  1058,  1059,     5,    30,
       5,    45,    40,    45,   954,    45,    13,    43,    13,    41,
      68,    41,    30,    41,    45,  1077,  1078,    48,    45,  1081,
    1082,     5,    43,    30,   974,    30,   976,    45,    43,    13,
      48,    41,    40,    40,  1096,    48,    40,    43,  1100,    40,
      45,  1823,    44,    48,     5,    40,    30,     5,    45,    40,
       5,  1113,    13,  1115,  1116,    13,  1838,    45,    13,    40,
      40,    45,  1124,  1845,    48,    43,  1848,  1849,    45,    30,
      43,    40,    30,    45,    40,    30,    41,    45,    41,    40,
      44,    41,    44,    40,  1146,    40,    45,    45,     0,    40,
      48,    45,  1154,     5,    40,    45,     5,     9,    10,  1161,
      12,    13,    14,    15,    13,    17,    18,    40,    45,    40,
      45,    41,    24,    25,    26,    27,    28,    29,    30,  1206,
      40,    30,    40,    45,    41,     5,  1188,    41,    40,    41,
      42,    43,    44,    13,     5,    47,    45,    41,    40,    48,
      41,    40,    13,    40,    40,  1095,     5,     5,    43,  1211,
      30,  1213,  1214,     5,    13,    13,    68,  1219,     5,    30,
      45,    13,  1224,    45,    41,    45,    13,    41,    48,    41,
      43,    30,    30,    41,    45,    41,  1238,    48,    30,    40,
    1242,  1243,    68,    30,  1134,    41,    45,    45,    43,    48,
      48,    44,    40,    45,    44,    44,    48,    40,    45,  1261,
    1262,    48,     5,  1265,  1266,    40,     9,    10,     5,    12,
      13,    14,    15,    45,    17,    18,    13,    41,    40,     6,
    1282,    24,    25,    26,    27,    28,    29,    30,     5,    44,
     509,    40,    40,    30,  2016,    45,    13,    40,    40,    42,
      43,    44,    40,    44,    47,    45,  1308,  1309,    45,  1311,
      40,    48,    45,    30,  1316,  1317,    44,  1319,    43,    41,
     539,   540,    41,    40,  1326,    68,    41,    40,  1330,     5,
       5,     5,    40,    45,    40,  1337,    40,    13,    13,    13,
       5,    41,    45,   562,     9,    10,    44,    12,    13,    14,
      15,  1353,    17,    18,    30,    30,    30,    40,  1360,    24,
      25,    26,    27,    28,    29,    30,    44,    40,    45,    45,
      45,    45,    48,    48,    48,    40,    41,    42,    45,    44,
       5,    40,    47,    45,    44,  1387,    40,    40,    13,     5,
      41,  1393,  1394,    40,  1396,    41,     5,    13,  1400,   618,
     619,     5,    41,    68,    13,    30,    41,    40,     5,    13,
      44,    40,  1414,  1415,    30,  1417,    13,    41,  1420,    41,
      45,    30,     5,    48,  1426,    40,    30,     5,    41,    45,
      13,    40,    48,    30,    41,    13,   655,    45,  1440,    41,
      41,    45,  1444,  1445,    48,    48,     5,    30,    45,    41,
      41,    48,    30,     5,    13,    41,   675,    45,    48,  1461,
      40,    13,    45,   682,   683,    48,     5,    45,    40,    45,
      48,    30,     6,    44,    13,    44,    44,    41,    30,    41,
      41,    41,  1484,    40,  1486,  1487,    45,    41,    40,    48,
    1492,    30,  1494,  1495,     6,  1497,    44,    44,    44,    41,
    1502,  1503,     5,    40,  1506,  1507,    45,  1509,     5,    48,
      13,    40,  1514,  1515,    40,  1517,    13,    45,     5,    41,
     739,    40,  1524,     6,     5,    41,    13,    30,  1530,  1531,
       5,  1533,    13,    30,    40,    45,  1538,  1539,    13,  1541,
      44,    41,    45,    30,    40,    48,  1548,    41,    45,    30,
    1552,    48,     5,    45,    40,    30,     5,  1559,    45,    40,
      13,    48,    41,     5,    13,    40,    44,    41,    44,    40,
      40,    13,    45,    40,    40,    44,  1578,    30,  1580,  1581,
      45,    30,  1584,  1585,    41,  1587,    40,    40,    30,    41,
      41,    40,   811,   812,  1596,    41,  1598,  1599,    40,    40,
    1602,  1603,   821,  1605,    41,    41,    41,  1609,  1610,    41,
    1612,    44,     5,    40,  1616,    44,    40,    45,    41,    41,
      13,    41,    41,    41,    40,     5,     6,    40,  1630,  1631,
      10,  1633,    12,    13,  1636,    40,    16,    30,    18,    45,
      20,    21,  1644,  1645,     5,  1647,    26,    40,  1650,    40,
      30,    31,    13,    40,  1656,    35,    36,    37,    44,     5,
       5,    41,    42,    45,     5,    40,    45,    13,    13,    30,
      40,  1673,    13,    45,    40,    40,    45,    45,  1680,    40,
    1682,  1683,    41,    41,    30,    30,  1688,    41,    68,    30,
    1692,    41,  1694,  1695,    40,    40,     5,    40,  1700,    40,
    1702,  1703,     6,  1705,    13,     5,    45,    40,  1710,  1711,
      45,    41,    44,    13,  1716,    44,  1718,  1719,    44,    41,
      41,    30,  1724,    40,  1726,  1727,     5,  1729,    41,    41,
      30,    40,  1734,  1735,    13,     6,  1738,  1739,     5,  1741,
      40,     5,     5,   962,  1746,  1747,    13,  1749,     6,    13,
      13,    30,    40,    40,  1756,    45,     5,    40,    40,    45,
      45,    40,    40,    30,    13,  1767,    30,    30,    41,  1771,
      45,  1773,  1774,    40,    44,    41,    40,    40,     6,    41,
    1782,    30,    41,    40,  1786,    45,  1788,  1789,    41,     5,
      45,    40,  1794,    41,  1796,  1797,    40,    13,  1800,  1801,
      41,  1803,    40,    45,    41,    41,    41,    41,    41,    41,
    1812,    41,  1814,  1815,    30,     5,  1818,  1819,     5,  1821,
      45,     5,     5,    13,    40,  1827,    13,  1829,  1830,    13,
      13,  1833,  1834,    41,  1836,    41,    40,    44,  1840,  1841,
      30,  1843,    41,    30,  1846,    41,    30,    30,    40,    40,
      40,    40,    45,    40,    24,    41,    40,    40,    40,    40,
      45,  1863,    40,    40,    40,  1084,    45,    47,    40,    40,
      45,  1873,    40,    40,    54,    55,    56,    57,  1880,    59,
    1882,  1883,    62,    40,    64,    45,  1888,    45,    50,    51,
      52,    53,    40,  1895,    45,    40,    58,    40,    60,    45,
    1902,    45,  1904,  1905,    66,    67,    41,    40,  1910,    40,
      40,    45,  1914,    45,  1916,  1917,    40,    40,    45,    40,
    1922,    41,  1924,  1925,    40,  1927,    45,    45,    40,    40,
    1932,  1933,    45,     5,     6,     7,     8,    45,    10,    11,
      12,    13,    44,  1945,    16,    41,    41,    41,    41,    40,
      40,    40,    40,    45,  1956,    40,    40,   342,    30,    45,
      41,  1963,    45,    41,    41,  1967,    40,  1969,  1970,    40,
      40,    40,    45,    40,    40,    40,  1978,    45,    41,    41,
    1982,    45,  1984,  1985,    45,    41,    41,    40,    45,   554,
      41,  1993,    41,    45,    40,  1997,   298,  1999,  2000,    41,
      45,    45,    45,  2005,    41,  2007,  2008,    41,    41,  2011,
    2012,    41,  2014,    41,    40,   471,    41,    41,    41,    40,
      40,    40,    40,    45,    41,    41,  1245,  1246,    40,    40,
    1249,    40,  2034,    41,    40,    45,    40,    40,    45,    40,
      45,    40,    40,    45,    41,    40,    40,  2049,    40,  1268,
      41,    40,    45,    40,    40,    45,    40,  2059,    40,    40,
      45,    40,    45,    40,  2066,    45,  2068,  2069,  1287,    40,
      45,    40,  2074,    40,    40,     5,    41,    45,    40,     9,
      10,    45,    12,    13,    14,    15,    45,    17,    18,    41,
      41,    41,    40,  2095,    24,    25,    26,    27,    28,    29,
      30,    41,    40,    40,  2106,    40,    45,    41,    41,    41,
      40,   147,    42,    43,    44,  2117,    40,    47,    41,    40,
      40,    40,  2124,    41,    40,    40,  2128,    40,  2130,  2131,
      40,    45,    40,    45,    45,    41,    41,    41,    68,    40,
      40,    40,    45,    41,    40,    40,    40,    40,    45,   366,
      40,     2,     3,    45,    45,  2157,    41,     8,     9,    10,
       5,    41,    41,    41,     9,    10,    17,    12,    13,    14,
      15,    41,    17,    18,    41,    41,    41,    41,    41,    24,
      25,    26,    27,    28,    29,    30,  2188,    41,    41,    41,
      40,   149,    41,    41,    41,    40,    41,    42,    40,    44,
    1419,    40,    47,  1422,  1423,    40,    40,    45,    59,    60,
      41,    41,    41,    41,    40,   253,    41,    41,    41,    40,
      40,    40,   362,    68,    41,    76,    77,    45,  1447,  1448,
      40,    40,  1451,    41,    40,    40,   613,    41,    89,    40,
      91,    92,    45,    40,  1463,  1464,    40,    45,  1467,    40,
      45,    40,   103,  1472,   105,    40,    40,    45,   109,    41,
      41,   112,    41,    41,    41,    41,    41,    41,    41,    41,
     121,    41,    41,   124,   125,   126,    40,    45,    41,    41,
      41,    40,   260,    41,    40,    40,    40,    40,   139,    41,
      41,    41,    41,   144,    40,    40,   393,    41,    41,    41,
      40,    40,   338,    41,    40,   112,    41,    40,    40,    40,
      40,    45,    41,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,    41,    41,    41,    41,   178,    41,    41,
      41,    41,    41,    41,    41,    41,    41,    41,    41,   190,
      41,     5,    41,    41,    41,     9,    10,   198,    12,    13,
      14,    15,    41,    17,    18,    40,   303,    41,   209,   395,
      24,    25,    26,    27,    28,    29,    30,    41,    41,    41,
      41,    40,   240,    41,    41,    41,    40,    41,    42,    40,
      44,   232,   233,    47,    40,    40,   237,   238,  1607,    41,
      40,    45,    41,    41,    41,    41,    41,    41,    41,    41,
      41,    41,    41,    41,    68,    41,    41,    40,   136,    41,
      41,    41,    41,    41,    41,   266,  1635,    40,    40,  1638,
    1639,    41,   458,   459,    41,    41,    41,    41,    41,    41,
    1649,    41,    41,  1652,  1653,    40,   436,    41,    40,  1658,
    1659,   292,   293,  1662,    40,   998,    41,    41,    41,    41,
      41,    41,   303,    41,    41,    41,   307,   308,   309,    41,
      41,    41,    41,    41,    41,    41,    41,    41,    40,   320,
     321,    41,    41,    41,   325,    41,    41,    41,    41,    41,
     331,    41,    41,   519,    41,    41,    41,   523,    41,    41,
     341,    41,   343,   344,    41,    41,    41,     5,    41,    41,
      41,     9,    10,    40,    12,    13,    14,    15,    41,    17,
      18,    41,    41,    41,   365,   366,    24,    25,    26,    27,
      28,    29,    30,   559,    41,    41,    41,    41,    41,    41,
      41,    41,    40,   849,    42,    43,    44,    41,    41,    47,
      41,   392,    41,   579,   604,   414,  1010,   535,   494,   603,
     491,   322,   656,   404,   441,   531,    61,   210,   447,   222,
      68,    -1,   364,   414,    -1,   451,    -1,    -1,   542,    -1,
     421,   422,   423,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     431,   432,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     441,    -1,    -1,    -1,   445,    -1,    -1,   633,    -1,    -1,
      -1,    -1,    -1,   639,  1823,   641,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   465,    -1,    -1,    -1,    -1,  1838,
      -1,    -1,    -1,    -1,   660,   661,  1845,    -1,    -1,  1848,
    1849,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   489,    -1,
     491,    -1,    -1,   494,    -1,    -1,     5,    -1,    -1,   500,
       9,    10,    -1,    12,    13,    14,    15,    -1,    17,    18,
      -1,    -1,    -1,    -1,    -1,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,   528,    -1,    -1,
     531,    40,    -1,    42,    43,    44,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   548,    -1,   550,
     551,    -1,    -1,    -1,    -1,    -1,    -1,   558,    -1,    68,
     561,    -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,
      12,    13,    14,    15,    -1,    17,    18,    -1,    -1,   580,
     766,    -1,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,
      42,   602,    44,    -1,    -1,    47,    -1,    -1,    -1,   610,
     611,    -1,    -1,    -1,    -1,    -1,   802,   803,    -1,    -1,
      -1,    -1,    -1,   624,    -1,    -1,    68,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   646,    -1,  2016,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   657,    -1,     5,    -1,
      -1,   662,     9,    10,   665,    12,    13,    14,    15,   670,
      17,    18,    -1,    -1,    -1,    -1,    -1,    24,    25,    26,
      27,    28,    29,    30,    -1,   686,    -1,   873,    -1,   875,
      -1,    -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,
      47,    -1,     5,     6,    -1,    -1,    -1,    10,    -1,    12,
      13,    -1,    -1,    16,    -1,    18,    -1,    20,    21,    -1,
      -1,    68,    -1,    26,    -1,    -1,    -1,    30,    31,    -1,
     731,    -1,    35,    36,    37,    -1,    -1,   923,    41,    42,
      -1,    -1,    -1,   744,    -1,   746,   747,    -1,    -1,   935,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     761,    -1,    -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,
      -1,    -1,   773,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   785,   786,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   795,    -1,   797,    -1,   799,    -1,
      -1,    -1,    -1,   804,    -1,    -1,   807,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   822,    -1,    -1,   825,    -1,   827,    -1,  1014,    -1,
      -1,    -1,  1018,    -1,  1020,  1021,    -1,  1023,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   849,    -1,
      -1,    -1,    -1,    -1,    -1,  1041,    -1,  1043,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   876,    -1,   878,    -1,   880,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1073,  1074,    -1,
      -1,    -1,    -1,    -1,    -1,   896,    -1,   898,   899,    -1,
      -1,    -1,    -1,  1089,    -1,    -1,  1092,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1104,    -1,
      -1,    -1,    -1,    -1,    -1,   926,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   937,    -1,   939,  1125,
      -1,   942,   943,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   952,    -1,   954,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   972,    -1,   974,    -1,   976,    -1,    -1,   979,    -1,
      -1,    -1,  1168,    -1,    -1,    -1,    -1,    -1,    -1,  1175,
      -1,    -1,    -1,  1179,    -1,  1181,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1196,    -1,    -1,    -1,  1200,    -1,  1202,  1203,    -1,  1205,
      -1,    -1,    -1,  1024,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1044,    -1,  1046,    -1,  1048,  1234,    -1,
      -1,    -1,    -1,    -1,     5,    -1,    -1,    -1,     9,    10,
      -1,    12,    13,    14,    15,    -1,    17,    18,    -1,    -1,
      -1,  1257,  1258,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1273,    -1,    40,
    1091,    42,    43,    44,  1095,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1106,  1292,  1108,    -1,  1295,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1127,    -1,  1129,    -1,
       5,  1132,    -1,  1134,     9,    10,    -1,    12,    13,    14,
      15,    -1,    17,    18,    -1,    -1,    -1,    -1,    -1,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,  1344,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    42,    43,    44,
      -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1367,    -1,    -1,    -1,    -1,    -1,    -1,  1374,    -1,
      -1,     5,  1378,    68,  1380,     9,    10,    -1,    12,    13,
      14,    15,    -1,    17,    18,  1206,    -1,    -1,    -1,    -1,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,    -1,
      44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,    -1,
       9,    10,    -1,    12,    13,    14,    15,    -1,    17,    18,
    1436,    -1,    -1,    -1,    68,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    42,  1275,    44,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1477,    -1,  1294,    -1,    -1,  1297,     5,  1299,    68,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    -1,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,     5,    42,    43,    44,     9,    10,    47,
      12,    13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,
      -1,    -1,    24,    25,    26,    27,    28,    29,    30,    -1,
      68,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,     5,
      42,    43,    44,     9,    10,    47,    12,    13,    14,    15,
    1566,    17,    18,    -1,    -1,    -1,    -1,    -1,    24,    25,
      26,    27,    28,    29,    30,    -1,    68,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    41,    42,    -1,    44,    -1,
      -1,    47,    -1,    -1,     5,    -1,    -1,    -1,     9,    10,
      -1,    12,    13,    14,    15,    -1,    17,    18,    -1,    -1,
      -1,    -1,    68,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      41,    42,    -1,    44,    -1,    -1,    47,    -1,    -1,    -1,
       5,    -1,    -1,    -1,     9,    10,    -1,    12,    13,    14,
      15,    -1,    17,    18,    -1,    -1,    -1,    68,  1479,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    41,    42,    -1,    44,
      -1,    -1,    47,    -1,    -1,     5,    -1,    -1,    -1,     9,
      10,    -1,    12,    13,    14,    15,    -1,    17,    18,    -1,
      -1,    -1,    -1,    68,    24,    25,    26,    27,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    41,    42,    -1,    44,    -1,    -1,    47,    -1,    -1,
       5,    -1,    -1,    -1,     9,    10,    -1,    12,    13,    14,
      15,    -1,    17,    18,    -1,    -1,    -1,    -1,    68,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,     5,    42,    43,    44,
       9,    10,    47,    12,    13,    14,    15,    -1,    17,    18,
      -1,    -1,    -1,    -1,    -1,    24,    25,    26,    27,    28,
      29,    30,    -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,    -1,
      -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,    13,
      14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,    68,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,     5,    42,    43,
      44,     9,    10,    47,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    -1,    24,    25,    26,    27,
      28,    29,    30,    -1,    68,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,    -1,    -1,    47,    -1,    -1,     5,    -1,    -1,
      -1,     9,    10,    -1,    12,    13,    14,    15,    -1,    17,
      18,    -1,    -1,    -1,    -1,    68,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    41,    42,    -1,    44,    -1,    -1,    47,
      -1,    -1,     5,    -1,    -1,    -1,     9,    10,    -1,    12,
      13,    14,    15,    -1,    17,    18,    -1,    -1,    -1,    -1,
      68,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    41,    42,
      -1,    44,     5,     6,    47,    -1,    -1,    10,    -1,    12,
      13,    -1,    -1,    16,    -1,    18,    -1,    20,    21,    -1,
      -1,    -1,    -1,    26,    -1,    68,    -1,    30,    31,    -1,
      -1,    -1,    35,    36,    37,    -1,     5,     6,    41,    42,
      -1,    10,    -1,    12,    13,    -1,    -1,    16,    -1,    18,
      -1,    20,    21,    -1,    -1,    -1,    -1,    26,    -1,    -1,
      -1,    30,    31,    -1,    -1,    68,    35,    36,    37,    -1,
       5,     6,    41,    42,    -1,    10,    -1,    12,    13,    -1,
      -1,    16,    -1,    18,    -1,    20,    21,    -1,    -1,    -1,
      -1,    26,    -1,    -1,    -1,    30,    31,    -1,    -1,    68,
      35,    36,    37,    -1,     5,     6,    41,    42,    -1,    10,
      -1,    12,    13,    -1,    -1,    16,    -1,    18,    -1,    20,
      21,    -1,    -1,    -1,    -1,    26,    -1,    -1,    -1,    30,
      31,    -1,    -1,    68,    35,    36,    37,    -1,     5,     6,
      41,    42,    -1,    10,    -1,    12,    13,    -1,    -1,    16,
      -1,    18,    -1,    20,    21,    -1,    -1,    -1,    -1,    26,
      -1,    -1,    -1,    30,    31,    -1,    -1,    68,    35,    36,
      37,    -1,     5,     6,    41,    42,    -1,    10,    -1,    12,
      13,    -1,    -1,    16,    -1,    18,    -1,    20,    21,    -1,
      -1,    -1,    -1,    26,    -1,    -1,    -1,    30,    31,    -1,
      -1,    68,    35,    36,    37,    -1,     5,     6,    41,    42,
      -1,    10,    -1,    12,    13,    -1,    -1,    16,    -1,    18,
      -1,    20,    21,    -1,    -1,    -1,    -1,    26,    -1,    -1,
      -1,    30,    31,    -1,    -1,    68,    35,    36,    37,    -1,
       5,     6,    41,    42,    -1,    10,    -1,    12,    13,    -1,
      -1,    16,    -1,    18,    -1,    20,    21,    -1,    -1,    -1,
      -1,    26,    -1,    -1,    -1,    30,    31,    -1,    -1,    68,
      35,    36,    37,    -1,     5,     6,    41,    42,    -1,    10,
      -1,    12,    13,    -1,    -1,    16,    -1,    18,    -1,    20,
      21,    -1,    -1,    -1,    -1,    26,    -1,    -1,    -1,    30,
      31,    -1,    -1,    68,    35,    36,    37,    -1,     5,     6,
      41,    42,    -1,    10,    -1,    12,    13,    -1,    -1,    16,
      -1,    18,    -1,    20,    21,    -1,    -1,    -1,    -1,    26,
      -1,    -1,    -1,    30,    31,    -1,    -1,    68,    35,    36,
      37,    -1,     5,     6,    41,    42,    -1,    10,    -1,    12,
      13,    -1,    -1,    16,    -1,    18,    -1,    20,    21,    -1,
      -1,    -1,    -1,    26,    -1,    -1,    -1,    30,    31,    -1,
      -1,    68,    35,    36,    37,    -1,     5,     6,    41,    42,
      -1,    10,    -1,    12,    13,    -1,    -1,    16,    -1,    18,
      -1,    20,    21,    -1,    -1,    -1,    -1,    26,    -1,    -1,
      -1,    30,    31,    -1,    -1,    68,    35,    36,    37,    -1,
       5,     6,    41,    42,    -1,    10,    -1,    12,    13,    -1,
      -1,    16,    -1,    18,    -1,    20,    21,    -1,    -1,    -1,
      -1,    26,    -1,    -1,    -1,    30,    31,    -1,    -1,    68,
      35,    36,    37,    -1,     5,     6,    41,    42,    -1,    10,
      -1,    12,    13,    -1,    -1,    16,    -1,    18,    -1,    20,
      21,    -1,    -1,    -1,    -1,    26,    -1,    -1,    -1,    30,
      31,    -1,    -1,    68,    35,    36,    37,    -1,     5,     6,
      41,    42,    -1,    10,    -1,    12,    13,    -1,    -1,    16,
      -1,    18,    -1,    20,    21,    -1,    -1,    -1,    -1,    26,
      -1,    -1,    -1,    30,    31,    -1,    -1,    68,    35,    36,
      37,    -1,    -1,    -1,    41,    42,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    68
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_uint8 yystos[] =
{
       0,     5,     9,    10,    12,    13,    17,    18,    24,    25,
      26,    27,    28,    29,    30,    40,    42,    44,    47,    68,
      74,    75,    76,    77,    78,    79,    80,    81,    84,    86,
      87,    88,    90,    97,    98,    99,   100,   101,   102,   107,
     108,   109,   110,   114,   119,   127,   135,   138,   139,   153,
     156,   160,   179,   189,   194,   200,   201,   205,   209,   215,
     216,   217,    10,    26,    44,    68,   152,   200,    12,   152,
      10,    68,   115,   118,   200,    42,    44,    61,    69,    70,
      71,   103,   104,   105,   106,   128,   200,   222,   223,    44,
     103,    44,    44,    27,    40,    42,    42,    45,    48,    82,
     200,     0,    77,    46,     6,     7,    11,    16,    34,     8,
      10,   160,   215,    47,    54,    55,    56,    57,    59,    62,
      64,    85,    49,   202,    40,    42,    44,   204,   206,   207,
     210,   213,   214,   137,   200,    14,    15,   200,   216,    45,
      48,    93,   142,   143,   144,   215,    44,    44,    40,    49,
     116,    76,   134,    45,    48,   103,   104,   129,   131,   132,
     215,   219,   221,   106,    63,    65,    50,    51,    52,    53,
      58,    60,    66,    67,   215,    40,   103,   103,    44,    76,
      89,    76,    43,   180,   182,   209,    40,    45,    45,    48,
      48,    83,    42,    48,   120,   122,   126,   200,   141,   215,
     159,   200,   193,   209,    42,    32,   196,   200,     6,     7,
      11,    16,   137,   103,     7,    10,    18,    26,    27,    28,
      29,    68,   203,   208,   103,    43,   103,    45,    48,   103,
     211,   204,    59,    42,   136,   136,   152,    45,    45,    48,
      48,    94,   145,   200,    45,    48,    95,   143,    45,    48,
      95,    76,   117,   118,    43,    42,    45,    45,    45,    48,
      48,   130,    68,   133,    45,    48,    48,   220,   105,   105,
     106,   106,   106,   106,   106,   106,   106,   106,    68,   111,
      76,   113,    45,    45,   103,    41,    43,    43,    43,    48,
     181,   182,    42,    44,    42,    40,    40,    45,   200,    42,
      68,   125,    48,    48,   121,    22,   152,    38,    39,    40,
     157,   171,   172,   174,    44,    43,    91,   154,   215,    71,
      40,   141,   159,   193,    42,    59,   202,   204,    41,    43,
      45,    48,   212,    45,    48,   218,   219,   103,    44,   152,
     152,    45,   142,    44,    59,   146,    40,    45,    45,    48,
      48,    96,    40,    45,    45,    48,    41,   116,   134,    42,
      42,    45,   131,    45,   221,    23,    46,    41,    40,    40,
      45,    41,    43,   182,   181,    43,   103,   185,   188,    45,
     103,   183,   187,    76,    42,    42,    40,    83,    43,    48,
     123,   125,    46,   122,    42,    44,   173,   200,   177,   200,
      10,    16,    20,    21,    31,    35,    36,    37,   138,   139,
     159,   160,   161,   162,   163,   164,   166,   167,   168,   169,
     170,   179,   215,    40,    48,   158,    45,    48,   143,   190,
     192,     9,    10,   160,   179,    43,    48,    92,    68,   155,
     195,   197,   198,   200,   152,    40,   157,    44,    43,    91,
     218,   103,    45,    48,    43,    45,    48,    95,    44,    44,
     152,    94,   149,   200,   221,    59,    76,   151,    40,    40,
      45,   143,   151,    40,    40,    45,    43,   134,   134,    42,
     130,   220,   112,   221,   112,    89,    89,    40,   181,    44,
      43,    48,   186,    45,    48,   184,    43,    76,    76,    42,
      46,    43,    43,    48,    48,   124,   126,   121,   125,    45,
      48,    95,    22,    42,   138,   139,   179,   138,   139,    44,
     159,    19,    19,    44,    16,    41,   162,    16,    31,   159,
     160,   215,   165,   200,   161,   171,    40,   140,   141,    45,
      45,    48,    48,   191,    44,   152,   152,     6,     7,   160,
       9,    10,   160,   179,   154,    41,   195,    48,    59,    44,
     161,    40,    45,    48,   190,   160,   179,    43,   212,    40,
      45,    45,    48,    45,    48,    95,    45,    48,    95,    44,
      42,    45,   221,    41,   151,   151,    40,    96,    41,   151,
     151,    40,    43,    43,   134,    45,    45,    41,    41,    89,
      45,   183,    44,   188,   187,    41,    43,    43,    76,   126,
      46,    46,    43,   125,    43,    43,    40,   140,    45,    45,
      48,    42,    68,   178,    43,    91,    19,    19,    19,    19,
      45,    48,    95,    44,    45,    48,    95,    42,    42,    44,
     159,    44,    16,   165,    47,    48,    59,    41,   158,   151,
      40,    40,   140,    40,   140,    45,   192,    45,    48,    93,
      44,    44,   141,   159,     6,     7,    44,   152,   152,     6,
       7,   160,    92,   199,   221,    45,    48,    95,    41,   161,
      40,   140,    45,    45,    48,     6,     7,   160,   160,   179,
     151,    40,    40,    45,    40,    45,    45,    48,    40,    45,
      45,    48,    45,    48,    95,    43,    48,   147,   150,   221,
      41,    41,   151,    41,    41,   151,    43,    40,    40,    41,
      45,    45,   183,   186,   184,    41,    41,    43,    43,   126,
     126,    46,   124,   151,    40,    40,   140,    40,   140,    45,
      43,    48,   175,   178,    31,   159,   179,    43,    40,    45,
      45,    48,    45,    48,    95,    40,    45,    45,    48,    43,
      91,    43,    91,    45,    48,    95,    44,    45,    48,    95,
      42,    47,    48,    59,   218,    41,   151,   151,    40,   151,
      40,    40,   140,   191,   152,    45,    45,    48,    45,    48,
      95,    45,    48,    95,   152,    40,   171,   141,   159,    45,
      48,    93,    44,    44,   141,   159,     6,     7,    48,    40,
     140,    45,    45,    48,    41,   151,    40,    40,   140,    40,
     140,    45,   141,   159,     6,     7,     6,     7,   160,    41,
     151,   151,    40,   151,    40,    40,    45,   151,    40,    40,
      45,    40,    45,    45,    48,    45,    43,    43,    48,    48,
     148,    41,    41,   113,   113,    45,    41,    43,    43,   126,
      41,   151,   151,    40,   151,    40,    40,   140,    43,    43,
      48,    48,   176,    44,   159,    44,    31,   159,    31,   159,
     179,   151,    40,    40,    45,    40,    45,    45,    48,   151,
      40,    40,    45,   160,   179,    43,    31,   159,   179,    43,
      40,    45,    45,    48,    45,    48,    95,    40,    45,    45,
      48,    43,    91,   218,    47,    48,    41,    41,   151,    41,
     151,   151,    40,    44,   152,   152,    45,    40,    45,    45,
      48,    40,    45,    45,    48,    44,   161,    40,   152,    40,
     171,   152,    45,    45,    48,    45,    48,    95,    45,    48,
      95,   152,    40,   171,   141,   159,   151,    40,    40,   140,
      40,   140,    45,    41,   151,   151,    40,   151,    40,    40,
     140,   152,    40,   171,   141,   159,   141,   159,     6,     7,
      41,    41,   151,    41,   151,   151,    40,    41,   151,   151,
      40,   151,    40,    40,    45,    45,    45,    43,   150,    41,
      41,    43,    41,    41,   151,    41,   151,   151,    40,    43,
     178,    45,    48,    95,    44,    45,    48,    95,    44,   159,
      44,    44,   159,    44,    31,   159,    41,   151,   151,    40,
     151,    40,    40,    45,    41,   151,   151,    40,   160,   160,
     179,    44,   159,    44,    31,   159,    31,   159,   179,   151,
      40,    40,    45,    40,    45,    45,    48,   151,    40,    40,
      45,   160,   179,    43,    47,    48,    41,    41,    41,   151,
      45,    48,    95,    44,    44,   152,   151,    40,    40,    45,
     151,    40,    40,    45,    45,    48,    95,    41,   161,    44,
     161,    40,    44,   152,   152,    45,    40,    45,    45,    48,
      40,    45,    45,    48,    44,   161,    40,   152,    40,   171,
      41,   151,   151,    40,   151,    40,    40,   140,    41,    41,
     151,    41,   151,   151,    40,    44,   161,    40,   152,    40,
     171,   152,    40,   171,   141,   159,    41,    41,    41,   151,
      41,    41,   151,    41,   151,   151,    40,    45,   148,    41,
      41,    41,   151,   176,    40,    45,    45,    48,    45,    48,
      95,    40,    45,    45,    48,    45,    48,    95,    44,    45,
      48,    95,    45,    48,    95,    44,    45,    48,    95,    44,
     159,    44,    41,    41,   151,    41,   151,   151,    40,    41,
      41,   151,   160,    45,    48,    95,    44,    45,    48,    95,
      44,   159,    44,    44,   159,    44,    31,   159,    41,   151,
     151,    40,   151,    40,    40,    45,    41,   151,   151,    40,
     160,   160,   179,    41,    40,    45,    45,    48,    45,    48,
      95,    45,    48,    95,    44,    41,   151,   151,    40,    41,
     151,   151,    40,    40,   140,    45,    45,    48,    41,    45,
      48,    95,    41,   161,    45,    48,    95,    44,    44,   152,
     151,    40,    40,    45,   151,    40,    40,    45,    45,    48,
      95,    41,   161,    44,   161,    40,    41,    41,   151,    41,
     151,   151,    40,    41,    41,    41,   151,    45,    48,    95,
      41,   161,    44,   161,    40,    44,   161,    40,   152,    40,
     171,    41,    41,    41,    41,   151,    41,   151,    40,    40,
      45,    40,    45,    45,    48,   151,    40,    40,    45,    40,
      45,    45,    48,    45,    48,    95,    40,    45,    45,    48,
      40,    45,    45,    48,    45,    48,    95,    40,    45,    45,
      48,    45,    48,    95,    44,    45,    48,    95,    41,    41,
      41,   151,    41,    40,    45,    45,    48,    45,    48,    95,
      40,    45,    45,    48,    45,    48,    95,    44,    45,    48,
      95,    45,    48,    95,    44,    45,    48,    95,    44,   159,
      44,    41,    41,   151,    41,   151,   151,    40,    41,    41,
     151,   160,   151,    40,    40,    45,    40,    45,    45,    48,
      40,    45,    45,    48,    45,    48,    95,    41,    41,   151,
      41,    41,   151,   151,    40,    40,   140,    40,   140,    45,
      40,   140,    45,    45,    48,    41,    40,    45,    45,    48,
      45,    48,    95,    45,    48,    95,    44,    41,   151,   151,
      40,    41,   151,   151,    40,    40,   140,    45,    45,    48,
      41,    45,    48,    95,    41,   161,    41,    41,    41,   151,
      41,    40,   140,    45,    45,    48,    41,    45,    48,    95,
      41,   161,    45,    48,    95,    41,   161,    44,   161,    40,
      41,    41,   151,   151,    40,   151,    40,    40,    45,    41,
     151,   151,    40,   151,    40,    40,    45,    40,    45,    45,
      48,   151,    40,    40,    45,   151,    40,    40,    45,    40,
      45,    45,    48,   151,    40,    40,    45,    40,    45,    45,
      48,    45,    48,    95,    40,    45,    45,    48,    41,   151,
      40,    40,    45,    40,    45,    45,    48,   151,    40,    40,
      45,    40,    45,    45,    48,    45,    48,    95,    40,    45,
      45,    48,    40,    45,    45,    48,    45,    48,    95,    40,
      45,    45,    48,    45,    48,    95,    44,    45,    48,    95,
      41,    41,    41,   151,    41,    41,   151,   151,    40,   151,
      40,    40,    45,   151,    40,    40,    45,    40,    45,    45,
      48,    41,    41,    41,   151,   151,    40,   151,    40,    40,
     140,   151,    40,    40,   140,    40,   140,    45,   151,    40,
      40,    45,    40,    45,    45,    48,    40,    45,    45,    48,
      45,    48,    95,    41,    41,   151,    41,    41,   151,   151,
      40,    40,   140,    40,   140,    45,    40,   140,    45,    45,
      48,    41,    41,   151,    40,    40,   140,    40,   140,    45,
      40,   140,    45,    45,    48,    41,    40,   140,    45,    45,
      48,    41,    45,    48,    95,    41,   161,    41,    41,   151,
      41,   151,   151,    40,    41,    41,   151,    41,   151,   151,
      40,   151,    40,    40,    45,    41,   151,   151,    40,    41,
     151,   151,    40,   151,    40,    40,    45,    41,   151,   151,
      40,   151,    40,    40,    45,    40,    45,    45,    48,   151,
      40,    40,    45,    41,   151,   151,    40,   151,    40,    40,
      45,    41,   151,   151,    40,   151,    40,    40,    45,    40,
      45,    45,    48,   151,    40,    40,    45,   151,    40,    40,
      45,    40,    45,    45,    48,   151,    40,    40,    45,    40,
      45,    45,    48,    45,    48,    95,    40,    45,    45,    48,
      41,    41,    41,   151,    41,   151,   151,    40,    41,   151,
     151,    40,   151,    40,    40,    45,    41,    41,   151,    41,
     151,   151,    40,    41,   151,   151,    40,   151,    40,    40,
     140,    41,   151,   151,    40,   151,    40,    40,    45,   151,
      40,    40,    45,    40,    45,    45,    48,    41,    41,    41,
     151,   151,    40,   151,    40,    40,   140,   151,    40,    40,
     140,    40,   140,    45,    41,   151,   151,    40,   151,    40,
      40,   140,   151,    40,    40,   140,    40,   140,    45,   151,
      40,    40,   140,    40,   140,    45,    40,   140,    45,    45,
      48,    41,    41,    41,    41,   151,    41,    41,    41,   151,
      41,   151,   151,    40,    41,    41,   151,    41,    41,   151,
      41,   151,   151,    40,    41,    41,   151,    41,   151,   151,
      40,   151,    40,    40,    45,    41,   151,   151,    40,    41,
      41,   151,    41,   151,   151,    40,    41,    41,   151,    41,
     151,   151,    40,   151,    40,    40,    45,    41,   151,   151,
      40,    41,   151,   151,    40,   151,    40,    40,    45,    41,
     151,   151,    40,   151,    40,    40,    45,    40,    45,    45,
      48,   151,    40,    40,    45,    41,    41,    41,   151,    41,
      41,   151,    41,   151,   151,    40,    41,    41,    41,   151,
      41,    41,   151,    41,   151,   151,    40,    41,    41,   151,
      41,   151,   151,    40,    41,   151,   151,    40,   151,    40,
      40,    45,    41,    41,   151,    41,   151,   151,    40,    41,
     151,   151,    40,   151,    40,    40,   140,    41,    41,   151,
      41,   151,   151,    40,    41,   151,   151,    40,   151,    40,
      40,   140,    41,   151,   151,    40,   151,    40,    40,   140,
     151,    40,    40,   140,    40,   140,    45,    41,    41,    41,
      41,   151,    41,    41,    41,    41,   151,    41,    41,    41,
     151,    41,   151,   151,    40,    41,    41,   151,    41,    41,
      41,   151,    41,    41,    41,   151,    41,   151,   151,    40,
      41,    41,   151,    41,    41,   151,    41,   151,   151,    40,
      41,    41,   151,    41,   151,   151,    40,   151,    40,    40,
      45,    41,   151,   151,    40,    41,    41,    41,    41,   151,
      41,    41,    41,    41,   151,    41,    41,    41,   151,    41,
      41,   151,    41,   151,   151,    40,    41,    41,    41,   151,
      41,    41,   151,    41,   151,   151,    40,    41,    41,    41,
     151,    41,    41,   151,    41,   151,   151,    40,    41,    41,
     151,    41,   151,   151,    40,    41,   151,   151,    40,   151,
      40,    40,   140,    41,    41,    41,    41,    41,   151,    41,
      41,    41,    41,    41,   151,    41,    41,    41,    41,   151,
      41,    41,    41,   151,    41,   151,   151,    40,    41,    41,
     151,    41,    41,    41,    41,    41,    41,   151,    41,    41,
      41,    41,   151,    41,    41,    41,    41,   151,    41,    41,
      41,   151,    41,    41,   151,    41,   151,   151,    40,    41,
      41,    41,    41,    41,    41,   151,    41,    41,    41,    41,
      41,    41,    41,    41,   151,    41,    41
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_uint8 yyr1[] =
{
       0,    73,    74,    75,    76,    77,    77,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    79,    80,    81,    81,    81,    81,    81,
      82,    83,    83,    84,    85,    85,    85,    85,    85,    86,
      87,    87,    88,    89,    90,    90,    90,    90,    90,    90,
      90,    90,    90,    90,    90,    90,    90,    90,    90,    90,
      90,    90,    90,    90,    90,    90,    90,    90,    90,    90,
      90,    90,    90,    90,    90,    90,    90,    90,    90,    90,
      90,    90,    90,    90,    91,    92,    92,    93,    94,    94,
      95,    96,    96,    97,    97,    97,    97,    97,    97,    97,
      97,    97,    97,    97,    97,    97,    97,    97,    97,    97,
      97,    97,    97,    98,    98,    98,    98,    98,    98,    98,
      98,    99,    99,    99,    99,   100,   101,   102,   103,   104,
     104,   104,   105,   105,   105,   105,   105,   105,   105,   105,
     105,   105,   106,   106,   107,   108,   108,   109,   110,   110,
     111,   112,   113,   114,   115,   116,   116,   117,   118,   119,
     119,   119,   119,   120,   121,   121,   122,   122,   122,   122,
     122,   122,   122,   123,   124,   124,   125,   126,   127,   128,
     128,   128,   128,   128,   129,   130,   130,   131,   132,   132,
     133,   134,   135,   135,   135,   135,   136,   137,   138,   138,
     138,   138,   138,   138,   138,   138,   138,   138,   138,   138,
     138,   138,   138,   138,   138,   138,   138,   138,   138,   138,
     138,   138,   138,   138,   138,   138,   138,   138,   138,   138,
     138,   138,   138,   138,   138,   138,   138,   138,   138,   138,
     138,   138,   138,   138,   138,   138,   138,   138,   138,   138,
     138,   138,   138,   138,   138,   138,   138,   138,   138,   138,
     138,   138,   139,   139,   139,   139,   139,   139,   139,   139,
     139,   139,   139,   139,   139,   139,   139,   139,   140,   141,
     142,   143,   143,   143,   143,   144,   145,   146,   146,   146,
     146,   146,   147,   148,   148,   149,   150,   151,   152,   153,
     153,   153,   153,   153,   153,   153,   153,   153,   153,   153,
     153,   153,   153,   153,   153,   154,   155,   156,   156,   156,
     156,   157,   158,   158,   159,   160,   160,   160,   160,   160,
     161,   162,   162,   163,   163,   163,   163,   163,   163,   164,
     164,   164,   164,   164,   164,   164,   164,   164,   164,   164,
     164,   165,   166,   166,   166,   166,   166,   166,   167,   167,
     167,   167,   167,   167,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     168,   168,   168,   168,   168,   168,   168,   168,   168,   168,
     169,   169,   169,   169,   169,   169,   169,   169,   169,   169,
     169,   169,   169,   169,   169,   169,   169,   169,   169,   169,
     169,   169,   169,   169,   170,   170,   170,   171,   171,   172,
     173,   174,   174,   174,   174,   174,   174,   175,   176,   176,
     177,   178,   179,   179,   180,   181,   181,   181,   182,   182,
     182,   182,   182,   182,   182,   183,   184,   184,   185,   186,
     186,   187,   188,   189,   189,   189,   189,   189,   189,   189,
     189,   189,   189,   189,   189,   189,   189,   189,   189,   190,
     191,   191,   192,   193,   194,   195,   195,   196,   197,   197,
     197,   197,   198,   199,   200,   201,   202,   202,   203,   204,
     204,   205,   206,   206,   206,   206,   207,   208,   208,   208,
     208,   208,   208,   208,   208,   209,   209,   209,   209,   210,
     210,   210,   210,   211,   212,   212,   213,   214,   215,   215,
     215,   215,   215,   216,   216,   217,   217,   217,   218,   218,
     219,   220,   220,   221,   222,   222,   222,   222,   222,   222,
     223,   223
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     1,     1,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     9,     8,     8,     7,     5,
       2,     3,     0,     3,     1,     1,     1,     1,     1,     7,
       7,     8,     4,     1,    18,    17,    17,    16,    17,    16,
      16,    15,    17,    16,    16,    15,    16,    15,    15,    14,
      14,    13,    13,    12,    17,    16,    16,    15,    16,    15,
      15,    14,    16,    15,    15,    14,    15,    14,    14,    13,
      13,    12,    12,    11,     2,     3,     0,     2,     3,     0,
       2,     3,     0,    13,    12,    12,    11,    12,    11,    11,
      10,    12,    11,    11,    10,    11,    10,    10,     9,     9,
       8,     8,     7,    14,    13,    13,    12,    13,    12,    12,
      11,     9,     8,     8,     7,     2,     2,     2,     1,     3,
       3,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     1,     3,     1,     2,     1,     1,     5,    10,    10,
       1,     1,     1,     5,     2,     3,     0,     1,     1,     4,
       3,     3,     2,     2,     3,     0,     1,     5,     5,     8,
       7,     7,     6,     2,     3,     0,     1,     1,     1,     7,
       6,     6,     5,     3,     2,     3,     0,     1,     2,     1,
       1,     1,     5,     3,     4,     2,     3,     1,    19,    18,
      18,    17,    18,    17,    17,    16,    18,    17,    17,    16,
      17,    16,    16,    15,    18,    17,    17,    16,    17,    16,
      16,    15,    17,    16,    16,    15,    16,    15,    15,    14,
      18,    17,    17,    16,    17,    16,    16,    15,    17,    16,
      16,    15,    16,    15,    15,    14,    17,    16,    16,    15,
      16,    15,    15,    14,    16,    15,    15,    14,    15,    14,
      14,    13,    13,    12,    12,    11,    12,    11,    11,    10,
      12,    11,    11,    10,    11,    10,    10,     9,     1,     1,
       1,     5,     3,     4,     2,     1,     1,     7,     6,     6,
       5,     3,     2,     3,     0,     1,     1,     1,     1,    14,
      13,    13,    12,    13,    12,    12,    11,    13,    12,    12,
      11,    12,    11,    11,    10,     2,     1,     8,     7,     7,
       6,     2,     3,     0,     1,     1,     1,     2,     2,     0,
       1,     2,     0,     1,     1,     1,     1,     1,     1,     6,
       4,     5,     3,     6,     4,     5,     3,     5,     3,     4,
       2,     1,     3,     2,     3,     2,     2,     1,     3,     2,
       3,     2,     2,     1,    14,    13,    13,    12,    13,    12,
      12,    11,    13,    12,    12,    11,    12,    11,    11,    10,
      13,    12,    12,    11,    12,    11,    11,    10,    12,    11,
      11,    10,    11,    10,    10,     9,    15,    14,    14,    13,
      14,    13,    13,    12,    14,    13,    13,    12,    13,    12,
      12,    11,    14,    13,    13,    12,    13,    12,    12,    11,
      13,    12,    12,    11,    12,    11,    11,    10,    14,    13,
      13,    12,    13,    12,    12,    11,    13,    12,    12,    11,
      12,    11,    11,    10,    13,    12,    12,    11,    12,    11,
      11,    10,    12,    11,    11,    10,    11,    10,    10,     9,
       9,     8,     8,     7,     8,     7,     7,     6,    10,     9,
       9,     8,     9,     8,     8,     7,     9,     8,     8,     7,
       8,     7,     7,     6,     1,     1,     1,     1,     1,     2,
       1,     2,     4,     7,     6,     6,     5,     2,     3,     0,
       1,     1,     5,     4,     2,     3,     2,     0,     1,     4,
       3,     7,     6,     6,     5,     2,     3,     0,     2,     3,
       0,     1,     1,    12,    11,    11,    10,    11,    10,    10,
       9,    11,    10,    10,     9,    10,     9,     9,     8,     2,
       3,     0,     1,     1,     6,     2,     0,     1,     4,     3,
       2,     1,     1,     1,     1,     2,     3,     0,     2,     2,
       0,     2,     1,     1,     1,     1,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
       3,     3,     2,     2,     3,     0,     3,     3,     2,     3,
       2,     3,     2,     2,     0,     1,     1,     1,     2,     1,
       2,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       4,     3
};


/* YYDPREC[RULE-NUM] -- Dynamic precedence of rule #RULE-NUM (0 if none).  */
static const yytype_int8 yydprec[] =
{
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0
};

/* YYMERGER[RULE-NUM] -- Index of merging function for rule #RULE-NUM.  */
static const yytype_int8 yymerger[] =
{
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0
};

/* YYIMMEDIATE[RULE-NUM] -- True iff rule #RULE-NUM is not to be deferred, as
   in the case of predicates.  */
static const yybool yyimmediate[] =
{
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0
};

/* YYCONFLP[YYPACT[STATE-NUM]] -- Pointer into YYCONFL of start of
   list of conflicting reductions corresponding to action entry for
   state STATE-NUM in yytable.  0 means no conflicts.  The list in
   yyconfl is terminated by a rule number of 0.  */
static const yytype_int16 yyconflp[] =
{
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    71,     0,     0,     0,     0,     0,
       0,     0,    73,     0,     0,    37,     0,     0,     0,     0,
      75,     0,     0,    39,     0,     0,     0,     0,     0,     0,
       0,    41,     0,     0,     0,     0,    77,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    79,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    43,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    97,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   237,
       0,     0,     0,     0,     0,   239,     0,   241,     0,     0,
       0,     0,     0,     0,     0,   243,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   245,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    45,     0,     0,     0,     0,     0,     0,     0,
      47,     0,     0,     0,     0,     0,     0,     0,    49,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    69,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      51,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     141,     0,     0,     0,     0,     0,   143,     0,   145,    87,
       0,     0,     0,     0,     0,     0,   147,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    99,     0,     0,     0,     0,     0,
       0,     0,     0,   101,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   149,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    23,     0,    25,     0,    27,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    81,     0,    83,     0,    85,
       0,     0,     0,     0,     0,     0,     0,     0,   113,     0,
     115,     0,   117,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   111,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   119,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   121,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   139,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   227,     0,     0,
       0,     0,     0,   229,     0,   231,     0,     0,     0,     0,
       0,     0,     0,   233,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   235,   151,     0,     0,     0,
       0,     0,     0,     0,   153,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     1,     0,
       0,     0,     0,     0,     0,     0,     3,     0,     0,     0,
       0,     0,     0,     0,     5,     0,     0,     0,     0,     0,
       0,   187,     0,     0,     0,   189,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     7,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   223,     0,     0,     0,   225,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     9,     0,    11,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   257,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     269,     0,   247,     0,     0,     0,     0,     0,   249,     0,
     251,     0,     0,     0,     0,     0,     0,     0,   253,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   287,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     255,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   371,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   405,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   259,     0,     0,     0,     0,     0,   261,     0,
     263,     0,     0,     0,     0,     0,     0,     0,   265,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   447,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     267,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   489,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,    15,     0,     0,     0,
       0,     0,     0,     0,    17,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,    33,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    35,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    53,     0,     0,     0,     0,
       0,     0,     0,    55,     0,     0,     0,     0,     0,     0,
       0,    57,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    59,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   845,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   855,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     337,     0,     0,     0,     0,     0,   339,     0,   341,     0,
       0,     0,     0,     0,     0,     0,   343,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   345,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      61,     0,     0,     0,     0,     0,     0,     0,    63,     0,
       0,     0,     0,     0,     0,     0,    65,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    67,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,     0,     0,     0,     0,
       0,     0,     0,    91,     0,     0,     0,     0,     0,     0,
       0,    93,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    95,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   103,     0,     0,     0,
       0,     0,     0,     0,   105,     0,     0,     0,     0,     0,
       0,     0,   107,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   109,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   123,     0,     0,     0,     0,     0,     0,     0,
     125,     0,     0,     0,     0,     0,     0,     0,   127,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     129,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   131,     0,     0,     0,     0,     0,     0,     0,   133,
       0,     0,     0,     0,     0,     0,     0,   135,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   137,
       0,     0,     0,     0,     0,     0,     0,     0,   155,     0,
       0,     0,     0,     0,     0,     0,   157,     0,     0,     0,
       0,     0,     0,     0,   159,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   161,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   163,     0,     0,     0,     0,     0,     0,
       0,   165,     0,     0,     0,     0,     0,     0,     0,   167,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   531,     0,     0,
       0,     0,     0,   533,     0,   535,     0,     0,     0,     0,
       0,   169,     0,   537,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   539,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   171,
       0,     0,     0,     0,     0,     0,     0,   173,     0,     0,
       0,     0,     0,     0,     0,   175,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   179,     0,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,   183,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   185,     0,     0,   191,     0,     0,     0,
       0,     0,     0,     0,   193,     0,     0,     0,     0,     0,
       0,     0,   195,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   199,     0,     0,     0,     0,     0,     0,     0,   201,
       0,     0,     0,     0,   197,     0,     0,   203,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   205,
       0,     0,   207,     0,     0,     0,     0,     0,     0,     0,
     209,     0,     0,     0,     0,     0,     0,     0,   211,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   215,     0,
       0,     0,     0,     0,     0,     0,   217,     0,     0,     0,
       0,     0,     0,     0,   219,     0,     0,     0,     0,     0,
     213,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   271,     0,     0,     0,     0,     0,
       0,     0,   273,     0,     0,     0,     0,     0,     0,     0,
     275,     0,     0,     0,     0,     0,   221,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   279,
       0,     0,     0,     0,     0,     0,     0,   281,     0,     0,
       0,     0,   277,     0,     0,   283,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   289,     0,     0,     0,     0,
       0,     0,     0,   291,     0,     0,     0,   285,     0,     0,
       0,   293,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     297,     0,     0,     0,     0,     0,     0,     0,   299,     0,
       0,     0,     0,   295,     0,     0,   301,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   305,     0,     0,     0,     0,
       0,     0,     0,   307,     0,     0,     0,     0,   303,     0,
       0,   309,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   313,     0,     0,     0,     0,     0,     0,     0,   315,
       0,     0,     0,     0,     0,     0,     0,   317,     0,     0,
       0,     0,     0,   311,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   321,     0,     0,     0,
       0,     0,     0,     0,   323,     0,     0,     0,     0,   319,
       0,     0,   325,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   329,     0,     0,     0,     0,     0,     0,     0,
     331,     0,     0,     0,     0,     0,     0,     0,   333,     0,
       0,     0,     0,     0,   327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   347,     0,     0,
       0,     0,     0,     0,     0,   349,     0,     0,     0,     0,
     335,     0,     0,   351,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   355,     0,     0,     0,     0,     0,     0,     0,
     357,     0,     0,     0,     0,   353,     0,     0,   359,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   363,     0,     0,
       0,     0,     0,     0,     0,   365,     0,     0,     0,     0,
     361,     0,     0,   367,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   373,     0,     0,     0,     0,     0,     0,     0,
     375,     0,     0,     0,     0,   369,     0,     0,   377,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   381,     0,     0,
       0,     0,     0,     0,     0,   383,     0,     0,     0,     0,
     379,     0,     0,   385,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   389,     0,     0,     0,     0,     0,     0,     0,
     391,     0,     0,     0,     0,   387,     0,     0,   393,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   397,     0,     0,
       0,     0,     0,     0,     0,   399,     0,     0,     0,     0,
     395,     0,     0,   401,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
     409,     0,     0,     0,     0,   403,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   415,     0,     0,
       0,     0,     0,     0,     0,   417,     0,     0,     0,     0,
     413,     0,     0,   419,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   423,     0,     0,     0,     0,     0,     0,     0,
     425,     0,     0,     0,     0,   421,     0,     0,   427,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   431,     0,     0,
       0,     0,     0,     0,     0,   433,     0,     0,     0,     0,
     429,     0,     0,   435,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   439,     0,     0,     0,     0,     0,     0,     0,
     441,     0,     0,     0,     0,   437,     0,     0,   443,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   449,     0,     0,
       0,     0,     0,     0,     0,   451,     0,     0,     0,     0,
     445,     0,     0,   453,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,     0,     0,     0,     0,     0,     0,     0,
     459,     0,     0,     0,     0,   455,     0,     0,   461,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   465,     0,     0,
       0,     0,     0,     0,     0,   467,     0,     0,     0,     0,
     463,     0,     0,   469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   473,     0,     0,     0,     0,     0,     0,     0,
     475,     0,     0,     0,     0,   471,     0,     0,   477,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   481,     0,     0,
       0,     0,     0,     0,     0,   483,     0,     0,     0,     0,
     479,     0,     0,   485,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   491,     0,     0,     0,     0,     0,     0,     0,
     493,     0,     0,     0,     0,   487,     0,     0,   495,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   499,     0,     0,
       0,     0,     0,     0,     0,   501,     0,     0,     0,     0,
     497,     0,     0,   503,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   507,     0,     0,     0,     0,     0,     0,     0,
     509,     0,     0,     0,     0,   505,     0,     0,   511,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   515,     0,     0,
       0,     0,     0,     0,     0,   517,     0,     0,     0,     0,
     513,     0,     0,   519,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   523,     0,     0,     0,     0,     0,     0,     0,
     525,     0,     0,     0,     0,   521,     0,     0,   527,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   541,     0,     0,
       0,     0,     0,     0,     0,   543,     0,     0,     0,     0,
     529,     0,     0,   545,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   549,     0,     0,     0,     0,     0,     0,     0,
     551,     0,     0,     0,     0,   547,     0,     0,   553,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   557,     0,     0,
       0,     0,     0,     0,     0,   559,     0,     0,     0,     0,
     555,     0,     0,   561,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   565,     0,     0,     0,     0,     0,     0,     0,
     567,     0,     0,     0,     0,   563,     0,     0,   569,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   573,     0,     0,
       0,     0,     0,     0,     0,   575,     0,     0,     0,     0,
     571,     0,     0,   577,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   581,     0,     0,     0,     0,     0,     0,     0,
     583,     0,     0,     0,     0,   579,     0,     0,   585,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   589,     0,     0,
       0,     0,     0,     0,     0,   591,     0,     0,     0,     0,
     587,     0,     0,   593,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   597,     0,     0,     0,     0,     0,     0,     0,
     599,     0,     0,     0,     0,   595,     0,     0,   601,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   605,     0,     0,
       0,     0,     0,     0,     0,   607,     0,     0,     0,     0,
     603,     0,     0,   609,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   613,     0,     0,     0,     0,     0,     0,     0,
     615,     0,     0,     0,     0,   611,     0,     0,   617,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   621,     0,     0,
       0,     0,     0,     0,     0,   623,     0,     0,     0,     0,
     619,     0,     0,   625,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   629,     0,     0,     0,     0,     0,     0,     0,
     631,     0,     0,     0,     0,   627,     0,     0,   633,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   637,     0,     0,
       0,     0,     0,     0,     0,   639,     0,     0,     0,     0,
     635,     0,     0,   641,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   645,     0,     0,     0,     0,     0,     0,     0,
     647,     0,     0,     0,     0,   643,     0,     0,   649,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   653,     0,     0,
       0,     0,     0,     0,     0,   655,     0,     0,     0,     0,
     651,     0,     0,   657,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   661,     0,     0,     0,     0,     0,     0,     0,
     663,     0,     0,     0,     0,   659,     0,     0,   665,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   669,     0,     0,
       0,     0,     0,     0,     0,   671,     0,     0,     0,     0,
     667,     0,     0,   673,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   677,     0,     0,     0,     0,     0,     0,     0,
     679,     0,     0,     0,     0,   675,     0,     0,   681,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   685,     0,     0,
       0,     0,     0,     0,     0,   687,     0,     0,     0,     0,
     683,     0,     0,   689,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   693,     0,     0,     0,     0,     0,     0,     0,
     695,     0,     0,     0,     0,   691,     0,     0,   697,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   701,     0,     0,
       0,     0,     0,     0,     0,   703,     0,     0,     0,     0,
     699,     0,     0,   705,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   709,     0,     0,     0,     0,     0,     0,     0,
     711,     0,     0,     0,     0,   707,     0,     0,   713,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   717,     0,     0,
       0,     0,     0,     0,     0,   719,     0,     0,     0,     0,
     715,     0,     0,   721,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   755,     0,     0,     0,     0,     0,     0,     0,
     757,     0,     0,     0,     0,   723,     0,     0,   759,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   763,     0,     0,
       0,     0,     0,     0,     0,   765,     0,     0,     0,     0,
     761,     0,     0,   767,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   771,     0,     0,     0,     0,     0,     0,     0,
     773,     0,     0,     0,     0,   769,     0,     0,   775,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   779,     0,     0,
       0,     0,     0,     0,     0,   781,     0,     0,     0,     0,
     777,     0,     0,   783,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   787,     0,     0,     0,     0,     0,     0,     0,
     789,     0,     0,     0,     0,   785,     0,     0,   791,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   795,     0,     0,
       0,     0,     0,     0,     0,   797,     0,     0,     0,     0,
     793,     0,     0,   799,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   813,     0,     0,     0,     0,     0,     0,     0,
     815,     0,     0,     0,     0,   801,     0,     0,   817,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   821,     0,     0,
       0,     0,     0,     0,     0,   823,     0,     0,     0,     0,
     819,     0,     0,   825,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   829,     0,     0,     0,     0,     0,     0,     0,
     831,     0,     0,     0,     0,   827,     0,     0,   833,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   837,     0,     0,
       0,     0,     0,     0,     0,   839,     0,     0,     0,     0,
     835,     0,     0,   841,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   847,     0,     0,     0,     0,     0,     0,     0,
     849,     0,     0,     0,     0,   843,     0,     0,   851,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   857,     0,     0,
       0,     0,     0,     0,     0,   859,     0,     0,     0,     0,
     853,     0,     0,   861,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   865,     0,     0,     0,     0,     0,     0,     0,
     867,     0,     0,     0,     0,   863,     0,     0,   869,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   873,     0,     0,
       0,     0,     0,     0,     0,   875,     0,     0,     0,     0,
     871,     0,     0,   877,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   881,     0,     0,     0,     0,     0,     0,     0,
     883,     0,     0,     0,     0,   879,     0,     0,   885,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   889,     0,     0,
       0,     0,     0,     0,     0,   891,     0,     0,     0,     0,
     887,     0,     0,   893,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   897,     0,     0,     0,     0,     0,     0,     0,
     899,     0,     0,     0,     0,   895,     0,     0,   901,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   905,     0,     0,
       0,     0,     0,     0,     0,   907,     0,     0,     0,     0,
     903,     0,     0,   909,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   913,     0,     0,     0,     0,     0,     0,     0,
     915,     0,     0,     0,     0,   911,     0,     0,   917,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   921,     0,     0,
       0,     0,     0,     0,     0,   923,     0,     0,     0,     0,
     919,     0,     0,   925,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   929,     0,     0,     0,     0,     0,     0,     0,
     931,     0,     0,     0,     0,   927,     0,     0,   933,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   937,     0,     0,
       0,     0,     0,     0,     0,   939,     0,     0,     0,     0,
     935,     0,     0,   941,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   945,     0,     0,     0,     0,     0,     0,     0,
     947,     0,     0,     0,     0,   943,     0,     0,   949,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   953,     0,     0,
       0,     0,     0,     0,     0,   955,     0,     0,     0,     0,
     951,     0,     0,   957,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   971,     0,     0,     0,     0,     0,     0,     0,
     973,     0,     0,     0,     0,   959,     0,     0,   975,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   979,     0,     0,
       0,     0,     0,     0,     0,   981,     0,     0,     0,     0,
     977,     0,     0,   983,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1007,     0,     0,     0,     0,     0,     0,     0,
    1009,     0,     0,     0,     0,   985,     0,     0,  1011,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1015,     0,     0,
       0,     0,     0,     0,     0,  1017,     0,     0,     0,     0,
    1013,     0,     0,  1019,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
    1025,     0,     0,     0,     0,  1021,     0,     0,  1027,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1031,     0,     0,
       0,     0,     0,     0,     0,  1033,     0,     0,     0,     0,
    1029,     0,     0,  1035,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1069,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,  1037,     0,     0,  1073,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,  1079,     0,     0,     0,     0,
    1075,     0,     0,  1081,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1085,     0,     0,     0,     0,     0,     0,     0,
    1087,     0,     0,     0,     0,  1083,     0,     0,  1089,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1093,     0,     0,
       0,     0,     0,     0,     0,  1095,     0,     0,     0,     0,
    1091,     0,     0,  1097,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1101,     0,     0,     0,     0,     0,     0,     0,
    1103,     0,     0,     0,     0,  1099,     0,     0,  1105,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1109,     0,     0,
       0,     0,     0,     0,     0,  1111,     0,     0,     0,     0,
    1107,     0,     0,  1113,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1117,     0,     0,     0,     0,     0,     0,     0,
    1119,     0,     0,     0,     0,  1115,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,  1127,     0,     0,     0,     0,
    1123,     0,     0,  1129,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1133,     0,     0,     0,     0,     0,     0,     0,
    1135,     0,     0,     0,     0,  1131,     0,     0,  1137,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1141,     0,     0,
       0,     0,     0,     0,     0,  1143,     0,     0,     0,     0,
    1139,     0,     0,  1145,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1149,     0,     0,     0,     0,     0,     0,     0,
    1151,     0,     0,     0,     0,  1147,     0,     0,  1153,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1157,     0,     0,
       0,     0,     0,     0,     0,  1159,     0,     0,     0,     0,
    1155,     0,     0,  1161,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1165,     0,     0,     0,     0,     0,     0,     0,
    1167,     0,     0,     0,     0,  1163,     0,     0,  1169,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1173,     0,     0,
       0,     0,     0,     0,     0,  1175,     0,     0,     0,     0,
    1171,     0,     0,  1177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1181,     0,     0,     0,     0,     0,     0,     0,
    1183,     0,     0,     0,     0,  1179,     0,     0,  1185,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1189,     0,     0,
       0,     0,     0,     0,     0,  1191,     0,     0,     0,     0,
    1187,     0,     0,  1193,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1207,     0,     0,     0,     0,     0,     0,     0,
    1209,     0,     0,     0,     0,  1195,     0,     0,  1211,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1245,     0,     0,
       0,     0,     0,     0,     0,  1247,     0,     0,     0,     0,
    1213,     0,     0,  1249,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1253,     0,     0,     0,     0,     0,     0,     0,
    1255,     0,     0,     0,     0,  1251,     0,     0,  1257,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1261,     0,     0,
       0,     0,     0,     0,     0,  1263,     0,     0,     0,     0,
    1259,     0,     0,  1265,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1269,     0,     0,     0,     0,     0,     0,     0,
    1271,     0,     0,     0,     0,  1267,     0,     0,  1273,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1277,     0,     0,
       0,     0,     0,     0,     0,  1279,     0,     0,     0,     0,
    1275,     0,     0,  1281,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1285,     0,     0,     0,     0,     0,     0,     0,
    1287,     0,     0,     0,     0,  1283,     0,     0,  1289,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1293,     0,     0,
       0,     0,     0,     0,     0,  1295,     0,     0,     0,     0,
    1291,     0,     0,  1297,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1301,     0,     0,     0,     0,     0,     0,     0,
    1303,     0,     0,     0,     0,  1299,     0,     0,  1305,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1309,     0,     0,
       0,     0,     0,     0,     0,  1311,     0,     0,     0,     0,
    1307,     0,     0,  1313,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1317,     0,     0,     0,     0,     0,     0,     0,
    1319,     0,     0,     0,     0,  1315,     0,     0,  1321,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1325,     0,     0,
       0,     0,     0,     0,     0,  1327,     0,     0,     0,     0,
    1323,     0,     0,  1329,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1333,     0,     0,     0,     0,     0,     0,     0,
    1335,     0,     0,     0,     0,  1331,     0,     0,  1337,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1341,     0,     0,
       0,     0,     0,     0,     0,  1343,     0,     0,     0,     0,
    1339,     0,     0,  1345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1349,     0,     0,     0,     0,     0,     0,     0,
    1351,     0,     0,     0,     0,  1347,     0,     0,  1353,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1357,     0,     0,
       0,     0,     0,     0,     0,  1359,     0,     0,     0,     0,
    1355,     0,     0,  1361,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1365,     0,     0,     0,     0,     0,     0,     0,
    1367,     0,     0,     0,     0,  1363,     0,     0,  1369,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1373,     0,     0,
       0,     0,     0,     0,     0,  1375,     0,     0,     0,     0,
    1371,     0,     0,  1377,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1381,     0,     0,     0,     0,     0,     0,     0,
    1383,     0,     0,     0,     0,  1379,     0,     0,  1385,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1389,     0,     0,
       0,     0,     0,     0,     0,  1391,     0,     0,     0,     0,
    1387,     0,     0,  1393,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1397,     0,     0,     0,     0,     0,     0,     0,
    1399,     0,     0,     0,     0,  1395,     0,     0,  1401,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1405,     0,     0,
       0,     0,     0,     0,     0,  1407,     0,     0,     0,     0,
    1403,     0,     0,  1409,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1413,     0,     0,     0,     0,     0,     0,     0,
    1415,     0,     0,     0,     0,  1411,     0,     0,  1417,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1421,     0,     0,
       0,     0,     0,     0,     0,  1423,     0,     0,     0,     0,
    1419,     0,     0,  1425,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1429,     0,     0,     0,     0,     0,     0,     0,
    1431,     0,     0,     0,     0,  1427,     0,     0,  1433,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1437,     0,     0,
       0,     0,     0,     0,     0,  1439,     0,     0,     0,     0,
    1435,     0,     0,  1441,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1455,     0,     0,     0,     0,     0,     0,     0,
    1457,     0,     0,     0,     0,  1443,     0,     0,  1459,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1463,     0,     0,
       0,     0,     0,     0,     0,  1465,     0,     0,     0,     0,
    1461,     0,     0,  1467,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1471,     0,     0,     0,     0,     0,     0,     0,
    1473,     0,     0,     0,     0,  1469,     0,     0,  1475,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1479,     0,     0,
       0,     0,     0,     0,     0,  1481,     0,     0,     0,     0,
    1477,     0,     0,  1483,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1487,     0,     0,     0,     0,     0,     0,     0,
    1489,     0,     0,     0,     0,  1485,     0,     0,  1491,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1495,     0,     0,
       0,     0,     0,     0,     0,  1497,     0,     0,     0,     0,
    1493,     0,     0,  1499,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1503,     0,     0,     0,     0,     0,     0,     0,
    1505,     0,     0,     0,     0,  1501,     0,     0,  1507,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1511,     0,     0,
       0,     0,     0,     0,     0,  1513,     0,     0,     0,     0,
    1509,     0,     0,  1515,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1519,     0,     0,     0,     0,     0,     0,     0,
    1521,     0,     0,     0,     0,  1517,     0,     0,  1523,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1527,     0,     0,
       0,     0,     0,     0,     0,  1529,     0,     0,     0,     0,
    1525,     0,     0,  1531,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1535,     0,     0,     0,     0,     0,     0,     0,
    1537,     0,     0,     0,     0,  1533,     0,     0,  1539,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1543,     0,     0,
       0,     0,     0,     0,     0,  1545,     0,     0,     0,     0,
    1541,     0,     0,  1547,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,     0,     0,     0,     0,     0,
    1553,     0,     0,     0,     0,  1549,     0,     0,  1555,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1559,     0,     0,
       0,     0,     0,     0,     0,  1561,     0,     0,     0,     0,
    1557,     0,     0,  1563,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1567,     0,     0,     0,     0,     0,     0,     0,
    1569,     0,     0,     0,     0,  1565,     0,     0,  1571,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1575,     0,     0,
       0,     0,     0,     0,     0,  1577,     0,     0,     0,     0,
    1573,     0,     0,  1579,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1583,     0,     0,     0,     0,     0,     0,     0,
    1585,     0,     0,     0,     0,  1581,     0,     0,  1587,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1591,     0,     0,
       0,     0,     0,     0,     0,  1593,     0,     0,     0,     0,
    1589,     0,     0,  1595,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1599,     0,     0,     0,     0,     0,     0,     0,
    1601,     0,     0,     0,     0,  1597,     0,     0,  1603,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1607,     0,     0,
       0,     0,     0,     0,     0,  1609,     0,     0,     0,     0,
    1605,     0,     0,  1611,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1615,     0,     0,     0,     0,     0,     0,     0,
    1617,     0,     0,     0,     0,  1613,     0,     0,  1619,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1623,     0,     0,
       0,     0,     0,     0,     0,  1625,     0,     0,     0,     0,
    1621,     0,     0,  1627,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1631,     0,     0,     0,     0,     0,     0,     0,
    1633,     0,     0,     0,     0,  1629,     0,     0,  1635,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1639,     0,     0,
       0,     0,     0,     0,     0,  1641,     0,     0,     0,     0,
    1637,     0,     0,  1643,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1647,     0,     0,     0,     0,     0,     0,     0,
    1649,     0,     0,     0,     0,  1645,     0,     0,  1651,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1655,     0,     0,
       0,     0,     0,     0,     0,  1657,     0,     0,     0,     0,
    1653,     0,     0,  1659,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1663,     0,     0,     0,     0,     0,     0,     0,
    1665,     0,     0,     0,     0,  1661,     0,     0,  1667,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1671,     0,     0,
       0,     0,     0,     0,     0,  1673,     0,     0,     0,     0,
    1669,     0,     0,  1675,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1679,     0,     0,     0,     0,     0,     0,     0,
    1681,     0,     0,     0,     0,  1677,     0,     0,  1683,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1687,     0,     0,
       0,     0,     0,     0,     0,  1689,     0,     0,     0,     0,
    1685,     0,     0,  1691,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1695,     0,     0,     0,     0,     0,     0,     0,
    1697,     0,     0,     0,     0,  1693,     0,     0,  1699,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1703,     0,     0,
       0,     0,     0,     0,     0,  1705,     0,     0,     0,     0,
    1701,     0,     0,  1707,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1711,     0,     0,     0,     0,     0,     0,     0,
    1713,     0,     0,     0,     0,  1709,     0,     0,  1715,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1719,     0,     0,
       0,     0,     0,     0,     0,  1721,     0,     0,     0,     0,
    1717,     0,     0,  1723,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1727,     0,     0,     0,     0,     0,     0,     0,
    1729,     0,     0,     0,     0,  1725,     0,     0,  1731,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1735,     0,     0,
       0,     0,     0,     0,     0,  1737,     0,     0,     0,     0,
    1733,     0,     0,  1739,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1743,     0,     0,     0,     0,     0,     0,     0,
    1745,     0,     0,     0,     0,  1741,     0,     0,  1747,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1751,     0,     0,
       0,     0,     0,     0,     0,  1753,     0,     0,     0,     0,
    1749,     0,     0,  1755,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1759,     0,     0,     0,     0,     0,     0,     0,
    1761,     0,     0,     0,     0,  1757,     0,     0,  1763,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1767,     0,     0,
       0,     0,     0,     0,     0,  1769,     0,     0,     0,     0,
    1765,     0,     0,  1771,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1775,     0,     0,     0,     0,     0,     0,     0,
    1777,     0,     0,     0,     0,  1773,     0,     0,  1779,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1783,     0,     0,
       0,     0,     0,     0,     0,  1785,     0,     0,     0,     0,
    1781,     0,     0,  1787,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1791,     0,     0,     0,     0,     0,     0,     0,
    1793,     0,     0,     0,     0,  1789,     0,     0,  1795,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1799,     0,     0,
       0,     0,     0,     0,     0,  1801,     0,     0,     0,     0,
    1797,     0,     0,  1803,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1807,     0,     0,     0,     0,     0,     0,     0,
    1809,     0,     0,     0,     0,  1805,     0,     0,  1811,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1815,     0,     0,
       0,     0,     0,     0,     0,  1817,     0,     0,     0,     0,
    1813,     0,     0,  1819,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1823,     0,     0,     0,     0,     0,     0,     0,
    1825,     0,     0,     0,     0,  1821,     0,     0,  1827,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1831,     0,     0,
       0,     0,     0,     0,     0,  1833,     0,     0,     0,     0,
    1829,     0,     0,  1835,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1839,     0,     0,     0,     0,     0,     0,     0,
    1841,     0,     0,     0,     0,  1837,     0,     0,  1843,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1847,     0,     0,
       0,     0,     0,     0,     0,  1849,     0,     0,     0,     0,
    1845,     0,     0,  1851,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1855,     0,     0,     0,     0,     0,     0,     0,
    1857,     0,     0,     0,     0,  1853,     0,     0,  1859,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1863,     0,     0,
       0,     0,     0,     0,     0,  1865,     0,     0,     0,     0,
    1861,     0,     0,  1867,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1871,     0,     0,     0,     0,     0,     0,     0,
    1873,     0,     0,     0,     0,  1869,     0,     0,  1875,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1879,     0,     0,
       0,     0,     0,     0,     0,  1881,     0,     0,     0,     0,
    1877,     0,     0,  1883,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1887,     0,     0,     0,     0,     0,     0,     0,
    1889,     0,     0,     0,     0,  1885,     0,     0,  1891,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1895,     0,     0,
       0,     0,     0,     0,     0,  1897,     0,     0,     0,     0,
    1893,     0,     0,  1899,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1903,     0,     0,     0,     0,     0,     0,     0,
    1905,     0,     0,     0,     0,  1901,     0,     0,  1907,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1911,     0,     0,
       0,     0,     0,     0,     0,  1913,     0,     0,     0,     0,
    1909,     0,     0,  1915,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1919,     0,     0,     0,     0,     0,     0,     0,
    1921,     0,     0,     0,     0,  1917,     0,     0,  1923,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1927,     0,     0,
       0,     0,     0,     0,     0,  1929,     0,     0,     0,     0,
    1925,     0,     0,  1931,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1935,     0,     0,     0,     0,     0,     0,     0,
    1937,     0,     0,     0,     0,  1933,     0,     0,  1939,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1943,     0,     0,
       0,     0,     0,     0,     0,  1945,     0,     0,     0,     0,
    1941,     0,     0,  1947,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1951,     0,     0,     0,     0,     0,     0,     0,
    1953,     0,     0,     0,     0,  1949,     0,     0,  1955,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1959,     0,     0,
       0,     0,     0,     0,     0,  1961,     0,     0,     0,     0,
    1957,     0,     0,  1963,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1967,     0,     0,     0,     0,     0,     0,     0,
    1969,     0,     0,     0,     0,  1965,     0,     0,  1971,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1975,     0,     0,
       0,     0,     0,     0,     0,  1977,     0,     0,     0,     0,
    1973,     0,     0,  1979,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1983,     0,     0,     0,     0,     0,     0,     0,
    1985,     0,     0,     0,     0,  1981,     0,     0,  1987,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1991,     0,     0,
       0,     0,     0,     0,     0,  1993,     0,     0,     0,     0,
    1989,     0,     0,  1995,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1999,     0,     0,     0,     0,     0,     0,     0,
    2001,     0,     0,     0,     0,  1997,     0,     0,  2003,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2007,     0,     0,
       0,     0,     0,     0,     0,  2009,     0,     0,     0,     0,
    2005,     0,     0,  2011,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2015,     0,     0,     0,     0,     0,     0,     0,
    2017,     0,     0,     0,     0,  2013,     0,     0,  2019,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2023,     0,     0,
       0,     0,     0,     0,     0,  2025,     0,     0,     0,     0,
    2021,     0,     0,  2027,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2031,     0,     0,     0,     0,     0,     0,     0,
    2033,     0,     0,     0,     0,  2029,     0,     0,  2035,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2039,     0,     0,
       0,     0,     0,     0,     0,  2041,     0,     0,     0,     0,
    2037,     0,     0,  2043,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2047,     0,     0,     0,     0,     0,     0,     0,
    2049,     0,     0,     0,     0,  2045,     0,     0,  2051,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2055,     0,     0,
       0,     0,     0,     0,     0,  2057,     0,     0,     0,     0,
    2053,     0,     0,  2059,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2063,     0,     0,     0,     0,     0,     0,     0,
    2065,     0,     0,     0,     0,  2061,     0,     0,  2067,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2071,     0,     0,
       0,     0,     0,     0,     0,  2073,     0,     0,     0,     0,
    2069,     0,     0,  2075,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2079,     0,     0,     0,     0,     0,     0,     0,
    2081,     0,     0,     0,     0,  2077,     0,     0,  2083,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2087,     0,     0,
       0,     0,     0,     0,     0,  2089,     0,     0,     0,     0,
    2085,     0,     0,  2091,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2095,     0,     0,     0,     0,     0,     0,     0,
    2097,     0,     0,     0,     0,  2093,     0,     0,  2099,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2103,     0,     0,
       0,     0,     0,     0,     0,  2105,     0,     0,     0,     0,
    2101,     0,     0,  2107,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2111,     0,     0,     0,     0,     0,     0,     0,
    2113,     0,     0,     0,     0,  2109,     0,     0,  2115,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2119,     0,     0,
       0,     0,     0,     0,     0,  2121,     0,     0,     0,     0,
    2117,     0,     0,  2123,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2127,     0,     0,     0,     0,     0,     0,     0,
    2129,     0,     0,     0,     0,  2125,     0,     0,  2131,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2135,     0,     0,
       0,     0,     0,     0,     0,  2137,     0,     0,     0,     0,
    2133,     0,     0,  2139,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2143,     0,     0,     0,     0,     0,     0,     0,
    2145,     0,     0,     0,     0,  2141,     0,     0,  2147,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2151,     0,     0,
       0,     0,     0,     0,     0,  2153,     0,     0,     0,     0,
    2149,     0,     0,  2155,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2159,     0,     0,     0,     0,     0,     0,     0,
    2161,     0,     0,     0,     0,  2157,     0,     0,  2163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2167,     0,     0,
       0,     0,     0,     0,     0,  2169,     0,     0,     0,     0,
    2165,     0,     0,  2171,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2175,     0,     0,     0,     0,     0,     0,     0,
    2177,     0,     0,     0,     0,  2173,     0,     0,  2179,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2183,     0,     0,
       0,     0,     0,     0,     0,  2185,     0,     0,     0,     0,
    2181,     0,     0,  2187,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2191,     0,     0,     0,     0,     0,     0,     0,
    2193,     0,     0,     0,     0,  2189,     0,     0,  2195,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2199,     0,     0,
       0,     0,     0,     0,     0,  2201,     0,     0,     0,     0,
    2197,     0,     0,  2203,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2207,     0,     0,     0,     0,     0,     0,     0,
    2209,     0,     0,     0,     0,  2205,     0,     0,  2211,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2215,     0,     0,
       0,     0,     0,     0,     0,  2217,     0,     0,     0,     0,
    2213,     0,     0,  2219,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2223,     0,     0,     0,     0,     0,     0,     0,
    2225,     0,     0,     0,     0,  2221,     0,     0,  2227,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2231,     0,     0,
       0,     0,     0,     0,     0,  2233,     0,     0,     0,     0,
    2229,     0,     0,  2235,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2239,     0,     0,     0,     0,     0,     0,     0,
    2241,     0,     0,     0,     0,  2237,     0,     0,  2243,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2247,     0,     0,
       0,     0,     0,     0,     0,  2249,     0,     0,     0,     0,
    2245,     0,     0,  2251,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2255,     0,     0,     0,     0,     0,     0,     0,
    2257,     0,     0,     0,     0,  2253,     0,     0,  2259,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2263,     0,     0,
       0,     0,     0,     0,     0,  2265,     0,     0,     0,     0,
    2261,     0,     0,  2267,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2271,     0,     0,     0,     0,     0,     0,     0,
    2273,     0,     0,     0,     0,  2269,     0,     0,  2275,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2279,     0,     0,
       0,     0,     0,     0,     0,  2281,     0,     0,     0,     0,
    2277,     0,     0,  2283,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2287,     0,     0,     0,     0,     0,     0,     0,
    2289,     0,     0,     0,     0,  2285,     0,     0,  2291,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2295,     0,     0,
       0,     0,     0,     0,     0,  2297,     0,     0,     0,     0,
    2293,     0,     0,  2299,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2303,     0,     0,     0,     0,     0,     0,     0,
    2305,     0,     0,     0,     0,  2301,     0,     0,  2307,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2311,     0,     0,
       0,     0,     0,     0,     0,  2313,     0,     0,     0,     0,
    2309,     0,     0,  2315,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2319,     0,     0,     0,     0,     0,     0,     0,
    2321,     0,     0,     0,     0,  2317,     0,     0,  2323,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2327,     0,     0,
       0,     0,     0,     0,     0,  2329,     0,     0,     0,     0,
    2325,     0,     0,  2331,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2335,     0,     0,     0,     0,     0,     0,     0,
    2337,     0,     0,     0,     0,  2333,     0,     0,  2339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2343,     0,     0,
       0,     0,     0,     0,     0,  2345,     0,     0,     0,     0,
    2341,     0,     0,  2347,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2351,     0,     0,     0,     0,     0,     0,     0,
    2353,     0,     0,     0,     0,  2349,     0,     0,  2355,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2359,     0,     0,
       0,     0,     0,     0,     0,  2361,     0,     0,     0,     0,
    2357,     0,     0,  2363,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2367,     0,     0,     0,     0,     0,     0,     0,
    2369,     0,     0,     0,     0,  2365,     0,     0,  2371,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2375,     0,     0,
       0,     0,     0,     0,     0,  2377,     0,     0,     0,     0,
    2373,     0,     0,  2379,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2383,     0,     0,     0,     0,     0,     0,     0,
    2385,     0,     0,     0,     0,  2381,     0,     0,  2387,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2391,     0,     0,
       0,     0,     0,     0,     0,  2393,     0,     0,     0,     0,
    2389,     0,     0,  2395,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2399,     0,     0,     0,     0,     0,     0,     0,
    2401,     0,     0,     0,     0,  2397,     0,     0,  2403,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2407,     0,     0,
       0,     0,     0,     0,     0,  2409,     0,     0,     0,     0,
    2405,     0,     0,  2411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2415,     0,     0,     0,     0,     0,     0,     0,
    2417,     0,     0,     0,     0,  2413,     0,     0,  2419,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2423,     0,     0,
       0,     0,     0,     0,     0,  2425,     0,     0,     0,     0,
    2421,     0,     0,  2427,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2431,     0,     0,     0,     0,     0,     0,     0,
    2433,     0,     0,     0,     0,  2429,     0,     0,  2435,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2439,     0,     0,
       0,     0,     0,     0,     0,  2441,     0,     0,     0,     0,
    2437,     0,     0,  2443,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2447,     0,     0,     0,     0,     0,     0,     0,
    2449,     0,     0,     0,     0,  2445,     0,     0,  2451,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2455,     0,     0,
       0,     0,     0,     0,     0,  2457,     0,     0,     0,     0,
    2453,     0,     0,  2459,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2463,     0,     0,     0,     0,     0,     0,     0,
    2465,     0,     0,     0,     0,  2461,     0,     0,  2467,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2471,     0,     0,
       0,     0,     0,     0,     0,  2473,     0,     0,     0,     0,
    2469,     0,     0,  2475,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2479,     0,     0,     0,     0,     0,     0,     0,
    2481,     0,     0,     0,     0,  2477,     0,     0,  2483,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2487,     0,     0,
       0,     0,     0,     0,     0,  2489,     0,     0,     0,     0,
    2485,     0,     0,  2491,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2495,     0,     0,     0,     0,     0,     0,     0,
    2497,     0,     0,     0,     0,  2493,     0,     0,  2499,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2503,     0,     0,
       0,     0,     0,     0,     0,  2505,     0,     0,     0,     0,
    2501,     0,     0,  2507,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2511,     0,     0,     0,     0,     0,     0,     0,
    2513,     0,     0,     0,     0,  2509,     0,     0,  2515,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2519,     0,     0,
       0,     0,     0,     0,     0,  2521,     0,     0,     0,     0,
    2517,     0,     0,  2523,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2527,     0,     0,     0,     0,     0,     0,     0,
    2529,     0,     0,     0,     0,  2525,     0,     0,  2531,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2535,     0,     0,
       0,     0,     0,     0,     0,  2537,     0,     0,     0,     0,
    2533,     0,     0,  2539,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2543,     0,     0,     0,     0,     0,     0,     0,
    2545,     0,     0,     0,     0,  2541,     0,     0,  2547,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2551,     0,     0,
       0,     0,     0,     0,     0,  2553,     0,     0,     0,     0,
    2549,     0,     0,  2555,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2559,     0,     0,     0,     0,     0,     0,     0,
    2561,     0,     0,     0,     0,  2557,     0,     0,  2563,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2567,     0,     0,
       0,     0,     0,     0,     0,  2569,     0,     0,     0,     0,
    2565,     0,     0,  2571,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2575,     0,     0,     0,     0,     0,     0,     0,
    2577,     0,     0,     0,     0,  2573,     0,     0,  2579,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2583,     0,     0,
       0,     0,     0,     0,     0,  2585,     0,     0,     0,     0,
    2581,     0,     0,  2587,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2591,     0,     0,     0,     0,     0,     0,     0,
    2593,     0,     0,     0,     0,  2589,     0,     0,  2595,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2599,     0,     0,
       0,     0,     0,     0,     0,  2601,     0,     0,     0,     0,
    2597,     0,     0,  2603,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2607,     0,     0,     0,     0,     0,     0,     0,
    2609,     0,     0,     0,     0,  2605,     0,     0,  2611,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2615,     0,     0,
       0,     0,     0,     0,     0,  2617,     0,     0,     0,     0,
    2613,     0,     0,  2619,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2623,     0,     0,     0,     0,     0,     0,     0,
    2625,     0,     0,     0,     0,  2621,     0,     0,  2627,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2631,     0,     0,
       0,     0,     0,     0,     0,  2633,     0,     0,     0,     0,
    2629,     0,     0,  2635,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2639,     0,     0,     0,     0,     0,     0,     0,
    2641,     0,     0,     0,     0,  2637,     0,     0,  2643,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2647,     0,     0,
       0,     0,     0,     0,     0,  2649,     0,     0,     0,     0,
    2645,     0,     0,  2651,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2655,     0,     0,     0,     0,     0,     0,     0,
    2657,     0,     0,     0,     0,  2653,     0,     0,  2659,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2663,     0,     0,
       0,     0,     0,     0,     0,  2665,     0,     0,     0,     0,
    2661,     0,     0,  2667,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2671,     0,     0,     0,     0,     0,     0,     0,
    2673,     0,     0,     0,     0,  2669,     0,     0,  2675,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2679,     0,     0,
       0,     0,     0,     0,     0,  2681,     0,     0,     0,     0,
    2677,     0,     0,  2683,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2687,     0,     0,     0,     0,     0,     0,     0,
    2689,     0,     0,     0,     0,  2685,     0,     0,  2691,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2695,     0,     0,
       0,     0,     0,     0,     0,  2697,     0,     0,     0,     0,
    2693,     0,     0,  2699,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2703,     0,     0,     0,     0,     0,     0,     0,
    2705,     0,     0,     0,     0,  2701,     0,     0,  2707,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2711,     0,     0,
       0,     0,     0,     0,     0,  2713,     0,     0,     0,     0,
    2709,     0,     0,  2715,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2719,     0,     0,     0,     0,     0,     0,     0,
    2721,     0,     0,     0,     0,  2717,     0,     0,  2723,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2727,     0,     0,
       0,     0,     0,     0,     0,  2729,     0,     0,     0,     0,
    2725,     0,     0,  2731,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2735,     0,     0,     0,     0,     0,     0,     0,
    2737,     0,     0,     0,     0,  2733,     0,     0,  2739,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2743,     0,     0,
       0,     0,     0,     0,     0,  2745,     0,     0,     0,     0,
    2741,     0,     0,  2747,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2751,     0,     0,     0,     0,     0,     0,     0,
    2753,     0,     0,     0,     0,  2749,     0,     0,  2755,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2759,     0,     0,
       0,     0,     0,     0,     0,  2761,     0,     0,     0,     0,
    2757,     0,     0,  2763,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2767,     0,     0,     0,     0,     0,     0,     0,
    2769,     0,     0,     0,     0,  2765,     0,     0,  2771,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2775,     0,     0,
       0,     0,     0,     0,     0,  2777,     0,     0,     0,     0,
    2773,     0,     0,  2779,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   725,     0,     0,
       0,     0,     0,   727,     0,   729,     0,     0,     0,     0,
       0,     0,     0,   731,     0,  2781,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   735,     0,     0,     0,     0,     0,   737,     0,   739,
       0,     0,     0,     0,     0,     0,     0,   741,     0,     0,
       0,     0,     0,     0,     0,   733,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   745,     0,     0,     0,     0,
       0,   747,     0,   749,     0,     0,     0,     0,     0,     0,
       0,   751,     0,     0,     0,     0,     0,     0,     0,   743,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   803,
       0,     0,     0,     0,     0,   805,     0,   807,     0,     0,
       0,     0,     0,     0,     0,   809,     0,     0,     0,     0,
       0,     0,     0,   753,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   961,     0,     0,     0,     0,     0,   963,
       0,   965,     0,     0,     0,     0,     0,     0,     0,   967,
       0,     0,     0,     0,     0,     0,     0,   811,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   987,     0,     0,
       0,     0,     0,   989,     0,   991,     0,     0,     0,     0,
       0,     0,     0,   993,     0,     0,     0,     0,     0,     0,
       0,   969,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   997,     0,     0,     0,     0,     0,   999,     0,  1001,
       0,     0,     0,     0,     0,     0,     0,  1003,     0,     0,
       0,     0,     0,     0,     0,   995,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1039,     0,     0,     0,     0,
       0,  1041,     0,  1043,     0,     0,     0,     0,     0,     0,
       0,  1045,     0,     0,     0,     0,     0,     0,     0,  1005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1049,
       0,     0,     0,     0,     0,  1051,     0,  1053,     0,     0,
       0,     0,     0,     0,     0,  1055,     0,     0,     0,     0,
       0,     0,     0,  1047,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1059,     0,     0,     0,     0,     0,  1061,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1065,
       0,     0,     0,     0,     0,     0,     0,  1057,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1197,     0,     0,
       0,     0,     0,  1199,     0,  1201,     0,     0,     0,     0,
       0,     0,     0,  1203,     0,     0,     0,     0,     0,     0,
       0,  1067,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1215,     0,     0,     0,     0,     0,  1217,     0,  1219,
       0,     0,     0,     0,     0,     0,     0,  1221,     0,     0,
       0,     0,     0,     0,     0,  1205,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1225,     0,     0,     0,     0,
       0,  1227,     0,  1229,     0,     0,     0,     0,     0,     0,
       0,  1231,     0,     0,     0,     0,     0,     0,     0,  1223,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1235,
       0,     0,     0,     0,     0,  1237,     0,  1239,     0,     0,
       0,     0,     0,     0,     0,  1241,     0,     0,     0,     0,
       0,     0,     0,  1233,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1445,     0,     0,     0,     0,     0,  1447,
       0,  1449,     0,     0,     0,     0,     0,     0,     0,  1451,
       0,     0,     0,     0,     0,     0,     0,  1243,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1453
};

/* YYCONFL[I] -- lists of conflicting rule numbers, each terminated by
   0, pointed into by YYCONFLP.  */
static const short yyconfl[] =
{
       0,   604,     0,   604,     0,   604,     0,   604,     0,   586,
       0,   586,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   570,     0,   570,     0,   570,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,    42,
       0,   172,     0,   172,     0,   172,     0,   172,     0,   172,
       0,   570,     0,   570,     0,   570,     0,    99,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   138,     0,   196,
       0,   612,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   175,     0,   570,     0,   570,     0,   570,     0,   595,
       0,   102,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,    42,
       0,   604,     0,   339,     0,   604,     0,   604,     0,   604,
       0,   609,     0,    99,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   196,     0,   612,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   185,     0,   175,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   551,     0,   604,
       0,   339,     0,   604,     0,   604,     0,   604,     0,   595,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   102,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   185,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   551,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   304,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   509,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   339,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   339,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   304,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   509,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   339,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   339,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   339,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   339,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   339,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   339,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0,   604,     0,   604,     0,   604,     0,   604,
       0,   604,     0
};



YYSTYPE yylval;

int yynerrs;
int yychar;

enum { YYENOMEM = -2 };

typedef enum { yyok, yyaccept, yyabort, yyerr, yynomem } YYRESULTTAG;

#define YYCHK(YYE)                              \
  do {                                          \
    YYRESULTTAG yychk_flag = YYE;               \
    if (yychk_flag != yyok)                     \
      return yychk_flag;                        \
  } while (0)

/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   SIZE_MAX < YYMAXDEPTH * sizeof (GLRStackItem)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif

/* Minimum number of free items on the stack allowed after an
   allocation.  This is to allow allocation and initialization
   to be completed by functions that call yyexpandGLRStack before the
   stack is expanded, thus insuring that all necessary pointers get
   properly redirected to new data.  */
#define YYHEADROOM 2

#ifndef YYSTACKEXPANDABLE
#  define YYSTACKEXPANDABLE 1
#endif

#if YYSTACKEXPANDABLE
# define YY_RESERVE_GLRSTACK(Yystack)                   \
  do {                                                  \
    if (Yystack->yyspaceLeft < YYHEADROOM)              \
      yyexpandGLRStack (Yystack);                       \
  } while (0)
#else
# define YY_RESERVE_GLRSTACK(Yystack)                   \
  do {                                                  \
    if (Yystack->yyspaceLeft < YYHEADROOM)              \
      yyMemoryExhausted (Yystack);                      \
  } while (0)
#endif

/** State numbers. */
typedef int yy_state_t;

/** Rule numbers. */
typedef int yyRuleNum;

/** Item references. */
typedef short yyItemNum;

typedef struct yyGLRState yyGLRState;
typedef struct yyGLRStateSet yyGLRStateSet;
typedef struct yySemanticOption yySemanticOption;
typedef union yyGLRStackItem yyGLRStackItem;
typedef struct yyGLRStack yyGLRStack;

struct yyGLRState
{
  /** Type tag: always true.  */
  yybool yyisState;
  /** Type tag for yysemantics.  If true, yyval applies, otherwise
   *  yyfirstVal applies.  */
  yybool yyresolved;
  /** Number of corresponding LALR(1) machine state.  */
  yy_state_t yylrState;
  /** Preceding state in this stack */
  yyGLRState* yypred;
  /** Source position of the last token produced by my symbol */
  YYPTRDIFF_T yyposn;
  union {
    /** First in a chain of alternative reductions producing the
     *  nonterminal corresponding to this state, threaded through
     *  yynext.  */
    yySemanticOption* yyfirstVal;
    /** Semantic value for this state.  */
    YYSTYPE yyval;
  } yysemantics;
};

struct yyGLRStateSet
{
  yyGLRState** yystates;
  /** During nondeterministic operation, yylookaheadNeeds tracks which
   *  stacks have actually needed the current lookahead.  During deterministic
   *  operation, yylookaheadNeeds[0] is not maintained since it would merely
   *  duplicate yychar != YYEMPTY.  */
  yybool* yylookaheadNeeds;
  YYPTRDIFF_T yysize;
  YYPTRDIFF_T yycapacity;
};

struct yySemanticOption
{
  /** Type tag: always false.  */
  yybool yyisState;
  /** Rule number for this reduction */
  yyRuleNum yyrule;
  /** The last RHS state in the list of states to be reduced.  */
  yyGLRState* yystate;
  /** The lookahead for this reduction.  */
  int yyrawchar;
  YYSTYPE yyval;
  /** Next sibling in chain of options.  To facilitate merging,
   *  options are chained in decreasing order by address.  */
  yySemanticOption* yynext;
};

/** Type of the items in the GLR stack.  The yyisState field
 *  indicates which item of the union is valid.  */
union yyGLRStackItem {
  yyGLRState yystate;
  yySemanticOption yyoption;
};

struct yyGLRStack {
  int yyerrState;


  YYJMP_BUF yyexception_buffer;
  yyGLRStackItem* yyitems;
  yyGLRStackItem* yynextFree;
  YYPTRDIFF_T yyspaceLeft;
  yyGLRState* yysplitPoint;
  yyGLRState* yylastDeleted;
  yyGLRStateSet yytops;
};

#if YYSTACKEXPANDABLE
static void yyexpandGLRStack (yyGLRStack* yystackp);
#endif

_Noreturn static void
yyFail (yyGLRStack* yystackp, const char* yymsg)
{
  if (yymsg != YY_NULLPTR)
    yyerror (yymsg);
  YYLONGJMP (yystackp->yyexception_buffer, 1);
}

_Noreturn static void
yyMemoryExhausted (yyGLRStack* yystackp)
{
  YYLONGJMP (yystackp->yyexception_buffer, 2);
}

/** Accessing symbol of state YYSTATE.  */
static inline yysymbol_kind_t
yy_accessing_symbol (yy_state_t yystate)
{
  return YY_CAST (yysymbol_kind_t, yystos[yystate]);
}

#if 1
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "SINGLE_COMMENT",
  "MULTI_COMMENT", "CONSTANT", "FUNCTION", "CLASS", "ENUM", "CONDITIONAL",
  "CODE", "ATTRIBUTETOK", "RUNTIME", "STATIC", "AUTO", "AUTOTYPE",
  "TEMPLATE", "NAMESPACE", "OPERATORNAME", "OVERRIDE", "VIRTUAL", "PURE",
  "AS", "IN", "DISPLAY", "RETURN", "FOR", "IF", "ELSEIF", "ELSE", "INLINE",
  "CONSTRUCTOR", "FILE_", "PROGRAM_", "IMPORT", "PUBLIC", "PROTECTED",
  "PRIVATE", "INHERIT", "COMPOSITE", "LEFT_BRACKET", "RIGHT_BRACKET",
  "LEFT_SQUARE_BRACKET", "RIGHT_SQUARE_BRACKET", "LEFT_PARANTHESIS",
  "RIGHT_PARANTHESIS", "COLON", "SEMICOLON", "COMMA", "DOT", "LTEQ",
  "GTEQ", "LT", "GT", "PLUSEQ", "MINUSEQ", "MULTIPLYEQ", "DIVIDEEQ",
  "EQEQ", "EQ", "NOTEQ", "NOT", "PLUSPLUS", "PLUS", "MINUSMINUS", "MINUS",
  "DIVIDE", "MULTIPLY", "VARNAME", "NUMBER", "DECIMAL", "TEXT",
  "ESCAPE_CHARS", "$accept", "program", "root_program", "standard_block",
  "deamerreserved_star__stmt__", "stmt", "import_statement", "file_import",
  "mutation_group", "deamerreserved_arrow__symbol_reference__",
  "deamerreserved_star__COMMA__symbol_reference__", "assignment",
  "assignment_operator", "conditional_if", "conditional_else_if",
  "conditional_else", "conditional_block",
  "template_conditional_function_declaration",
  "deamerreserved_arrow__template_parameter__",
  "deamerreserved_star__COMMA__template_parameter__",
  "deamerreserved_arrow__conditional_function_argument__",
  "deamerreserved_star__COMMA__conditional_function_argument__",
  "deamerreserved_arrow__function_argument__",
  "deamerreserved_star__COMMA__function_argument__",
  "conditional_function_declaration", "template_code_function_declaration",
  "code_function_declaration", "return_statement", "symbol_increase",
  "symbol_decrease", "expression", "expression_no_value", "t_expression",
  "f_expression", "display_call", "for_loop", "for_iteration_loop",
  "for_each_loop", "for_variable", "iterator", "for_block",
  "namespace_declaration", "deamerreserved_arrow__namespace_name__",
  "deamerreserved_star__DOT__namespace_name__", "namespace_block",
  "namespace_name", "inline_class_declaration",
  "deamerreserved_arrow__inline_class_declaration_composite__",
  "deamerreserved_star__COMMA__inline_class_declaration_composite__",
  "inline_class_declaration_composite",
  "deamerreserved_arrow__inline_class_declaration_composite_alias__",
  "deamerreserved_star__COMMA__inline_class_declaration_composite_alias__",
  "inline_class_declaration_composite_alias",
  "inline_class_declaration_composite_name", "created_class_name",
  "code_block", "deamerreserved_arrow__code_block_input_argument__",
  "deamerreserved_star__COMMA__code_block_input_argument__",
  "code_block_input_argument", "code_block_argument",
  "code_block_argument_name", "code_block_program", "variable_declaration",
  "array_declaration", "variable_name", "template_function_declaration",
  "function_declaration", "trailing_return_type", "return_type",
  "conditional_function_argument", "function_argument",
  "function_argument_type", "function_argument_name",
  "condition_modifier_function_call",
  "deamerreserved_arrow__condition_modifier_argument__",
  "deamerreserved_star__COMMA__condition_modifier_argument__",
  "condition_modifier_name", "condition_modifier_argument",
  "function_body", "function_name", "template_class_declaration",
  "template_parameter", "template_parameter_name", "class_declaration",
  "deamerreserved_arrow__class_inherit_base__",
  "deamerreserved_star__COMMA__class_inherit_base__", "class_name",
  "execution_keyword_permutation", "class_body",
  "deamerreserved_star__class_stmt__", "class_stmt",
  "class_stmt_member_field_declaration", "member_field_name",
  "class_stmt_member_function", "class_stmt_member_template_function",
  "template_class_stmt_constructor", "class_stmt_constructor",
  "accessibility", "class_inherit_base", "inherit_base",
  "inherit_base_name", "compound_base",
  "deamerreserved_arrow__compound_base_alias__",
  "deamerreserved_star__COMMA__compound_base_alias__",
  "compound_base_name", "compound_base_alias", "attribute_section",
  "deamerreserved_arrow__attribute__",
  "deamerreserved_star__deamerreserved_optional__COMMA____attribute__",
  "attribute", "deamerreserved_arrow__attribute_argument__",
  "deamerreserved_star__COMMA__attribute_argument__",
  "deamerreserved_arrow__attribute_template_argument__",
  "deamerreserved_star__COMMA__attribute_template_argument__",
  "attribute_argument", "attribute_template_argument",
  "attribute_declaration",
  "deamerreserved_arrow__attribute_function_argument__",
  "deamerreserved_star__COMMA__attribute_function_argument__",
  "attribute_function_argument", "attribute_name", "enum_declaration",
  "deamerreserved_star__enumeration__", "enum_name", "enumeration",
  "enumeration_name", "enumeration_value", "symbol_reference",
  "deamerreserved_arrow__symbol__",
  "deamerreserved_star__DOT__symbol_secondary__", "symbol_secondary",
  "deamerreserved_star__symbol_access__", "symbol", "symbol_access",
  "auto_deduce_array", "symbol_name_secondary", "symbol_name",
  "function_access", "deamerreserved_arrow__expression__",
  "deamerreserved_star__COMMA__expression__", "index_access",
  "anonymous_access", "type", "deamerreserved_star__type_modifier__",
  "type_modifier", "value_list", "deamerreserved_arrow__full_value__",
  "deamerreserved_star__COMMA__full_value__", "full_value", "value",
  "tuple", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

/** Left-hand-side symbol for rule #YYRULE.  */
static inline yysymbol_kind_t
yylhsNonterm (yyRuleNum yyrule)
{
  return YY_CAST (yysymbol_kind_t, yyr1[yyrule]);
}

#if YYDEBUG

# ifndef YYFPRINTF
#  define YYFPRINTF fprintf
# endif

# define YY_FPRINTF                             \
  YY_IGNORE_USELESS_CAST_BEGIN YY_FPRINTF_

# define YY_FPRINTF_(Args)                      \
  do {                                          \
    YYFPRINTF Args;                             \
    YY_IGNORE_USELESS_CAST_END                  \
  } while (0)

# define YY_DPRINTF                             \
  YY_IGNORE_USELESS_CAST_BEGIN YY_DPRINTF_

# define YY_DPRINTF_(Args)                      \
  do {                                          \
    if (yydebug)                                \
      YYFPRINTF Args;                           \
    YY_IGNORE_USELESS_CAST_END                  \
  } while (0)





/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  yy_symbol_value_print (yyo, yykind, yyvaluep);
  YYFPRINTF (yyo, ")");
}

# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                  \
  do {                                                                  \
    if (yydebug)                                                        \
      {                                                                 \
        YY_FPRINTF ((stderr, "%s ", Title));                            \
        yy_symbol_print (stderr, Kind, Value);        \
        YY_FPRINTF ((stderr, "\n"));                                    \
      }                                                                 \
  } while (0)

static inline void
yy_reduce_print (yybool yynormal, yyGLRStackItem* yyvsp, YYPTRDIFF_T yyk,
                 yyRuleNum yyrule);

# define YY_REDUCE_PRINT(Args)          \
  do {                                  \
    if (yydebug)                        \
      yy_reduce_print Args;             \
  } while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;

static void yypstack (yyGLRStack* yystackp, YYPTRDIFF_T yyk)
  YY_ATTRIBUTE_UNUSED;
static void yypdumpstack (yyGLRStack* yystackp)
  YY_ATTRIBUTE_UNUSED;

#else /* !YYDEBUG */

# define YY_DPRINTF(Args) do {} while (yyfalse)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_REDUCE_PRINT(Args)

#endif /* !YYDEBUG */

#ifndef yystrlen
# define yystrlen(S) (YY_CAST (YYPTRDIFF_T, strlen (S)))
#endif

#ifndef yystpcpy
# if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#  define yystpcpy stpcpy
# else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
# endif
#endif

#ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYPTRDIFF_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYPTRDIFF_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            else
              goto append;

          append:
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (yyres)
    return yystpcpy (yyres, yystr) - yyres;
  else
    return yystrlen (yystr);
}
#endif


/** Fill in YYVSP[YYLOW1 .. YYLOW0-1] from the chain of states starting
 *  at YYVSP[YYLOW0].yystate.yypred.  Leaves YYVSP[YYLOW1].yystate.yypred
 *  containing the pointer to the next state in the chain.  */
static void yyfillin (yyGLRStackItem *, int, int) YY_ATTRIBUTE_UNUSED;
static void
yyfillin (yyGLRStackItem *yyvsp, int yylow0, int yylow1)
{
  int i;
  yyGLRState *s = yyvsp[yylow0].yystate.yypred;
  for (i = yylow0-1; i >= yylow1; i -= 1)
    {
#if YYDEBUG
      yyvsp[i].yystate.yylrState = s->yylrState;
#endif
      yyvsp[i].yystate.yyresolved = s->yyresolved;
      if (s->yyresolved)
        yyvsp[i].yystate.yysemantics.yyval = s->yysemantics.yyval;
      else
        /* The effect of using yyval or yyloc (in an immediate rule) is
         * undefined.  */
        yyvsp[i].yystate.yysemantics.yyfirstVal = YY_NULLPTR;
      s = yyvsp[i].yystate.yypred = s->yypred;
    }
}


/** If yychar is empty, fetch the next token.  */
static inline yysymbol_kind_t
yygetToken (int *yycharp)
{
  yysymbol_kind_t yytoken;
  if (*yycharp == YYEMPTY)
    {
      YY_DPRINTF ((stderr, "Reading a token\n"));
      *yycharp = yylex ();
    }
  if (*yycharp <= YYEOF)
    {
      *yycharp = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YY_DPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (*yycharp);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }
  return yytoken;
}

/* Do nothing if YYNORMAL or if *YYLOW <= YYLOW1.  Otherwise, fill in
 * YYVSP[YYLOW1 .. *YYLOW-1] as in yyfillin and set *YYLOW = YYLOW1.
 * For convenience, always return YYLOW1.  */
static inline int yyfill (yyGLRStackItem *, int *, int, yybool)
     YY_ATTRIBUTE_UNUSED;
static inline int
yyfill (yyGLRStackItem *yyvsp, int *yylow, int yylow1, yybool yynormal)
{
  if (!yynormal && yylow1 < *yylow)
    {
      yyfillin (yyvsp, *yylow, yylow1);
      *yylow = yylow1;
    }
  return yylow1;
}

/** Perform user action for rule number YYN, with RHS length YYRHSLEN,
 *  and top stack item YYVSP.  YYLVALP points to place to put semantic
 *  value ($$), and yylocp points to place for location information
 *  (@$).  Returns yyok for normal return, yyaccept for YYACCEPT,
 *  yyerr for YYERROR, yyabort for YYABORT, yynomem for YYNOMEM.  */
static YYRESULTTAG
yyuserAction (yyRuleNum yyrule, int yyrhslen, yyGLRStackItem* yyvsp,
              yyGLRStack* yystackp, YYPTRDIFF_T yyk,
              YYSTYPE* yyvalp)
{
  const yybool yynormal YY_ATTRIBUTE_UNUSED = yystackp->yysplitPoint == YY_NULLPTR;
  int yylow = 1;
  YY_USE (yyvalp);
  YY_USE (yyk);
  YY_USE (yyrhslen);
# undef yyerrok
# define yyerrok (yystackp->yyerrState = 0)
# undef YYACCEPT
# define YYACCEPT return yyaccept
# undef YYABORT
# define YYABORT return yyabort
# undef YYNOMEM
# define YYNOMEM return yynomem
# undef YYERROR
# define YYERROR return yyerrok, yyerr
# undef YYRECOVERING
# define YYRECOVERING() (yystackp->yyerrState != 0)
# undef yyclearin
# define yyclearin (yychar = YYEMPTY)
# undef YYFILL
# define YYFILL(N) yyfill (yyvsp, &yylow, (N), yynormal)
# undef YYBACKUP
# define YYBACKUP(Token, Value)                                              \
  return yyerror (YY_("syntax error: cannot back up")),     \
         yyerrok, yyerr

  if (yyrhslen == 0)
    *yyvalp = yyval_default;
  else
    *yyvalp = yyvsp[YYFILL (1-yyrhslen)].yystate.yysemantics.yyval;
  /* If yyk == -1, we are running a deferred action on a temporary
     stack.  In that case, YY_REDUCE_PRINT must not play with YYFILL,
     so pretend the stack is "normal". */
  YY_REDUCE_PRINT ((yynormal || yyk == -1, yyvsp, yyk, yyrule));
  switch (yyrule)
    {
  case 2: /* program: root_program  */
#line 715 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::program({::Celeste::ast::Type::program, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_root_program) });
		((*yyvalp).Celeste_program) = newNode;

		// Ignored, Deleted, tokens are deleted
		outputTree = new ::deamer::external::cpp::ast::Tree(newNode);
	}
#line 8268 "Celeste_parser.tab.c"
    break;

  case 3: /* root_program: standard_block  */
#line 726 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::root_program({::Celeste::ast::Type::root_program, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_root_program) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8279 "Celeste_parser.tab.c"
    break;

  case 4: /* standard_block: deamerreserved_star__stmt__  */
#line 736 "./Celeste_parser.y"
                                     {
		auto* const newNode = new Celeste::ast::node::standard_block({::Celeste::ast::Type::standard_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__stmt__) });
		((*yyvalp).Celeste_standard_block) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8290 "Celeste_parser.tab.c"
    break;

  case 5: /* deamerreserved_star__stmt__: stmt deamerreserved_star__stmt__  */
#line 746 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__stmt__({::Celeste::ast::Type::deamerreserved_star__stmt__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_stmt), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__stmt__) });
		((*yyvalp).Celeste_deamerreserved_star__stmt__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8301 "Celeste_parser.tab.c"
    break;

  case 6: /* deamerreserved_star__stmt__: %empty  */
#line 752 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__stmt__({::Celeste::ast::Type::deamerreserved_star__stmt__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__stmt__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8312 "Celeste_parser.tab.c"
    break;

  case 7: /* stmt: template_function_declaration  */
#line 762 "./Celeste_parser.y"
                                       {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8323 "Celeste_parser.tab.c"
    break;

  case 8: /* stmt: template_class_declaration  */
#line 768 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_class_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8334 "Celeste_parser.tab.c"
    break;

  case 9: /* stmt: function_declaration  */
#line 774 "./Celeste_parser.y"
                                {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8345 "Celeste_parser.tab.c"
    break;

  case 10: /* stmt: attribute_declaration  */
#line 780 "./Celeste_parser.y"
                                 {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_attribute_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8356 "Celeste_parser.tab.c"
    break;

  case 11: /* stmt: class_declaration  */
#line 786 "./Celeste_parser.y"
                             {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8367 "Celeste_parser.tab.c"
    break;

  case 12: /* stmt: enum_declaration  */
#line 792 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_enum_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8378 "Celeste_parser.tab.c"
    break;

  case 13: /* stmt: variable_declaration  */
#line 798 "./Celeste_parser.y"
                                {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_variable_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8389 "Celeste_parser.tab.c"
    break;

  case 14: /* stmt: inline_class_declaration  */
#line 804 "./Celeste_parser.y"
                                    {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_inline_class_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8400 "Celeste_parser.tab.c"
    break;

  case 15: /* stmt: namespace_declaration  */
#line 810 "./Celeste_parser.y"
                                 {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_namespace_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8411 "Celeste_parser.tab.c"
    break;

  case 16: /* stmt: symbol_reference SEMICOLON  */
#line 816 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8423 "Celeste_parser.tab.c"
    break;

  case 17: /* stmt: for_loop  */
#line 823 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_for_loop) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8434 "Celeste_parser.tab.c"
    break;

  case 18: /* stmt: display_call  */
#line 829 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_display_call) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8445 "Celeste_parser.tab.c"
    break;

  case 19: /* stmt: symbol_increase  */
#line 835 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_increase) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8456 "Celeste_parser.tab.c"
    break;

  case 20: /* stmt: symbol_decrease  */
#line 841 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_decrease) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8467 "Celeste_parser.tab.c"
    break;

  case 21: /* stmt: return_statement  */
#line 847 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_return_statement) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8478 "Celeste_parser.tab.c"
    break;

  case 22: /* stmt: template_code_function_declaration  */
#line 853 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_code_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8489 "Celeste_parser.tab.c"
    break;

  case 23: /* stmt: code_function_declaration  */
#line 859 "./Celeste_parser.y"
                                     {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_code_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8500 "Celeste_parser.tab.c"
    break;

  case 24: /* stmt: template_conditional_function_declaration  */
#line 865 "./Celeste_parser.y"
                                                     {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_conditional_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8511 "Celeste_parser.tab.c"
    break;

  case 25: /* stmt: conditional_function_declaration  */
#line 871 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_conditional_function_declaration) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8522 "Celeste_parser.tab.c"
    break;

  case 26: /* stmt: conditional_if  */
#line 877 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_conditional_if) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8533 "Celeste_parser.tab.c"
    break;

  case 27: /* stmt: conditional_else_if  */
#line 883 "./Celeste_parser.y"
                               {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_conditional_else_if) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8544 "Celeste_parser.tab.c"
    break;

  case 28: /* stmt: conditional_else  */
#line 889 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_conditional_else) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8555 "Celeste_parser.tab.c"
    break;

  case 29: /* stmt: assignment  */
#line 895 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_assignment) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8566 "Celeste_parser.tab.c"
    break;

  case 30: /* stmt: mutation_group  */
#line 901 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_mutation_group) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8577 "Celeste_parser.tab.c"
    break;

  case 31: /* stmt: import_statement  */
#line 907 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 24, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_import_statement) });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8588 "Celeste_parser.tab.c"
    break;

  case 32: /* stmt: SEMICOLON  */
#line 913 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::stmt({::Celeste::ast::Type::stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 25, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8600 "Celeste_parser.tab.c"
    break;

  case 33: /* import_statement: file_import  */
#line 924 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::import_statement({::Celeste::ast::Type::import_statement, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_file_import) });
		((*yyvalp).Celeste_import_statement) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8611 "Celeste_parser.tab.c"
    break;

  case 34: /* file_import: execution_keyword_permutation IMPORT FILE_ TEXT  */
#line 934 "./Celeste_parser.y"
                                                         {
		auto* const newNode = new Celeste::ast::node::file_import({::Celeste::ast::Type::file_import, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::IMPORT({::Celeste::ast::Type::IMPORT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::FILE_({::Celeste::ast::Type::FILE_, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::TEXT({::Celeste::ast::Type::TEXT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_file_import) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8622 "Celeste_parser.tab.c"
    break;

  case 35: /* mutation_group: LEFT_PARANTHESIS deamerreserved_arrow__symbol_reference__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 944 "./Celeste_parser.y"
                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__symbol_reference__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8640 "Celeste_parser.tab.c"
    break;

  case 36: /* mutation_group: LEFT_PARANTHESIS deamerreserved_arrow__symbol_reference__ RIGHT_PARANTHESIS LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 957 "./Celeste_parser.y"
                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__symbol_reference__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8657 "Celeste_parser.tab.c"
    break;

  case 37: /* mutation_group: LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 969 "./Celeste_parser.y"
                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8675 "Celeste_parser.tab.c"
    break;

  case 38: /* mutation_group: LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 982 "./Celeste_parser.y"
                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8692 "Celeste_parser.tab.c"
    break;

  case 39: /* mutation_group: LEFT_BRACKET LEFT_SQUARE_BRACKET standard_block RIGHT_SQUARE_BRACKET RIGHT_BRACKET  */
#line 994 "./Celeste_parser.y"
                                                                                              {
		auto* const newNode = new Celeste::ast::node::mutation_group({::Celeste::ast::Type::mutation_group, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_mutation_group) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8707 "Celeste_parser.tab.c"
    break;

  case 40: /* deamerreserved_arrow__symbol_reference__: symbol_reference deamerreserved_star__COMMA__symbol_reference__  */
#line 1008 "./Celeste_parser.y"
                                                                         {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__symbol_reference__({::Celeste::ast::Type::deamerreserved_arrow__symbol_reference__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__symbol_reference__) });
		((*yyvalp).Celeste_deamerreserved_arrow__symbol_reference__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8718 "Celeste_parser.tab.c"
    break;

  case 41: /* deamerreserved_star__COMMA__symbol_reference__: COMMA symbol_reference deamerreserved_star__COMMA__symbol_reference__  */
#line 1018 "./Celeste_parser.y"
                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__symbol_reference__({::Celeste::ast::Type::deamerreserved_star__COMMA__symbol_reference__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__symbol_reference__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__symbol_reference__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 8730 "Celeste_parser.tab.c"
    break;

  case 42: /* deamerreserved_star__COMMA__symbol_reference__: %empty  */
#line 1025 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__symbol_reference__({::Celeste::ast::Type::deamerreserved_star__COMMA__symbol_reference__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__symbol_reference__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8741 "Celeste_parser.tab.c"
    break;

  case 43: /* assignment: symbol_reference assignment_operator expression  */
#line 1035 "./Celeste_parser.y"
                                                         {
		auto* const newNode = new Celeste::ast::node::assignment({::Celeste::ast::Type::assignment, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_symbol_reference), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_assignment_operator), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_assignment) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8752 "Celeste_parser.tab.c"
    break;

  case 44: /* assignment_operator: PLUSEQ  */
#line 1045 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PLUSEQ({::Celeste::ast::Type::PLUSEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8763 "Celeste_parser.tab.c"
    break;

  case 45: /* assignment_operator: MINUSEQ  */
#line 1051 "./Celeste_parser.y"
                   {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::MINUSEQ({::Celeste::ast::Type::MINUSEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8774 "Celeste_parser.tab.c"
    break;

  case 46: /* assignment_operator: MULTIPLYEQ  */
#line 1057 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::MULTIPLYEQ({::Celeste::ast::Type::MULTIPLYEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8785 "Celeste_parser.tab.c"
    break;

  case 47: /* assignment_operator: DIVIDEEQ  */
#line 1063 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::DIVIDEEQ({::Celeste::ast::Type::DIVIDEEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8796 "Celeste_parser.tab.c"
    break;

  case 48: /* assignment_operator: EQ  */
#line 1069 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::assignment_operator({::Celeste::ast::Type::assignment_operator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_assignment_operator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8807 "Celeste_parser.tab.c"
    break;

  case 49: /* conditional_if: IF LEFT_PARANTHESIS expression RIGHT_PARANTHESIS LEFT_BRACKET conditional_block RIGHT_BRACKET  */
#line 1079 "./Celeste_parser.y"
                                                                                                       {
		auto* const newNode = new Celeste::ast::node::conditional_if({::Celeste::ast::Type::conditional_if, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::IF({::Celeste::ast::Type::IF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_block) });
		((*yyvalp).Celeste_conditional_if) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8822 "Celeste_parser.tab.c"
    break;

  case 50: /* conditional_else_if: ELSEIF LEFT_PARANTHESIS expression RIGHT_PARANTHESIS LEFT_BRACKET conditional_block RIGHT_BRACKET  */
#line 1093 "./Celeste_parser.y"
                                                                                                           {
		auto* const newNode = new Celeste::ast::node::conditional_else_if({::Celeste::ast::Type::conditional_else_if, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSEIF({::Celeste::ast::Type::ELSEIF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_block) });
		((*yyvalp).Celeste_conditional_else_if) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8837 "Celeste_parser.tab.c"
    break;

  case 51: /* conditional_else_if: ELSE IF LEFT_PARANTHESIS expression RIGHT_PARANTHESIS LEFT_BRACKET conditional_block RIGHT_BRACKET  */
#line 1103 "./Celeste_parser.y"
                                                                                                              {
		auto* const newNode = new Celeste::ast::node::conditional_else_if({::Celeste::ast::Type::conditional_else_if, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSE({::Celeste::ast::Type::ELSE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::IF({::Celeste::ast::Type::IF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_block) });
		((*yyvalp).Celeste_conditional_else_if) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8852 "Celeste_parser.tab.c"
    break;

  case 52: /* conditional_else: ELSE LEFT_BRACKET conditional_block RIGHT_BRACKET  */
#line 1117 "./Celeste_parser.y"
                                                           {
		auto* const newNode = new Celeste::ast::node::conditional_else({::Celeste::ast::Type::conditional_else, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSE({::Celeste::ast::Type::ELSE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_block) });
		((*yyvalp).Celeste_conditional_else) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8865 "Celeste_parser.tab.c"
    break;

  case 53: /* conditional_block: standard_block  */
#line 1129 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::conditional_block({::Celeste::ast::Type::conditional_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_conditional_block) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 8876 "Celeste_parser.tab.c"
    break;

  case 54: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1139 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8897 "Celeste_parser.tab.c"
    break;

  case 55: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1155 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8917 "Celeste_parser.tab.c"
    break;

  case 56: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1170 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8938 "Celeste_parser.tab.c"
    break;

  case 57: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1186 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8958 "Celeste_parser.tab.c"
    break;

  case 58: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1201 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8978 "Celeste_parser.tab.c"
    break;

  case 59: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1216 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 8997 "Celeste_parser.tab.c"
    break;

  case 60: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1230 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9017 "Celeste_parser.tab.c"
    break;

  case 61: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1245 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9036 "Celeste_parser.tab.c"
    break;

  case 62: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1259 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9057 "Celeste_parser.tab.c"
    break;

  case 63: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1275 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9077 "Celeste_parser.tab.c"
    break;

  case 64: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1290 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9098 "Celeste_parser.tab.c"
    break;

  case 65: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1306 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9118 "Celeste_parser.tab.c"
    break;

  case 66: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1321 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9138 "Celeste_parser.tab.c"
    break;

  case 67: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1336 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9157 "Celeste_parser.tab.c"
    break;

  case 68: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1350 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9177 "Celeste_parser.tab.c"
    break;

  case 69: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1365 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9196 "Celeste_parser.tab.c"
    break;

  case 70: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1379 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9214 "Celeste_parser.tab.c"
    break;

  case 71: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1392 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9231 "Celeste_parser.tab.c"
    break;

  case 72: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1404 "./Celeste_parser.y"
                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9249 "Celeste_parser.tab.c"
    break;

  case 73: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1417 "./Celeste_parser.y"
                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9266 "Celeste_parser.tab.c"
    break;

  case 74: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1429 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9287 "Celeste_parser.tab.c"
    break;

  case 75: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1445 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9307 "Celeste_parser.tab.c"
    break;

  case 76: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1460 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9328 "Celeste_parser.tab.c"
    break;

  case 77: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1476 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9348 "Celeste_parser.tab.c"
    break;

  case 78: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1491 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 24, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9368 "Celeste_parser.tab.c"
    break;

  case 79: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1506 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 25, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9387 "Celeste_parser.tab.c"
    break;

  case 80: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1520 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 26, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9407 "Celeste_parser.tab.c"
    break;

  case 81: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1535 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 27, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9426 "Celeste_parser.tab.c"
    break;

  case 82: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1549 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 28, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9447 "Celeste_parser.tab.c"
    break;

  case 83: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1565 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 29, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9467 "Celeste_parser.tab.c"
    break;

  case 84: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1580 "./Celeste_parser.y"
                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 30, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9488 "Celeste_parser.tab.c"
    break;

  case 85: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1596 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 31, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9508 "Celeste_parser.tab.c"
    break;

  case 86: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1611 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 32, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9528 "Celeste_parser.tab.c"
    break;

  case 87: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1626 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 33, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9547 "Celeste_parser.tab.c"
    break;

  case 88: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1640 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 34, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9567 "Celeste_parser.tab.c"
    break;

  case 89: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1655 "./Celeste_parser.y"
                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 35, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9586 "Celeste_parser.tab.c"
    break;

  case 90: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1669 "./Celeste_parser.y"
                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 36, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9604 "Celeste_parser.tab.c"
    break;

  case 91: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1682 "./Celeste_parser.y"
                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 37, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9621 "Celeste_parser.tab.c"
    break;

  case 92: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1694 "./Celeste_parser.y"
                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 38, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9639 "Celeste_parser.tab.c"
    break;

  case 93: /* template_conditional_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONDITIONAL function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1707 "./Celeste_parser.y"
                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_conditional_function_declaration({::Celeste::ast::Type::template_conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 39, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9656 "Celeste_parser.tab.c"
    break;

  case 94: /* deamerreserved_arrow__template_parameter__: template_parameter deamerreserved_star__COMMA__template_parameter__  */
#line 1723 "./Celeste_parser.y"
                                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__template_parameter__({::Celeste::ast::Type::deamerreserved_arrow__template_parameter__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_parameter), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__template_parameter__) });
		((*yyvalp).Celeste_deamerreserved_arrow__template_parameter__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9667 "Celeste_parser.tab.c"
    break;

  case 95: /* deamerreserved_star__COMMA__template_parameter__: COMMA template_parameter deamerreserved_star__COMMA__template_parameter__  */
#line 1733 "./Celeste_parser.y"
                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__template_parameter__({::Celeste::ast::Type::deamerreserved_star__COMMA__template_parameter__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_parameter), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__template_parameter__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__template_parameter__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 9679 "Celeste_parser.tab.c"
    break;

  case 96: /* deamerreserved_star__COMMA__template_parameter__: %empty  */
#line 1740 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__template_parameter__({::Celeste::ast::Type::deamerreserved_star__COMMA__template_parameter__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__template_parameter__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9690 "Celeste_parser.tab.c"
    break;

  case 97: /* deamerreserved_arrow__conditional_function_argument__: conditional_function_argument deamerreserved_star__COMMA__conditional_function_argument__  */
#line 1750 "./Celeste_parser.y"
                                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__conditional_function_argument__({::Celeste::ast::Type::deamerreserved_arrow__conditional_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__conditional_function_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__conditional_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9701 "Celeste_parser.tab.c"
    break;

  case 98: /* deamerreserved_star__COMMA__conditional_function_argument__: COMMA conditional_function_argument deamerreserved_star__COMMA__conditional_function_argument__  */
#line 1760 "./Celeste_parser.y"
                                                                                                         {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__conditional_function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__conditional_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_conditional_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__conditional_function_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__conditional_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 9713 "Celeste_parser.tab.c"
    break;

  case 99: /* deamerreserved_star__COMMA__conditional_function_argument__: %empty  */
#line 1767 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__conditional_function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__conditional_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__conditional_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9724 "Celeste_parser.tab.c"
    break;

  case 100: /* deamerreserved_arrow__function_argument__: function_argument deamerreserved_star__COMMA__function_argument__  */
#line 1777 "./Celeste_parser.y"
                                                                           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__function_argument__({::Celeste::ast::Type::deamerreserved_arrow__function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__function_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9735 "Celeste_parser.tab.c"
    break;

  case 101: /* deamerreserved_star__COMMA__function_argument__: COMMA function_argument deamerreserved_star__COMMA__function_argument__  */
#line 1787 "./Celeste_parser.y"
                                                                                 {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__function_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 9747 "Celeste_parser.tab.c"
    break;

  case 102: /* deamerreserved_star__COMMA__function_argument__: %empty  */
#line 1794 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 9758 "Celeste_parser.tab.c"
    break;

  case 103: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1804 "./Celeste_parser.y"
                                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9777 "Celeste_parser.tab.c"
    break;

  case 104: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1818 "./Celeste_parser.y"
                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9795 "Celeste_parser.tab.c"
    break;

  case 105: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1831 "./Celeste_parser.y"
                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9814 "Celeste_parser.tab.c"
    break;

  case 106: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1845 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9832 "Celeste_parser.tab.c"
    break;

  case 107: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1858 "./Celeste_parser.y"
                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9850 "Celeste_parser.tab.c"
    break;

  case 108: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1871 "./Celeste_parser.y"
                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9867 "Celeste_parser.tab.c"
    break;

  case 109: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1883 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9885 "Celeste_parser.tab.c"
    break;

  case 110: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS deamerreserved_arrow__conditional_function_argument__ RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1896 "./Celeste_parser.y"
                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__conditional_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9902 "Celeste_parser.tab.c"
    break;

  case 111: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1908 "./Celeste_parser.y"
                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9921 "Celeste_parser.tab.c"
    break;

  case 112: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1922 "./Celeste_parser.y"
                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9939 "Celeste_parser.tab.c"
    break;

  case 113: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1935 "./Celeste_parser.y"
                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9958 "Celeste_parser.tab.c"
    break;

  case 114: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1949 "./Celeste_parser.y"
                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9976 "Celeste_parser.tab.c"
    break;

  case 115: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1962 "./Celeste_parser.y"
                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 9994 "Celeste_parser.tab.c"
    break;

  case 116: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1975 "./Celeste_parser.y"
                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10011 "Celeste_parser.tab.c"
    break;

  case 117: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 1987 "./Celeste_parser.y"
                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10029 "Celeste_parser.tab.c"
    break;

  case 118: /* conditional_function_declaration: CONDITIONAL LEFT_PARANTHESIS RIGHT_PARANTHESIS function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2000 "./Celeste_parser.y"
                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10046 "Celeste_parser.tab.c"
    break;

  case 119: /* conditional_function_declaration: CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2012 "./Celeste_parser.y"
                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10062 "Celeste_parser.tab.c"
    break;

  case 120: /* conditional_function_declaration: CONDITIONAL function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2023 "./Celeste_parser.y"
                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10077 "Celeste_parser.tab.c"
    break;

  case 121: /* conditional_function_declaration: CONDITIONAL function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2033 "./Celeste_parser.y"
                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10093 "Celeste_parser.tab.c"
    break;

  case 122: /* conditional_function_declaration: CONDITIONAL function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2044 "./Celeste_parser.y"
                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::conditional_function_declaration({::Celeste::ast::Type::conditional_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONDITIONAL({::Celeste::ast::Type::CONDITIONAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_conditional_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10108 "Celeste_parser.tab.c"
    break;

  case 123: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2058 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10126 "Celeste_parser.tab.c"
    break;

  case 124: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2071 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10143 "Celeste_parser.tab.c"
    break;

  case 125: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2083 "./Celeste_parser.y"
                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10161 "Celeste_parser.tab.c"
    break;

  case 126: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2096 "./Celeste_parser.y"
                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10178 "Celeste_parser.tab.c"
    break;

  case 127: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2108 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10196 "Celeste_parser.tab.c"
    break;

  case 128: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2121 "./Celeste_parser.y"
                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10213 "Celeste_parser.tab.c"
    break;

  case 129: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2133 "./Celeste_parser.y"
                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10231 "Celeste_parser.tab.c"
    break;

  case 130: /* template_code_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CODE function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2146 "./Celeste_parser.y"
                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_code_function_declaration({::Celeste::ast::Type::template_code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10248 "Celeste_parser.tab.c"
    break;

  case 131: /* code_function_declaration: CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2162 "./Celeste_parser.y"
                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::code_function_declaration({::Celeste::ast::Type::code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10264 "Celeste_parser.tab.c"
    break;

  case 132: /* code_function_declaration: CODE function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2173 "./Celeste_parser.y"
                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::code_function_declaration({::Celeste::ast::Type::code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10279 "Celeste_parser.tab.c"
    break;

  case 133: /* code_function_declaration: CODE function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2183 "./Celeste_parser.y"
                                                                                                                {
		auto* const newNode = new Celeste::ast::node::code_function_declaration({::Celeste::ast::Type::code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10295 "Celeste_parser.tab.c"
    break;

  case 134: /* code_function_declaration: CODE function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2194 "./Celeste_parser.y"
                                                                                                          {
		auto* const newNode = new Celeste::ast::node::code_function_declaration({::Celeste::ast::Type::code_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_code_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10310 "Celeste_parser.tab.c"
    break;

  case 135: /* return_statement: RETURN expression  */
#line 2208 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::return_statement({::Celeste::ast::Type::return_statement, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::RETURN({::Celeste::ast::Type::RETURN, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_return_statement) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10321 "Celeste_parser.tab.c"
    break;

  case 136: /* symbol_increase: symbol_reference PLUSPLUS  */
#line 2218 "./Celeste_parser.y"
                                   {
		auto* const newNode = new Celeste::ast::node::symbol_increase({::Celeste::ast::Type::symbol_increase, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference), new Celeste::ast::node::PLUSPLUS({::Celeste::ast::Type::PLUSPLUS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_increase) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10332 "Celeste_parser.tab.c"
    break;

  case 137: /* symbol_decrease: symbol_reference MINUSMINUS  */
#line 2228 "./Celeste_parser.y"
                                     {
		auto* const newNode = new Celeste::ast::node::symbol_decrease({::Celeste::ast::Type::symbol_decrease, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_reference), new Celeste::ast::node::MINUSMINUS({::Celeste::ast::Type::MINUSMINUS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_decrease) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10343 "Celeste_parser.tab.c"
    break;

  case 138: /* expression: expression_no_value  */
#line 2238 "./Celeste_parser.y"
                             {
		auto* const newNode = new Celeste::ast::node::expression({::Celeste::ast::Type::expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression_no_value) });
		((*yyvalp).Celeste_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10354 "Celeste_parser.tab.c"
    break;

  case 139: /* expression_no_value: expression_no_value PLUS t_expression  */
#line 2248 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::expression_no_value({::Celeste::ast::Type::expression_no_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_expression_no_value), new Celeste::ast::node::PLUS({::Celeste::ast::Type::PLUS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_t_expression) });
		((*yyvalp).Celeste_expression_no_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10365 "Celeste_parser.tab.c"
    break;

  case 140: /* expression_no_value: expression_no_value MINUS t_expression  */
#line 2254 "./Celeste_parser.y"
                                                  {
		auto* const newNode = new Celeste::ast::node::expression_no_value({::Celeste::ast::Type::expression_no_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_expression_no_value), new Celeste::ast::node::MINUS({::Celeste::ast::Type::MINUS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_t_expression) });
		((*yyvalp).Celeste_expression_no_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10376 "Celeste_parser.tab.c"
    break;

  case 141: /* expression_no_value: t_expression  */
#line 2260 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::expression_no_value({::Celeste::ast::Type::expression_no_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_t_expression) });
		((*yyvalp).Celeste_expression_no_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10387 "Celeste_parser.tab.c"
    break;

  case 142: /* t_expression: t_expression MULTIPLY f_expression  */
#line 2270 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::MULTIPLY({::Celeste::ast::Type::MULTIPLY, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10398 "Celeste_parser.tab.c"
    break;

  case 143: /* t_expression: t_expression DIVIDE f_expression  */
#line 2276 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::DIVIDE({::Celeste::ast::Type::DIVIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10409 "Celeste_parser.tab.c"
    break;

  case 144: /* t_expression: t_expression LTEQ f_expression  */
#line 2282 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::LTEQ({::Celeste::ast::Type::LTEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10420 "Celeste_parser.tab.c"
    break;

  case 145: /* t_expression: t_expression GTEQ f_expression  */
#line 2288 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::GTEQ({::Celeste::ast::Type::GTEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10431 "Celeste_parser.tab.c"
    break;

  case 146: /* t_expression: t_expression LT f_expression  */
#line 2294 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::LT({::Celeste::ast::Type::LT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10442 "Celeste_parser.tab.c"
    break;

  case 147: /* t_expression: t_expression GT f_expression  */
#line 2300 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::GT({::Celeste::ast::Type::GT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10453 "Celeste_parser.tab.c"
    break;

  case 148: /* t_expression: t_expression EQEQ f_expression  */
#line 2306 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::EQEQ({::Celeste::ast::Type::EQEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10464 "Celeste_parser.tab.c"
    break;

  case 149: /* t_expression: t_expression NOTEQ f_expression  */
#line 2312 "./Celeste_parser.y"
                                           {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_t_expression), new Celeste::ast::node::NOTEQ({::Celeste::ast::Type::NOTEQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10475 "Celeste_parser.tab.c"
    break;

  case 150: /* t_expression: NOT f_expression  */
#line 2318 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::NOT({::Celeste::ast::Type::NOT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10486 "Celeste_parser.tab.c"
    break;

  case 151: /* t_expression: f_expression  */
#line 2324 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::t_expression({::Celeste::ast::Type::t_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_f_expression) });
		((*yyvalp).Celeste_t_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10497 "Celeste_parser.tab.c"
    break;

  case 152: /* f_expression: LEFT_PARANTHESIS expression_no_value RIGHT_PARANTHESIS  */
#line 2334 "./Celeste_parser.y"
                                                                {
		auto* const newNode = new Celeste::ast::node::f_expression({::Celeste::ast::Type::f_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression_no_value) });
		((*yyvalp).Celeste_f_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10510 "Celeste_parser.tab.c"
    break;

  case 153: /* f_expression: value  */
#line 2342 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::f_expression({::Celeste::ast::Type::f_expression, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value) });
		((*yyvalp).Celeste_f_expression) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10521 "Celeste_parser.tab.c"
    break;

  case 154: /* display_call: DISPLAY symbol_reference  */
#line 2352 "./Celeste_parser.y"
                                  {
		auto* const newNode = new Celeste::ast::node::display_call({::Celeste::ast::Type::display_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::DISPLAY({::Celeste::ast::Type::DISPLAY, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_display_call) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10532 "Celeste_parser.tab.c"
    break;

  case 155: /* for_loop: for_each_loop  */
#line 2362 "./Celeste_parser.y"
                       {
		auto* const newNode = new Celeste::ast::node::for_loop({::Celeste::ast::Type::for_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_for_each_loop) });
		((*yyvalp).Celeste_for_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10543 "Celeste_parser.tab.c"
    break;

  case 156: /* for_loop: for_iteration_loop  */
#line 2368 "./Celeste_parser.y"
                              {
		auto* const newNode = new Celeste::ast::node::for_loop({::Celeste::ast::Type::for_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_for_iteration_loop) });
		((*yyvalp).Celeste_for_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10554 "Celeste_parser.tab.c"
    break;

  case 157: /* for_iteration_loop: FOR expression LEFT_BRACKET for_block RIGHT_BRACKET  */
#line 2378 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::for_iteration_loop({::Celeste::ast::Type::for_iteration_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_for_block) });
		((*yyvalp).Celeste_for_iteration_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10567 "Celeste_parser.tab.c"
    break;

  case 158: /* for_each_loop: FOR LEFT_PARANTHESIS type for_variable IN iterator RIGHT_PARANTHESIS LEFT_BRACKET for_block RIGHT_BRACKET  */
#line 2390 "./Celeste_parser.y"
                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::for_each_loop({::Celeste::ast::Type::for_each_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_for_variable), new Celeste::ast::node::IN({::Celeste::ast::Type::IN, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_iterator), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_for_block) });
		((*yyvalp).Celeste_for_each_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10582 "Celeste_parser.tab.c"
    break;

  case 159: /* for_each_loop: FOR LEFT_PARANTHESIS type for_variable COLON iterator RIGHT_PARANTHESIS LEFT_BRACKET for_block RIGHT_BRACKET  */
#line 2400 "./Celeste_parser.y"
                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::for_each_loop({::Celeste::ast::Type::for_each_loop, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_for_variable), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_iterator), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_for_block) });
		((*yyvalp).Celeste_for_each_loop) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10598 "Celeste_parser.tab.c"
    break;

  case 160: /* for_variable: VARNAME  */
#line 2415 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::for_variable({::Celeste::ast::Type::for_variable, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_for_variable) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10609 "Celeste_parser.tab.c"
    break;

  case 161: /* iterator: full_value  */
#line 2425 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::iterator({::Celeste::ast::Type::iterator, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_iterator) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10620 "Celeste_parser.tab.c"
    break;

  case 162: /* for_block: standard_block  */
#line 2435 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::for_block({::Celeste::ast::Type::for_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_for_block) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10631 "Celeste_parser.tab.c"
    break;

  case 163: /* namespace_declaration: NAMESPACE deamerreserved_arrow__namespace_name__ LEFT_BRACKET namespace_block RIGHT_BRACKET  */
#line 2445 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::namespace_declaration({::Celeste::ast::Type::namespace_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::NAMESPACE({::Celeste::ast::Type::NAMESPACE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__namespace_name__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_namespace_block) });
		((*yyvalp).Celeste_namespace_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10644 "Celeste_parser.tab.c"
    break;

  case 164: /* deamerreserved_arrow__namespace_name__: namespace_name deamerreserved_star__DOT__namespace_name__  */
#line 2457 "./Celeste_parser.y"
                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__namespace_name__({::Celeste::ast::Type::deamerreserved_arrow__namespace_name__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_namespace_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__DOT__namespace_name__) });
		((*yyvalp).Celeste_deamerreserved_arrow__namespace_name__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10655 "Celeste_parser.tab.c"
    break;

  case 165: /* deamerreserved_star__DOT__namespace_name__: DOT namespace_name deamerreserved_star__DOT__namespace_name__  */
#line 2467 "./Celeste_parser.y"
                                                                       {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__DOT__namespace_name__({::Celeste::ast::Type::deamerreserved_star__DOT__namespace_name__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_namespace_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__DOT__namespace_name__) });
		((*yyvalp).Celeste_deamerreserved_star__DOT__namespace_name__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 10667 "Celeste_parser.tab.c"
    break;

  case 166: /* deamerreserved_star__DOT__namespace_name__: %empty  */
#line 2474 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__DOT__namespace_name__({::Celeste::ast::Type::deamerreserved_star__DOT__namespace_name__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__DOT__namespace_name__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10678 "Celeste_parser.tab.c"
    break;

  case 167: /* namespace_block: standard_block  */
#line 2484 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::namespace_block({::Celeste::ast::Type::namespace_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_namespace_block) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10689 "Celeste_parser.tab.c"
    break;

  case 168: /* namespace_name: VARNAME  */
#line 2494 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::namespace_name({::Celeste::ast::Type::namespace_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_namespace_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10700 "Celeste_parser.tab.c"
    break;

  case 169: /* inline_class_declaration: created_class_name COLON deamerreserved_arrow__inline_class_declaration_composite__ COMMA  */
#line 2504 "./Celeste_parser.y"
                                                                                                   {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration({::Celeste::ast::Type::inline_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_created_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__inline_class_declaration_composite__) });
		((*yyvalp).Celeste_inline_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10713 "Celeste_parser.tab.c"
    break;

  case 170: /* inline_class_declaration: created_class_name COLON deamerreserved_arrow__inline_class_declaration_composite__  */
#line 2512 "./Celeste_parser.y"
                                                                                               {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration({::Celeste::ast::Type::inline_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_created_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__inline_class_declaration_composite__) });
		((*yyvalp).Celeste_inline_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
	}
#line 10725 "Celeste_parser.tab.c"
    break;

  case 171: /* inline_class_declaration: created_class_name COLON COMMA  */
#line 2519 "./Celeste_parser.y"
                                          {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration({::Celeste::ast::Type::inline_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_created_class_name) });
		((*yyvalp).Celeste_inline_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10738 "Celeste_parser.tab.c"
    break;

  case 172: /* inline_class_declaration: created_class_name COLON  */
#line 2527 "./Celeste_parser.y"
                                    {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration({::Celeste::ast::Type::inline_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_created_class_name) });
		((*yyvalp).Celeste_inline_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10750 "Celeste_parser.tab.c"
    break;

  case 173: /* deamerreserved_arrow__inline_class_declaration_composite__: inline_class_declaration_composite deamerreserved_star__COMMA__inline_class_declaration_composite__  */
#line 2538 "./Celeste_parser.y"
                                                                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__inline_class_declaration_composite__({::Celeste::ast::Type::deamerreserved_arrow__inline_class_declaration_composite__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite__) });
		((*yyvalp).Celeste_deamerreserved_arrow__inline_class_declaration_composite__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10761 "Celeste_parser.tab.c"
    break;

  case 174: /* deamerreserved_star__COMMA__inline_class_declaration_composite__: COMMA inline_class_declaration_composite deamerreserved_star__COMMA__inline_class_declaration_composite__  */
#line 2548 "./Celeste_parser.y"
                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__inline_class_declaration_composite__({::Celeste::ast::Type::deamerreserved_star__COMMA__inline_class_declaration_composite__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 10773 "Celeste_parser.tab.c"
    break;

  case 175: /* deamerreserved_star__COMMA__inline_class_declaration_composite__: %empty  */
#line 2555 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__inline_class_declaration_composite__({::Celeste::ast::Type::deamerreserved_star__COMMA__inline_class_declaration_composite__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10784 "Celeste_parser.tab.c"
    break;

  case 176: /* inline_class_declaration_composite: inline_class_declaration_composite_name  */
#line 2565 "./Celeste_parser.y"
                                                 {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10795 "Celeste_parser.tab.c"
    break;

  case 177: /* inline_class_declaration_composite: inline_class_declaration_composite_name AS LEFT_SQUARE_BRACKET inline_class_declaration_composite_alias RIGHT_SQUARE_BRACKET  */
#line 2571 "./Celeste_parser.y"
                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_alias) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10808 "Celeste_parser.tab.c"
    break;

  case 178: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET inline_class_declaration_composite_alias COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2579 "./Celeste_parser.y"
                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10822 "Celeste_parser.tab.c"
    break;

  case 179: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET deamerreserved_arrow__inline_class_declaration_composite_alias__ COMMA RIGHT_SQUARE_BRACKET COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2588 "./Celeste_parser.y"
                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__inline_class_declaration_composite_alias__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10839 "Celeste_parser.tab.c"
    break;

  case 180: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET deamerreserved_arrow__inline_class_declaration_composite_alias__ RIGHT_SQUARE_BRACKET COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2600 "./Celeste_parser.y"
                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__inline_class_declaration_composite_alias__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10855 "Celeste_parser.tab.c"
    break;

  case 181: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET COMMA RIGHT_SQUARE_BRACKET COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2611 "./Celeste_parser.y"
                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10872 "Celeste_parser.tab.c"
    break;

  case 182: /* inline_class_declaration_composite: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET COLON inline_class_declaration_composite_name RIGHT_SQUARE_BRACKET  */
#line 2623 "./Celeste_parser.y"
                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite({::Celeste::ast::Type::inline_class_declaration_composite, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_name) });
		((*yyvalp).Celeste_inline_class_declaration_composite) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10888 "Celeste_parser.tab.c"
    break;

  case 183: /* deamerreserved_arrow__inline_class_declaration_composite_alias__: inline_class_declaration_composite_alias deamerreserved_star__COMMA__inline_class_declaration_composite_alias__  */
#line 2638 "./Celeste_parser.y"
                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__inline_class_declaration_composite_alias__({::Celeste::ast::Type::deamerreserved_arrow__inline_class_declaration_composite_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__) });
		((*yyvalp).Celeste_deamerreserved_arrow__inline_class_declaration_composite_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10899 "Celeste_parser.tab.c"
    break;

  case 184: /* deamerreserved_star__COMMA__inline_class_declaration_composite_alias__: COMMA inline_class_declaration_composite_alias deamerreserved_star__COMMA__inline_class_declaration_composite_alias__  */
#line 2648 "./Celeste_parser.y"
                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__inline_class_declaration_composite_alias__({::Celeste::ast::Type::deamerreserved_star__COMMA__inline_class_declaration_composite_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_inline_class_declaration_composite_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 10911 "Celeste_parser.tab.c"
    break;

  case 185: /* deamerreserved_star__COMMA__inline_class_declaration_composite_alias__: %empty  */
#line 2655 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__inline_class_declaration_composite_alias__({::Celeste::ast::Type::deamerreserved_star__COMMA__inline_class_declaration_composite_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__inline_class_declaration_composite_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10922 "Celeste_parser.tab.c"
    break;

  case 186: /* inline_class_declaration_composite_alias: VARNAME  */
#line 2665 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite_alias({::Celeste::ast::Type::inline_class_declaration_composite_alias, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_inline_class_declaration_composite_alias) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10933 "Celeste_parser.tab.c"
    break;

  case 187: /* inline_class_declaration_composite_name: symbol_reference  */
#line 2675 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::inline_class_declaration_composite_name({::Celeste::ast::Type::inline_class_declaration_composite_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_inline_class_declaration_composite_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10944 "Celeste_parser.tab.c"
    break;

  case 188: /* created_class_name: VARNAME  */
#line 2685 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::created_class_name({::Celeste::ast::Type::created_class_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_created_class_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 10955 "Celeste_parser.tab.c"
    break;

  case 189: /* code_block: LEFT_PARANTHESIS deamerreserved_arrow__code_block_input_argument__ COMMA RIGHT_PARANTHESIS LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2695 "./Celeste_parser.y"
                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__code_block_input_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10971 "Celeste_parser.tab.c"
    break;

  case 190: /* code_block: LEFT_PARANTHESIS deamerreserved_arrow__code_block_input_argument__ RIGHT_PARANTHESIS LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2706 "./Celeste_parser.y"
                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__code_block_input_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 10986 "Celeste_parser.tab.c"
    break;

  case 191: /* code_block: LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2716 "./Celeste_parser.y"
                                                                                                                {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11002 "Celeste_parser.tab.c"
    break;

  case 192: /* code_block: LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2727 "./Celeste_parser.y"
                                                                                                          {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11017 "Celeste_parser.tab.c"
    break;

  case 193: /* code_block: LEFT_SQUARE_BRACKET code_block_program RIGHT_SQUARE_BRACKET  */
#line 2737 "./Celeste_parser.y"
                                                                       {
		auto* const newNode = new Celeste::ast::node::code_block({::Celeste::ast::Type::code_block, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_program) });
		((*yyvalp).Celeste_code_block) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11030 "Celeste_parser.tab.c"
    break;

  case 194: /* deamerreserved_arrow__code_block_input_argument__: code_block_input_argument deamerreserved_star__COMMA__code_block_input_argument__  */
#line 2749 "./Celeste_parser.y"
                                                                                           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__code_block_input_argument__({::Celeste::ast::Type::deamerreserved_arrow__code_block_input_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_input_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__code_block_input_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__code_block_input_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11041 "Celeste_parser.tab.c"
    break;

  case 195: /* deamerreserved_star__COMMA__code_block_input_argument__: COMMA code_block_input_argument deamerreserved_star__COMMA__code_block_input_argument__  */
#line 2759 "./Celeste_parser.y"
                                                                                                 {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__code_block_input_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__code_block_input_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_code_block_input_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__code_block_input_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__code_block_input_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 11053 "Celeste_parser.tab.c"
    break;

  case 196: /* deamerreserved_star__COMMA__code_block_input_argument__: %empty  */
#line 2766 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__code_block_input_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__code_block_input_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__code_block_input_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11064 "Celeste_parser.tab.c"
    break;

  case 197: /* code_block_input_argument: code_block_argument  */
#line 2776 "./Celeste_parser.y"
                             {
		auto* const newNode = new Celeste::ast::node::code_block_input_argument({::Celeste::ast::Type::code_block_input_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_code_block_argument) });
		((*yyvalp).Celeste_code_block_input_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11075 "Celeste_parser.tab.c"
    break;

  case 198: /* code_block_argument: type code_block_argument_name  */
#line 2786 "./Celeste_parser.y"
                                       {
		auto* const newNode = new Celeste::ast::node::code_block_argument({::Celeste::ast::Type::code_block_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_code_block_argument_name) });
		((*yyvalp).Celeste_code_block_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11086 "Celeste_parser.tab.c"
    break;

  case 199: /* code_block_argument: type  */
#line 2792 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::code_block_argument({::Celeste::ast::Type::code_block_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_type) });
		((*yyvalp).Celeste_code_block_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11097 "Celeste_parser.tab.c"
    break;

  case 200: /* code_block_argument_name: VARNAME  */
#line 2802 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::code_block_argument_name({::Celeste::ast::Type::code_block_argument_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_code_block_argument_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11108 "Celeste_parser.tab.c"
    break;

  case 201: /* code_block_program: standard_block  */
#line 2812 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::code_block_program({::Celeste::ast::Type::code_block_program, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_code_block_program) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11119 "Celeste_parser.tab.c"
    break;

  case 202: /* variable_declaration: attribute_section type variable_name EQ value_list  */
#line 2822 "./Celeste_parser.y"
                                                            {
		auto* const newNode = new Celeste::ast::node::variable_declaration({::Celeste::ast::Type::variable_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_variable_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_variable_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11130 "Celeste_parser.tab.c"
    break;

  case 203: /* variable_declaration: attribute_section type variable_name  */
#line 2828 "./Celeste_parser.y"
                                                {
		auto* const newNode = new Celeste::ast::node::variable_declaration({::Celeste::ast::Type::variable_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_variable_name) });
		((*yyvalp).Celeste_variable_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11141 "Celeste_parser.tab.c"
    break;

  case 204: /* variable_declaration: type variable_name EQ value_list  */
#line 2834 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::variable_declaration({::Celeste::ast::Type::variable_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_variable_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_variable_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11152 "Celeste_parser.tab.c"
    break;

  case 205: /* variable_declaration: type variable_name  */
#line 2840 "./Celeste_parser.y"
                              {
		auto* const newNode = new Celeste::ast::node::variable_declaration({::Celeste::ast::Type::variable_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_variable_name) });
		((*yyvalp).Celeste_variable_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11163 "Celeste_parser.tab.c"
    break;

  case 206: /* array_declaration: LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET  */
#line 2850 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::array_declaration({::Celeste::ast::Type::array_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_array_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11176 "Celeste_parser.tab.c"
    break;

  case 207: /* variable_name: symbol_reference  */
#line 2862 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::variable_name({::Celeste::ast::Type::variable_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_variable_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 11187 "Celeste_parser.tab.c"
    break;

  case 208: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2872 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-18)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11205 "Celeste_parser.tab.c"
    break;

  case 209: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2885 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11223 "Celeste_parser.tab.c"
    break;

  case 210: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2898 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11240 "Celeste_parser.tab.c"
    break;

  case 211: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2910 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11257 "Celeste_parser.tab.c"
    break;

  case 212: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2922 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11275 "Celeste_parser.tab.c"
    break;

  case 213: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2935 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11293 "Celeste_parser.tab.c"
    break;

  case 214: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2948 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11310 "Celeste_parser.tab.c"
    break;

  case 215: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2960 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11327 "Celeste_parser.tab.c"
    break;

  case 216: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2972 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11345 "Celeste_parser.tab.c"
    break;

  case 217: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2985 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11363 "Celeste_parser.tab.c"
    break;

  case 218: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 2998 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11380 "Celeste_parser.tab.c"
    break;

  case 219: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3010 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11397 "Celeste_parser.tab.c"
    break;

  case 220: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3022 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11415 "Celeste_parser.tab.c"
    break;

  case 221: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3035 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11433 "Celeste_parser.tab.c"
    break;

  case 222: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3048 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11450 "Celeste_parser.tab.c"
    break;

  case 223: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3060 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11467 "Celeste_parser.tab.c"
    break;

  case 224: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3072 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11485 "Celeste_parser.tab.c"
    break;

  case 225: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3085 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11503 "Celeste_parser.tab.c"
    break;

  case 226: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3098 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11520 "Celeste_parser.tab.c"
    break;

  case 227: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3110 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11537 "Celeste_parser.tab.c"
    break;

  case 228: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3122 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11555 "Celeste_parser.tab.c"
    break;

  case 229: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3135 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11573 "Celeste_parser.tab.c"
    break;

  case 230: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3148 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11590 "Celeste_parser.tab.c"
    break;

  case 231: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3160 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11607 "Celeste_parser.tab.c"
    break;

  case 232: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3172 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 24, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11625 "Celeste_parser.tab.c"
    break;

  case 233: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3185 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 25, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11643 "Celeste_parser.tab.c"
    break;

  case 234: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3198 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 26, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11660 "Celeste_parser.tab.c"
    break;

  case 235: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3210 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 27, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11677 "Celeste_parser.tab.c"
    break;

  case 236: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3222 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 28, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11695 "Celeste_parser.tab.c"
    break;

  case 237: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3235 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 29, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11713 "Celeste_parser.tab.c"
    break;

  case 238: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3248 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 30, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11730 "Celeste_parser.tab.c"
    break;

  case 239: /* template_function_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3260 "./Celeste_parser.y"
                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 31, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11747 "Celeste_parser.tab.c"
    break;

  case 240: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3272 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 32, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-17)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11765 "Celeste_parser.tab.c"
    break;

  case 241: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3285 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 33, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11783 "Celeste_parser.tab.c"
    break;

  case 242: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3298 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 34, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11800 "Celeste_parser.tab.c"
    break;

  case 243: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3310 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 35, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11817 "Celeste_parser.tab.c"
    break;

  case 244: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3322 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 36, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11835 "Celeste_parser.tab.c"
    break;

  case 245: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3335 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 37, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11853 "Celeste_parser.tab.c"
    break;

  case 246: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3348 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 38, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11870 "Celeste_parser.tab.c"
    break;

  case 247: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3360 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 39, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11887 "Celeste_parser.tab.c"
    break;

  case 248: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3372 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 40, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11905 "Celeste_parser.tab.c"
    break;

  case 249: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3385 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 41, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11923 "Celeste_parser.tab.c"
    break;

  case 250: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3398 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 42, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11940 "Celeste_parser.tab.c"
    break;

  case 251: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3410 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 43, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11957 "Celeste_parser.tab.c"
    break;

  case 252: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3422 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 44, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11975 "Celeste_parser.tab.c"
    break;

  case 253: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3435 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 45, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 11993 "Celeste_parser.tab.c"
    break;

  case 254: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3448 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 46, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12010 "Celeste_parser.tab.c"
    break;

  case 255: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3460 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 47, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12027 "Celeste_parser.tab.c"
    break;

  case 256: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3472 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 48, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-16)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12045 "Celeste_parser.tab.c"
    break;

  case 257: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3485 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 49, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12063 "Celeste_parser.tab.c"
    break;

  case 258: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3498 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 50, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12080 "Celeste_parser.tab.c"
    break;

  case 259: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3510 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 51, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12097 "Celeste_parser.tab.c"
    break;

  case 260: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3522 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 52, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12115 "Celeste_parser.tab.c"
    break;

  case 261: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3535 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 53, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12133 "Celeste_parser.tab.c"
    break;

  case 262: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3548 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 54, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12150 "Celeste_parser.tab.c"
    break;

  case 263: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3560 "./Celeste_parser.y"
                                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 55, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12167 "Celeste_parser.tab.c"
    break;

  case 264: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3572 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 56, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-15)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12185 "Celeste_parser.tab.c"
    break;

  case 265: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3585 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 57, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12203 "Celeste_parser.tab.c"
    break;

  case 266: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3598 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 58, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12220 "Celeste_parser.tab.c"
    break;

  case 267: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3610 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 59, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12237 "Celeste_parser.tab.c"
    break;

  case 268: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3622 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 60, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12255 "Celeste_parser.tab.c"
    break;

  case 269: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3635 "./Celeste_parser.y"
                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 61, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12273 "Celeste_parser.tab.c"
    break;

  case 270: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3648 "./Celeste_parser.y"
                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 62, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12290 "Celeste_parser.tab.c"
    break;

  case 271: /* template_function_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3660 "./Celeste_parser.y"
                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_function_declaration({::Celeste::ast::Type::template_function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 63, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12307 "Celeste_parser.tab.c"
    break;

  case 272: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3676 "./Celeste_parser.y"
                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12323 "Celeste_parser.tab.c"
    break;

  case 273: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3687 "./Celeste_parser.y"
                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12339 "Celeste_parser.tab.c"
    break;

  case 274: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3698 "./Celeste_parser.y"
                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12354 "Celeste_parser.tab.c"
    break;

  case 275: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3708 "./Celeste_parser.y"
                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12369 "Celeste_parser.tab.c"
    break;

  case 276: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3718 "./Celeste_parser.y"
                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12385 "Celeste_parser.tab.c"
    break;

  case 277: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3729 "./Celeste_parser.y"
                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12401 "Celeste_parser.tab.c"
    break;

  case 278: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3740 "./Celeste_parser.y"
                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12416 "Celeste_parser.tab.c"
    break;

  case 279: /* function_declaration: attribute_section execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3750 "./Celeste_parser.y"
                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12431 "Celeste_parser.tab.c"
    break;

  case 280: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3760 "./Celeste_parser.y"
                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12447 "Celeste_parser.tab.c"
    break;

  case 281: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3771 "./Celeste_parser.y"
                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12463 "Celeste_parser.tab.c"
    break;

  case 282: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3782 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12478 "Celeste_parser.tab.c"
    break;

  case 283: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3792 "./Celeste_parser.y"
                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12493 "Celeste_parser.tab.c"
    break;

  case 284: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3802 "./Celeste_parser.y"
                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12509 "Celeste_parser.tab.c"
    break;

  case 285: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3813 "./Celeste_parser.y"
                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12525 "Celeste_parser.tab.c"
    break;

  case 286: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3824 "./Celeste_parser.y"
                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12540 "Celeste_parser.tab.c"
    break;

  case 287: /* function_declaration: execution_keyword_permutation FUNCTION return_type function_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 3834 "./Celeste_parser.y"
                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::function_declaration({::Celeste::ast::Type::function_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::FUNCTION({::Celeste::ast::Type::FUNCTION, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_function_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_function_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12555 "Celeste_parser.tab.c"
    break;

  case 288: /* trailing_return_type: return_type  */
#line 3848 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::trailing_return_type({::Celeste::ast::Type::trailing_return_type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_return_type) });
		((*yyvalp).Celeste_trailing_return_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12566 "Celeste_parser.tab.c"
    break;

  case 289: /* return_type: type  */
#line 3858 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::return_type({::Celeste::ast::Type::return_type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_type) });
		((*yyvalp).Celeste_return_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12577 "Celeste_parser.tab.c"
    break;

  case 290: /* conditional_function_argument: function_argument  */
#line 3868 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::conditional_function_argument({::Celeste::ast::Type::conditional_function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_argument) });
		((*yyvalp).Celeste_conditional_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12588 "Celeste_parser.tab.c"
    break;

  case 291: /* function_argument: function_argument_type function_argument_name condition_modifier_function_call EQ full_value  */
#line 3878 "./Celeste_parser.y"
                                                                                                      {
		auto* const newNode = new Celeste::ast::node::function_argument({::Celeste::ast::Type::function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_function_argument_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_function_argument_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_condition_modifier_function_call), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12599 "Celeste_parser.tab.c"
    break;

  case 292: /* function_argument: function_argument_type function_argument_name condition_modifier_function_call  */
#line 3884 "./Celeste_parser.y"
                                                                                          {
		auto* const newNode = new Celeste::ast::node::function_argument({::Celeste::ast::Type::function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_function_argument_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_argument_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_condition_modifier_function_call) });
		((*yyvalp).Celeste_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12610 "Celeste_parser.tab.c"
    break;

  case 293: /* function_argument: function_argument_type function_argument_name EQ full_value  */
#line 3890 "./Celeste_parser.y"
                                                                       {
		auto* const newNode = new Celeste::ast::node::function_argument({::Celeste::ast::Type::function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_function_argument_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_function_argument_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12621 "Celeste_parser.tab.c"
    break;

  case 294: /* function_argument: function_argument_type function_argument_name  */
#line 3896 "./Celeste_parser.y"
                                                         {
		auto* const newNode = new Celeste::ast::node::function_argument({::Celeste::ast::Type::function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_argument_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_argument_name) });
		((*yyvalp).Celeste_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12632 "Celeste_parser.tab.c"
    break;

  case 295: /* function_argument_type: type  */
#line 3906 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::function_argument_type({::Celeste::ast::Type::function_argument_type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_type) });
		((*yyvalp).Celeste_function_argument_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12643 "Celeste_parser.tab.c"
    break;

  case 296: /* function_argument_name: symbol_reference  */
#line 3916 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::function_argument_name({::Celeste::ast::Type::function_argument_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_function_argument_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12654 "Celeste_parser.tab.c"
    break;

  case 297: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name LEFT_SQUARE_BRACKET deamerreserved_arrow__condition_modifier_argument__ COMMA RIGHT_SQUARE_BRACKET RIGHT_PARANTHESIS  */
#line 3926 "./Celeste_parser.y"
                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_condition_modifier_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__condition_modifier_argument__) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12670 "Celeste_parser.tab.c"
    break;

  case 298: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name LEFT_SQUARE_BRACKET deamerreserved_arrow__condition_modifier_argument__ RIGHT_SQUARE_BRACKET RIGHT_PARANTHESIS  */
#line 3937 "./Celeste_parser.y"
                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_condition_modifier_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__condition_modifier_argument__) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12685 "Celeste_parser.tab.c"
    break;

  case 299: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name LEFT_SQUARE_BRACKET COMMA RIGHT_SQUARE_BRACKET RIGHT_PARANTHESIS  */
#line 3947 "./Celeste_parser.y"
                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_condition_modifier_name) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12701 "Celeste_parser.tab.c"
    break;

  case 300: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET RIGHT_PARANTHESIS  */
#line 3958 "./Celeste_parser.y"
                                                                                                               {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_condition_modifier_name) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12716 "Celeste_parser.tab.c"
    break;

  case 301: /* condition_modifier_function_call: LEFT_PARANTHESIS condition_modifier_name RIGHT_PARANTHESIS  */
#line 3968 "./Celeste_parser.y"
                                                                      {
		auto* const newNode = new Celeste::ast::node::condition_modifier_function_call({::Celeste::ast::Type::condition_modifier_function_call, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_condition_modifier_name) });
		((*yyvalp).Celeste_condition_modifier_function_call) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12729 "Celeste_parser.tab.c"
    break;

  case 302: /* deamerreserved_arrow__condition_modifier_argument__: condition_modifier_argument deamerreserved_star__COMMA__condition_modifier_argument__  */
#line 3980 "./Celeste_parser.y"
                                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__condition_modifier_argument__({::Celeste::ast::Type::deamerreserved_arrow__condition_modifier_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_condition_modifier_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__condition_modifier_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__condition_modifier_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12740 "Celeste_parser.tab.c"
    break;

  case 303: /* deamerreserved_star__COMMA__condition_modifier_argument__: COMMA condition_modifier_argument deamerreserved_star__COMMA__condition_modifier_argument__  */
#line 3990 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__condition_modifier_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__condition_modifier_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_condition_modifier_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__condition_modifier_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__condition_modifier_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 12752 "Celeste_parser.tab.c"
    break;

  case 304: /* deamerreserved_star__COMMA__condition_modifier_argument__: %empty  */
#line 3997 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__condition_modifier_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__condition_modifier_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__condition_modifier_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12763 "Celeste_parser.tab.c"
    break;

  case 305: /* condition_modifier_name: symbol_reference  */
#line 4007 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::condition_modifier_name({::Celeste::ast::Type::condition_modifier_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_condition_modifier_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12774 "Celeste_parser.tab.c"
    break;

  case 306: /* condition_modifier_argument: full_value  */
#line 4017 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::condition_modifier_argument({::Celeste::ast::Type::condition_modifier_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_condition_modifier_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12785 "Celeste_parser.tab.c"
    break;

  case 307: /* function_body: standard_block  */
#line 4027 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::function_body({::Celeste::ast::Type::function_body, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_standard_block) });
		((*yyvalp).Celeste_function_body) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12796 "Celeste_parser.tab.c"
    break;

  case 308: /* function_name: symbol_reference  */
#line 4037 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::function_name({::Celeste::ast::Type::function_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_function_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 12807 "Celeste_parser.tab.c"
    break;

  case 309: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4047 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12822 "Celeste_parser.tab.c"
    break;

  case 310: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4057 "./Celeste_parser.y"
                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12837 "Celeste_parser.tab.c"
    break;

  case 311: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4067 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12852 "Celeste_parser.tab.c"
    break;

  case 312: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4077 "./Celeste_parser.y"
                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12867 "Celeste_parser.tab.c"
    break;

  case 313: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4087 "./Celeste_parser.y"
                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12882 "Celeste_parser.tab.c"
    break;

  case 314: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4097 "./Celeste_parser.y"
                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12897 "Celeste_parser.tab.c"
    break;

  case 315: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4107 "./Celeste_parser.y"
                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12912 "Celeste_parser.tab.c"
    break;

  case 316: /* template_class_declaration: attribute_section execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4117 "./Celeste_parser.y"
                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12927 "Celeste_parser.tab.c"
    break;

  case 317: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4127 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12942 "Celeste_parser.tab.c"
    break;

  case 318: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4137 "./Celeste_parser.y"
                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12957 "Celeste_parser.tab.c"
    break;

  case 319: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4147 "./Celeste_parser.y"
                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12972 "Celeste_parser.tab.c"
    break;

  case 320: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4157 "./Celeste_parser.y"
                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 12987 "Celeste_parser.tab.c"
    break;

  case 321: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4167 "./Celeste_parser.y"
                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13002 "Celeste_parser.tab.c"
    break;

  case 322: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4177 "./Celeste_parser.y"
                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13017 "Celeste_parser.tab.c"
    break;

  case 323: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name class_inherit_base LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4187 "./Celeste_parser.y"
                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13032 "Celeste_parser.tab.c"
    break;

  case 324: /* template_class_declaration: execution_keyword_permutation TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4197 "./Celeste_parser.y"
                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_declaration({::Celeste::ast::Type::template_class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_template_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13047 "Celeste_parser.tab.c"
    break;

  case 325: /* template_parameter: type template_parameter_name  */
#line 4211 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::template_parameter({::Celeste::ast::Type::template_parameter, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_parameter_name) });
		((*yyvalp).Celeste_template_parameter) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13058 "Celeste_parser.tab.c"
    break;

  case 326: /* template_parameter_name: VARNAME  */
#line 4221 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::template_parameter_name({::Celeste::ast::Type::template_parameter_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_template_parameter_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13069 "Celeste_parser.tab.c"
    break;

  case 327: /* class_declaration: attribute_section execution_keyword_permutation CLASS class_name deamerreserved_arrow__class_inherit_base__ LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4231 "./Celeste_parser.y"
                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::class_declaration({::Celeste::ast::Type::class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__class_inherit_base__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13082 "Celeste_parser.tab.c"
    break;

  case 328: /* class_declaration: attribute_section execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4239 "./Celeste_parser.y"
                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::class_declaration({::Celeste::ast::Type::class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13095 "Celeste_parser.tab.c"
    break;

  case 329: /* class_declaration: execution_keyword_permutation CLASS class_name deamerreserved_arrow__class_inherit_base__ LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4247 "./Celeste_parser.y"
                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::class_declaration({::Celeste::ast::Type::class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__class_inherit_base__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13108 "Celeste_parser.tab.c"
    break;

  case 330: /* class_declaration: execution_keyword_permutation CLASS class_name LEFT_BRACKET class_body RIGHT_BRACKET  */
#line 4255 "./Celeste_parser.y"
                                                                                                {
		auto* const newNode = new Celeste::ast::node::class_declaration({::Celeste::ast::Type::class_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_body) });
		((*yyvalp).Celeste_class_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13121 "Celeste_parser.tab.c"
    break;

  case 331: /* deamerreserved_arrow__class_inherit_base__: class_inherit_base deamerreserved_star__COMMA__class_inherit_base__  */
#line 4267 "./Celeste_parser.y"
                                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__class_inherit_base__({::Celeste::ast::Type::deamerreserved_arrow__class_inherit_base__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__class_inherit_base__) });
		((*yyvalp).Celeste_deamerreserved_arrow__class_inherit_base__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13132 "Celeste_parser.tab.c"
    break;

  case 332: /* deamerreserved_star__COMMA__class_inherit_base__: COMMA class_inherit_base deamerreserved_star__COMMA__class_inherit_base__  */
#line 4277 "./Celeste_parser.y"
                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__class_inherit_base__({::Celeste::ast::Type::deamerreserved_star__COMMA__class_inherit_base__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_inherit_base), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__class_inherit_base__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__class_inherit_base__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 13144 "Celeste_parser.tab.c"
    break;

  case 333: /* deamerreserved_star__COMMA__class_inherit_base__: %empty  */
#line 4284 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__class_inherit_base__({::Celeste::ast::Type::deamerreserved_star__COMMA__class_inherit_base__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__class_inherit_base__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13155 "Celeste_parser.tab.c"
    break;

  case 334: /* class_name: symbol_reference  */
#line 4294 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::class_name({::Celeste::ast::Type::class_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_class_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13166 "Celeste_parser.tab.c"
    break;

  case 335: /* execution_keyword_permutation: CODE  */
#line 4304 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13177 "Celeste_parser.tab.c"
    break;

  case 336: /* execution_keyword_permutation: RUNTIME  */
#line 4310 "./Celeste_parser.y"
                   {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::RUNTIME({::Celeste::ast::Type::RUNTIME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13188 "Celeste_parser.tab.c"
    break;

  case 337: /* execution_keyword_permutation: CODE RUNTIME  */
#line 4316 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::RUNTIME({::Celeste::ast::Type::RUNTIME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13199 "Celeste_parser.tab.c"
    break;

  case 338: /* execution_keyword_permutation: RUNTIME CODE  */
#line 4322 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::RUNTIME({::Celeste::ast::Type::RUNTIME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13210 "Celeste_parser.tab.c"
    break;

  case 339: /* execution_keyword_permutation: %empty  */
#line 4328 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::execution_keyword_permutation({::Celeste::ast::Type::execution_keyword_permutation, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_execution_keyword_permutation) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13221 "Celeste_parser.tab.c"
    break;

  case 340: /* class_body: deamerreserved_star__class_stmt__  */
#line 4338 "./Celeste_parser.y"
                                           {
		auto* const newNode = new Celeste::ast::node::class_body({::Celeste::ast::Type::class_body, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__class_stmt__) });
		((*yyvalp).Celeste_class_body) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13232 "Celeste_parser.tab.c"
    break;

  case 341: /* deamerreserved_star__class_stmt__: class_stmt deamerreserved_star__class_stmt__  */
#line 4348 "./Celeste_parser.y"
                                                      {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__class_stmt__({::Celeste::ast::Type::deamerreserved_star__class_stmt__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_class_stmt), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__class_stmt__) });
		((*yyvalp).Celeste_deamerreserved_star__class_stmt__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13243 "Celeste_parser.tab.c"
    break;

  case 342: /* deamerreserved_star__class_stmt__: %empty  */
#line 4354 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__class_stmt__({::Celeste::ast::Type::deamerreserved_star__class_stmt__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__class_stmt__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13254 "Celeste_parser.tab.c"
    break;

  case 343: /* class_stmt: accessibility  */
#line 4364 "./Celeste_parser.y"
                       {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_accessibility) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13265 "Celeste_parser.tab.c"
    break;

  case 344: /* class_stmt: class_stmt_member_field_declaration  */
#line 4370 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_stmt_member_field_declaration) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13276 "Celeste_parser.tab.c"
    break;

  case 345: /* class_stmt: class_stmt_member_function  */
#line 4376 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_stmt_member_function) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13287 "Celeste_parser.tab.c"
    break;

  case 346: /* class_stmt: class_stmt_member_template_function  */
#line 4382 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_stmt_member_template_function) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13298 "Celeste_parser.tab.c"
    break;

  case 347: /* class_stmt: class_stmt_constructor  */
#line 4388 "./Celeste_parser.y"
                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_class_stmt_constructor) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13309 "Celeste_parser.tab.c"
    break;

  case 348: /* class_stmt: template_class_stmt_constructor  */
#line 4394 "./Celeste_parser.y"
                                           {
		auto* const newNode = new Celeste::ast::node::class_stmt({::Celeste::ast::Type::class_stmt, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_class_stmt_constructor) });
		((*yyvalp).Celeste_class_stmt) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13320 "Celeste_parser.tab.c"
    break;

  case 349: /* class_stmt_member_field_declaration: attribute_section type member_field_name EQ value_list COMMA  */
#line 4404 "./Celeste_parser.y"
                                                                      {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13332 "Celeste_parser.tab.c"
    break;

  case 350: /* class_stmt_member_field_declaration: attribute_section type member_field_name COMMA  */
#line 4411 "./Celeste_parser.y"
                                                          {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13344 "Celeste_parser.tab.c"
    break;

  case 351: /* class_stmt_member_field_declaration: type member_field_name EQ value_list COMMA  */
#line 4418 "./Celeste_parser.y"
                                                      {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13356 "Celeste_parser.tab.c"
    break;

  case 352: /* class_stmt_member_field_declaration: type member_field_name COMMA  */
#line 4425 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13368 "Celeste_parser.tab.c"
    break;

  case 353: /* class_stmt_member_field_declaration: attribute_section type member_field_name EQ value_list SEMICOLON  */
#line 4432 "./Celeste_parser.y"
                                                                            {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13380 "Celeste_parser.tab.c"
    break;

  case 354: /* class_stmt_member_field_declaration: attribute_section type member_field_name SEMICOLON  */
#line 4439 "./Celeste_parser.y"
                                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13392 "Celeste_parser.tab.c"
    break;

  case 355: /* class_stmt_member_field_declaration: type member_field_name EQ value_list SEMICOLON  */
#line 4446 "./Celeste_parser.y"
                                                          {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13404 "Celeste_parser.tab.c"
    break;

  case 356: /* class_stmt_member_field_declaration: type member_field_name SEMICOLON  */
#line 4453 "./Celeste_parser.y"
                                            {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13416 "Celeste_parser.tab.c"
    break;

  case 357: /* class_stmt_member_field_declaration: attribute_section type member_field_name EQ value_list  */
#line 4460 "./Celeste_parser.y"
                                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13427 "Celeste_parser.tab.c"
    break;

  case 358: /* class_stmt_member_field_declaration: attribute_section type member_field_name  */
#line 4466 "./Celeste_parser.y"
                                                    {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13438 "Celeste_parser.tab.c"
    break;

  case 359: /* class_stmt_member_field_declaration: type member_field_name EQ value_list  */
#line 4472 "./Celeste_parser.y"
                                                {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_member_field_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_value_list) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13449 "Celeste_parser.tab.c"
    break;

  case 360: /* class_stmt_member_field_declaration: type member_field_name  */
#line 4478 "./Celeste_parser.y"
                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_field_declaration({::Celeste::ast::Type::class_stmt_member_field_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_member_field_name) });
		((*yyvalp).Celeste_class_stmt_member_field_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13460 "Celeste_parser.tab.c"
    break;

  case 361: /* member_field_name: symbol_reference  */
#line 4488 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::member_field_name({::Celeste::ast::Type::member_field_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_member_field_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13471 "Celeste_parser.tab.c"
    break;

  case 362: /* class_stmt_member_function: VIRTUAL function_declaration OVERRIDE  */
#line 4498 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VIRTUAL({::Celeste::ast::Type::VIRTUAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13482 "Celeste_parser.tab.c"
    break;

  case 363: /* class_stmt_member_function: VIRTUAL function_declaration  */
#line 4504 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VIRTUAL({::Celeste::ast::Type::VIRTUAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13493 "Celeste_parser.tab.c"
    break;

  case 364: /* class_stmt_member_function: PURE function_declaration OVERRIDE  */
#line 4510 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PURE({::Celeste::ast::Type::PURE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13504 "Celeste_parser.tab.c"
    break;

  case 365: /* class_stmt_member_function: PURE function_declaration  */
#line 4516 "./Celeste_parser.y"
                                     {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PURE({::Celeste::ast::Type::PURE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13515 "Celeste_parser.tab.c"
    break;

  case 366: /* class_stmt_member_function: function_declaration OVERRIDE  */
#line 4522 "./Celeste_parser.y"
                                         {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13526 "Celeste_parser.tab.c"
    break;

  case 367: /* class_stmt_member_function: function_declaration  */
#line 4528 "./Celeste_parser.y"
                                {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_function({::Celeste::ast::Type::class_stmt_member_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13537 "Celeste_parser.tab.c"
    break;

  case 368: /* class_stmt_member_template_function: VIRTUAL template_function_declaration OVERRIDE  */
#line 4538 "./Celeste_parser.y"
                                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VIRTUAL({::Celeste::ast::Type::VIRTUAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13548 "Celeste_parser.tab.c"
    break;

  case 369: /* class_stmt_member_template_function: VIRTUAL template_function_declaration  */
#line 4544 "./Celeste_parser.y"
                                                 {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VIRTUAL({::Celeste::ast::Type::VIRTUAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13559 "Celeste_parser.tab.c"
    break;

  case 370: /* class_stmt_member_template_function: PURE template_function_declaration OVERRIDE  */
#line 4550 "./Celeste_parser.y"
                                                       {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PURE({::Celeste::ast::Type::PURE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13570 "Celeste_parser.tab.c"
    break;

  case 371: /* class_stmt_member_template_function: PURE template_function_declaration  */
#line 4556 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PURE({::Celeste::ast::Type::PURE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13581 "Celeste_parser.tab.c"
    break;

  case 372: /* class_stmt_member_template_function: template_function_declaration OVERRIDE  */
#line 4562 "./Celeste_parser.y"
                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_template_function_declaration), new Celeste::ast::node::OVERRIDE({::Celeste::ast::Type::OVERRIDE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13592 "Celeste_parser.tab.c"
    break;

  case 373: /* class_stmt_member_template_function: template_function_declaration  */
#line 4568 "./Celeste_parser.y"
                                         {
		auto* const newNode = new Celeste::ast::node::class_stmt_member_template_function({::Celeste::ast::Type::class_stmt_member_template_function, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_template_function_declaration) });
		((*yyvalp).Celeste_class_stmt_member_template_function) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 13603 "Celeste_parser.tab.c"
    break;

  case 374: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4578 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13621 "Celeste_parser.tab.c"
    break;

  case 375: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4591 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13638 "Celeste_parser.tab.c"
    break;

  case 376: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4603 "./Celeste_parser.y"
                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13656 "Celeste_parser.tab.c"
    break;

  case 377: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4616 "./Celeste_parser.y"
                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13673 "Celeste_parser.tab.c"
    break;

  case 378: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4628 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13691 "Celeste_parser.tab.c"
    break;

  case 379: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4641 "./Celeste_parser.y"
                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13708 "Celeste_parser.tab.c"
    break;

  case 380: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4653 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13726 "Celeste_parser.tab.c"
    break;

  case 381: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4666 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13743 "Celeste_parser.tab.c"
    break;

  case 382: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4678 "./Celeste_parser.y"
                                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13761 "Celeste_parser.tab.c"
    break;

  case 383: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4691 "./Celeste_parser.y"
                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13778 "Celeste_parser.tab.c"
    break;

  case 384: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4703 "./Celeste_parser.y"
                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13796 "Celeste_parser.tab.c"
    break;

  case 385: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4716 "./Celeste_parser.y"
                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13813 "Celeste_parser.tab.c"
    break;

  case 386: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4728 "./Celeste_parser.y"
                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13831 "Celeste_parser.tab.c"
    break;

  case 387: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4741 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13848 "Celeste_parser.tab.c"
    break;

  case 388: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4753 "./Celeste_parser.y"
                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13866 "Celeste_parser.tab.c"
    break;

  case 389: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4766 "./Celeste_parser.y"
                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13883 "Celeste_parser.tab.c"
    break;

  case 390: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4778 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13901 "Celeste_parser.tab.c"
    break;

  case 391: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4791 "./Celeste_parser.y"
                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13918 "Celeste_parser.tab.c"
    break;

  case 392: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4803 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13936 "Celeste_parser.tab.c"
    break;

  case 393: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4816 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13953 "Celeste_parser.tab.c"
    break;

  case 394: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4828 "./Celeste_parser.y"
                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13971 "Celeste_parser.tab.c"
    break;

  case 395: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4841 "./Celeste_parser.y"
                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 13988 "Celeste_parser.tab.c"
    break;

  case 396: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4853 "./Celeste_parser.y"
                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14006 "Celeste_parser.tab.c"
    break;

  case 397: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4866 "./Celeste_parser.y"
                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14023 "Celeste_parser.tab.c"
    break;

  case 398: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4878 "./Celeste_parser.y"
                                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 24, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14041 "Celeste_parser.tab.c"
    break;

  case 399: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4891 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 25, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14058 "Celeste_parser.tab.c"
    break;

  case 400: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4903 "./Celeste_parser.y"
                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 26, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14076 "Celeste_parser.tab.c"
    break;

  case 401: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4916 "./Celeste_parser.y"
                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 27, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14093 "Celeste_parser.tab.c"
    break;

  case 402: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4928 "./Celeste_parser.y"
                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 28, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14111 "Celeste_parser.tab.c"
    break;

  case 403: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4941 "./Celeste_parser.y"
                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 29, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14128 "Celeste_parser.tab.c"
    break;

  case 404: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4953 "./Celeste_parser.y"
                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 30, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14146 "Celeste_parser.tab.c"
    break;

  case 405: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4966 "./Celeste_parser.y"
                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 31, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14163 "Celeste_parser.tab.c"
    break;

  case 406: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4978 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 32, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-14)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14181 "Celeste_parser.tab.c"
    break;

  case 407: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 4991 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 33, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14198 "Celeste_parser.tab.c"
    break;

  case 408: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5003 "./Celeste_parser.y"
                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 34, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14216 "Celeste_parser.tab.c"
    break;

  case 409: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5016 "./Celeste_parser.y"
                                                                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 35, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14233 "Celeste_parser.tab.c"
    break;

  case 410: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5028 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 36, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14251 "Celeste_parser.tab.c"
    break;

  case 411: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5041 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 37, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14268 "Celeste_parser.tab.c"
    break;

  case 412: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5053 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 38, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14286 "Celeste_parser.tab.c"
    break;

  case 413: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5066 "./Celeste_parser.y"
                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 39, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14303 "Celeste_parser.tab.c"
    break;

  case 414: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5078 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 40, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14321 "Celeste_parser.tab.c"
    break;

  case 415: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5091 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 41, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14338 "Celeste_parser.tab.c"
    break;

  case 416: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5103 "./Celeste_parser.y"
                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 42, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14356 "Celeste_parser.tab.c"
    break;

  case 417: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5116 "./Celeste_parser.y"
                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 43, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14373 "Celeste_parser.tab.c"
    break;

  case 418: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5128 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 44, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14391 "Celeste_parser.tab.c"
    break;

  case 419: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5141 "./Celeste_parser.y"
                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 45, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14408 "Celeste_parser.tab.c"
    break;

  case 420: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5153 "./Celeste_parser.y"
                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 46, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14426 "Celeste_parser.tab.c"
    break;

  case 421: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5166 "./Celeste_parser.y"
                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 47, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14443 "Celeste_parser.tab.c"
    break;

  case 422: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5178 "./Celeste_parser.y"
                                                                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 48, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14461 "Celeste_parser.tab.c"
    break;

  case 423: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5191 "./Celeste_parser.y"
                                                                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 49, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14478 "Celeste_parser.tab.c"
    break;

  case 424: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5203 "./Celeste_parser.y"
                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 50, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14496 "Celeste_parser.tab.c"
    break;

  case 425: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5216 "./Celeste_parser.y"
                                                                                                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 51, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14513 "Celeste_parser.tab.c"
    break;

  case 426: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5228 "./Celeste_parser.y"
                                                                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 52, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14531 "Celeste_parser.tab.c"
    break;

  case 427: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5241 "./Celeste_parser.y"
                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 53, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14548 "Celeste_parser.tab.c"
    break;

  case 428: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5253 "./Celeste_parser.y"
                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 54, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14566 "Celeste_parser.tab.c"
    break;

  case 429: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5266 "./Celeste_parser.y"
                                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 55, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14583 "Celeste_parser.tab.c"
    break;

  case 430: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5278 "./Celeste_parser.y"
                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 56, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14601 "Celeste_parser.tab.c"
    break;

  case 431: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5291 "./Celeste_parser.y"
                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 57, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14618 "Celeste_parser.tab.c"
    break;

  case 432: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5303 "./Celeste_parser.y"
                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 58, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14636 "Celeste_parser.tab.c"
    break;

  case 433: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5316 "./Celeste_parser.y"
                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 59, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14653 "Celeste_parser.tab.c"
    break;

  case 434: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5328 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 60, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14671 "Celeste_parser.tab.c"
    break;

  case 435: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5341 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 61, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14688 "Celeste_parser.tab.c"
    break;

  case 436: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5353 "./Celeste_parser.y"
                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 62, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14706 "Celeste_parser.tab.c"
    break;

  case 437: /* template_class_stmt_constructor: attribute_section TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5366 "./Celeste_parser.y"
                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 63, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14723 "Celeste_parser.tab.c"
    break;

  case 438: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5378 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 64, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-13)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14741 "Celeste_parser.tab.c"
    break;

  case 439: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5391 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 65, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14758 "Celeste_parser.tab.c"
    break;

  case 440: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5403 "./Celeste_parser.y"
                                                                                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 66, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14776 "Celeste_parser.tab.c"
    break;

  case 441: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5416 "./Celeste_parser.y"
                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 67, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14793 "Celeste_parser.tab.c"
    break;

  case 442: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5428 "./Celeste_parser.y"
                                                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 68, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14811 "Celeste_parser.tab.c"
    break;

  case 443: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5441 "./Celeste_parser.y"
                                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 69, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14828 "Celeste_parser.tab.c"
    break;

  case 444: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5453 "./Celeste_parser.y"
                                                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 70, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14846 "Celeste_parser.tab.c"
    break;

  case 445: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5466 "./Celeste_parser.y"
                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 71, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14863 "Celeste_parser.tab.c"
    break;

  case 446: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5478 "./Celeste_parser.y"
                                                                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 72, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14881 "Celeste_parser.tab.c"
    break;

  case 447: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5491 "./Celeste_parser.y"
                                                                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 73, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14898 "Celeste_parser.tab.c"
    break;

  case 448: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5503 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 74, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14916 "Celeste_parser.tab.c"
    break;

  case 449: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5516 "./Celeste_parser.y"
                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 75, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14933 "Celeste_parser.tab.c"
    break;

  case 450: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5528 "./Celeste_parser.y"
                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 76, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14951 "Celeste_parser.tab.c"
    break;

  case 451: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5541 "./Celeste_parser.y"
                                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 77, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14968 "Celeste_parser.tab.c"
    break;

  case 452: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5553 "./Celeste_parser.y"
                                                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 78, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 14986 "Celeste_parser.tab.c"
    break;

  case 453: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET deamerreserved_arrow__template_parameter__ RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5566 "./Celeste_parser.y"
                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 79, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__template_parameter__), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15003 "Celeste_parser.tab.c"
    break;

  case 454: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5578 "./Celeste_parser.y"
                                                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 80, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-12)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15021 "Celeste_parser.tab.c"
    break;

  case 455: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5591 "./Celeste_parser.y"
                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 81, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15038 "Celeste_parser.tab.c"
    break;

  case 456: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5603 "./Celeste_parser.y"
                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 82, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15056 "Celeste_parser.tab.c"
    break;

  case 457: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5616 "./Celeste_parser.y"
                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 83, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15073 "Celeste_parser.tab.c"
    break;

  case 458: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5628 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 84, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15091 "Celeste_parser.tab.c"
    break;

  case 459: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5641 "./Celeste_parser.y"
                                                                                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 85, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15108 "Celeste_parser.tab.c"
    break;

  case 460: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5653 "./Celeste_parser.y"
                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 86, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15126 "Celeste_parser.tab.c"
    break;

  case 461: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5666 "./Celeste_parser.y"
                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 87, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15143 "Celeste_parser.tab.c"
    break;

  case 462: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5678 "./Celeste_parser.y"
                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 88, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15161 "Celeste_parser.tab.c"
    break;

  case 463: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5691 "./Celeste_parser.y"
                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 89, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15178 "Celeste_parser.tab.c"
    break;

  case 464: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5703 "./Celeste_parser.y"
                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 90, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15196 "Celeste_parser.tab.c"
    break;

  case 465: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5716 "./Celeste_parser.y"
                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 91, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15213 "Celeste_parser.tab.c"
    break;

  case 466: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5728 "./Celeste_parser.y"
                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 92, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15231 "Celeste_parser.tab.c"
    break;

  case 467: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5741 "./Celeste_parser.y"
                                                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 93, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15248 "Celeste_parser.tab.c"
    break;

  case 468: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5753 "./Celeste_parser.y"
                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 94, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15266 "Celeste_parser.tab.c"
    break;

  case 469: /* template_class_stmt_constructor: TEMPLATE LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5766 "./Celeste_parser.y"
                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::template_class_stmt_constructor({::Celeste::ast::Type::template_class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 95, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEMPLATE({::Celeste::ast::Type::TEMPLATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_template_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15283 "Celeste_parser.tab.c"
    break;

  case 470: /* class_stmt_constructor: attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5782 "./Celeste_parser.y"
                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15299 "Celeste_parser.tab.c"
    break;

  case 471: /* class_stmt_constructor: attribute_section class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5793 "./Celeste_parser.y"
                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15314 "Celeste_parser.tab.c"
    break;

  case 472: /* class_stmt_constructor: attribute_section class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5803 "./Celeste_parser.y"
                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15330 "Celeste_parser.tab.c"
    break;

  case 473: /* class_stmt_constructor: attribute_section class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5814 "./Celeste_parser.y"
                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15345 "Celeste_parser.tab.c"
    break;

  case 474: /* class_stmt_constructor: class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5824 "./Celeste_parser.y"
                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15361 "Celeste_parser.tab.c"
    break;

  case 475: /* class_stmt_constructor: class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5835 "./Celeste_parser.y"
                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15376 "Celeste_parser.tab.c"
    break;

  case 476: /* class_stmt_constructor: class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5845 "./Celeste_parser.y"
                                                                                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15392 "Celeste_parser.tab.c"
    break;

  case 477: /* class_stmt_constructor: class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5856 "./Celeste_parser.y"
                                                                                                  {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15407 "Celeste_parser.tab.c"
    break;

  case 478: /* class_stmt_constructor: attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5866 "./Celeste_parser.y"
                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15423 "Celeste_parser.tab.c"
    break;

  case 479: /* class_stmt_constructor: attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5877 "./Celeste_parser.y"
                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15438 "Celeste_parser.tab.c"
    break;

  case 480: /* class_stmt_constructor: attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5887 "./Celeste_parser.y"
                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15454 "Celeste_parser.tab.c"
    break;

  case 481: /* class_stmt_constructor: attribute_section CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5898 "./Celeste_parser.y"
                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15469 "Celeste_parser.tab.c"
    break;

  case 482: /* class_stmt_constructor: attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5908 "./Celeste_parser.y"
                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15485 "Celeste_parser.tab.c"
    break;

  case 483: /* class_stmt_constructor: attribute_section CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5919 "./Celeste_parser.y"
                                                                                                                                                               {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15500 "Celeste_parser.tab.c"
    break;

  case 484: /* class_stmt_constructor: attribute_section CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5929 "./Celeste_parser.y"
                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15516 "Celeste_parser.tab.c"
    break;

  case 485: /* class_stmt_constructor: attribute_section CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5940 "./Celeste_parser.y"
                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15531 "Celeste_parser.tab.c"
    break;

  case 486: /* class_stmt_constructor: CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5950 "./Celeste_parser.y"
                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 16, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15547 "Celeste_parser.tab.c"
    break;

  case 487: /* class_stmt_constructor: CONSTRUCTOR class_name LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5961 "./Celeste_parser.y"
                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 17, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15562 "Celeste_parser.tab.c"
    break;

  case 488: /* class_stmt_constructor: CONSTRUCTOR class_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5971 "./Celeste_parser.y"
                                                                                                                    {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 18, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15578 "Celeste_parser.tab.c"
    break;

  case 489: /* class_stmt_constructor: CONSTRUCTOR class_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5982 "./Celeste_parser.y"
                                                                                                              {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 19, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_class_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15593 "Celeste_parser.tab.c"
    break;

  case 490: /* class_stmt_constructor: CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 5992 "./Celeste_parser.y"
                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 20, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15609 "Celeste_parser.tab.c"
    break;

  case 491: /* class_stmt_constructor: CONSTRUCTOR LEFT_PARANTHESIS deamerreserved_arrow__function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6003 "./Celeste_parser.y"
                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 21, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15624 "Celeste_parser.tab.c"
    break;

  case 492: /* class_stmt_constructor: CONSTRUCTOR LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6013 "./Celeste_parser.y"
                                                                                                         {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 22, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15640 "Celeste_parser.tab.c"
    break;

  case 493: /* class_stmt_constructor: CONSTRUCTOR LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6024 "./Celeste_parser.y"
                                                                                                   {
		auto* const newNode = new Celeste::ast::node::class_stmt_constructor({::Celeste::ast::Type::class_stmt_constructor, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 23, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTRUCTOR({::Celeste::ast::Type::CONSTRUCTOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_class_stmt_constructor) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15655 "Celeste_parser.tab.c"
    break;

  case 494: /* accessibility: PUBLIC  */
#line 6038 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::accessibility({::Celeste::ast::Type::accessibility, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PUBLIC({::Celeste::ast::Type::PUBLIC, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_accessibility) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15666 "Celeste_parser.tab.c"
    break;

  case 495: /* accessibility: PROTECTED  */
#line 6044 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::accessibility({::Celeste::ast::Type::accessibility, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PROTECTED({::Celeste::ast::Type::PROTECTED, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_accessibility) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15677 "Celeste_parser.tab.c"
    break;

  case 496: /* accessibility: PRIVATE  */
#line 6050 "./Celeste_parser.y"
                   {
		auto* const newNode = new Celeste::ast::node::accessibility({::Celeste::ast::Type::accessibility, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::PRIVATE({::Celeste::ast::Type::PRIVATE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_accessibility) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15688 "Celeste_parser.tab.c"
    break;

  case 497: /* class_inherit_base: inherit_base  */
#line 6060 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::class_inherit_base({::Celeste::ast::Type::class_inherit_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_inherit_base) });
		((*yyvalp).Celeste_class_inherit_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15699 "Celeste_parser.tab.c"
    break;

  case 498: /* class_inherit_base: compound_base  */
#line 6066 "./Celeste_parser.y"
                         {
		auto* const newNode = new Celeste::ast::node::class_inherit_base({::Celeste::ast::Type::class_inherit_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_compound_base) });
		((*yyvalp).Celeste_class_inherit_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15710 "Celeste_parser.tab.c"
    break;

  case 499: /* inherit_base: INHERIT inherit_base_name  */
#line 6076 "./Celeste_parser.y"
                                   {
		auto* const newNode = new Celeste::ast::node::inherit_base({::Celeste::ast::Type::inherit_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::INHERIT({::Celeste::ast::Type::INHERIT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_inherit_base_name) });
		((*yyvalp).Celeste_inherit_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15721 "Celeste_parser.tab.c"
    break;

  case 500: /* inherit_base_name: symbol_reference  */
#line 6086 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::inherit_base_name({::Celeste::ast::Type::inherit_base_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_inherit_base_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15732 "Celeste_parser.tab.c"
    break;

  case 501: /* compound_base: COMPOSITE compound_base_name  */
#line 6096 "./Celeste_parser.y"
                                      {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_compound_base_name) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15743 "Celeste_parser.tab.c"
    break;

  case 502: /* compound_base: COMPOSITE compound_base_name AS compound_base_alias  */
#line 6102 "./Celeste_parser.y"
                                                               {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_compound_base_alias) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15754 "Celeste_parser.tab.c"
    break;

  case 503: /* compound_base: COMPOSITE compound_base_name AS LEFT_SQUARE_BRACKET deamerreserved_arrow__compound_base_alias__ COMMA RIGHT_SQUARE_BRACKET  */
#line 6108 "./Celeste_parser.y"
                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__compound_base_alias__) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15768 "Celeste_parser.tab.c"
    break;

  case 504: /* compound_base: COMPOSITE compound_base_name AS LEFT_SQUARE_BRACKET deamerreserved_arrow__compound_base_alias__ RIGHT_SQUARE_BRACKET  */
#line 6117 "./Celeste_parser.y"
                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__compound_base_alias__) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15781 "Celeste_parser.tab.c"
    break;

  case 505: /* compound_base: COMPOSITE compound_base_name AS LEFT_SQUARE_BRACKET COMMA RIGHT_SQUARE_BRACKET  */
#line 6125 "./Celeste_parser.y"
                                                                                          {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15795 "Celeste_parser.tab.c"
    break;

  case 506: /* compound_base: COMPOSITE compound_base_name AS LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET  */
#line 6134 "./Celeste_parser.y"
                                                                                    {
		auto* const newNode = new Celeste::ast::node::compound_base({::Celeste::ast::Type::compound_base, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::COMPOSITE({::Celeste::ast::Type::COMPOSITE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_compound_base_name), new Celeste::ast::node::AS({::Celeste::ast::Type::AS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_compound_base) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15808 "Celeste_parser.tab.c"
    break;

  case 507: /* deamerreserved_arrow__compound_base_alias__: compound_base_alias deamerreserved_star__COMMA__compound_base_alias__  */
#line 6146 "./Celeste_parser.y"
                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__compound_base_alias__({::Celeste::ast::Type::deamerreserved_arrow__compound_base_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_compound_base_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__compound_base_alias__) });
		((*yyvalp).Celeste_deamerreserved_arrow__compound_base_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15819 "Celeste_parser.tab.c"
    break;

  case 508: /* deamerreserved_star__COMMA__compound_base_alias__: COMMA compound_base_alias deamerreserved_star__COMMA__compound_base_alias__  */
#line 6156 "./Celeste_parser.y"
                                                                                     {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__compound_base_alias__({::Celeste::ast::Type::deamerreserved_star__COMMA__compound_base_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_compound_base_alias), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__compound_base_alias__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__compound_base_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 15831 "Celeste_parser.tab.c"
    break;

  case 509: /* deamerreserved_star__COMMA__compound_base_alias__: %empty  */
#line 6163 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__compound_base_alias__({::Celeste::ast::Type::deamerreserved_star__COMMA__compound_base_alias__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__compound_base_alias__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15842 "Celeste_parser.tab.c"
    break;

  case 510: /* compound_base_name: symbol_reference  */
#line 6173 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::compound_base_name({::Celeste::ast::Type::compound_base_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_compound_base_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15853 "Celeste_parser.tab.c"
    break;

  case 511: /* compound_base_alias: VARNAME  */
#line 6183 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::compound_base_alias({::Celeste::ast::Type::compound_base_alias, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_compound_base_alias) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15864 "Celeste_parser.tab.c"
    break;

  case 512: /* attribute_section: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET deamerreserved_arrow__attribute__ RIGHT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET  */
#line 6193 "./Celeste_parser.y"
                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::attribute_section({::Celeste::ast::Type::attribute_section, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute__) });
		((*yyvalp).Celeste_attribute_section) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15879 "Celeste_parser.tab.c"
    break;

  case 513: /* attribute_section: LEFT_SQUARE_BRACKET LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET  */
#line 6203 "./Celeste_parser.y"
                                                                                             {
		auto* const newNode = new Celeste::ast::node::attribute_section({::Celeste::ast::Type::attribute_section, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_attribute_section) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15894 "Celeste_parser.tab.c"
    break;

  case 514: /* deamerreserved_arrow__attribute__: attribute deamerreserved_star__deamerreserved_optional__COMMA____attribute__  */
#line 6217 "./Celeste_parser.y"
                                                                                      {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__attribute__({::Celeste::ast::Type::deamerreserved_arrow__attribute__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) });
		((*yyvalp).Celeste_deamerreserved_arrow__attribute__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15905 "Celeste_parser.tab.c"
    break;

  case 515: /* deamerreserved_star__deamerreserved_optional__COMMA____attribute__: COMMA attribute deamerreserved_star__deamerreserved_optional__COMMA____attribute__  */
#line 6227 "./Celeste_parser.y"
                                                                                            {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__deamerreserved_optional__COMMA____attribute__({::Celeste::ast::Type::deamerreserved_star__deamerreserved_optional__COMMA____attribute__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) });
		((*yyvalp).Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 15917 "Celeste_parser.tab.c"
    break;

  case 516: /* deamerreserved_star__deamerreserved_optional__COMMA____attribute__: attribute deamerreserved_star__deamerreserved_optional__COMMA____attribute__  */
#line 6234 "./Celeste_parser.y"
                                                                                        {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__deamerreserved_optional__COMMA____attribute__({::Celeste::ast::Type::deamerreserved_star__deamerreserved_optional__COMMA____attribute__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) });
		((*yyvalp).Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15928 "Celeste_parser.tab.c"
    break;

  case 517: /* deamerreserved_star__deamerreserved_optional__COMMA____attribute__: %empty  */
#line 6240 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__deamerreserved_optional__COMMA____attribute__({::Celeste::ast::Type::deamerreserved_star__deamerreserved_optional__COMMA____attribute__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__deamerreserved_optional__COMMA____attribute__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15939 "Celeste_parser.tab.c"
    break;

  case 518: /* attribute: symbol_name  */
#line 6250 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_name) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 15950 "Celeste_parser.tab.c"
    break;

  case 519: /* attribute: symbol_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_argument__ RIGHT_PARANTHESIS  */
#line 6256 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_argument__) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15963 "Celeste_parser.tab.c"
    break;

  case 520: /* attribute: symbol_name LEFT_PARANTHESIS RIGHT_PARANTHESIS  */
#line 6264 "./Celeste_parser.y"
                                                          {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_symbol_name) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15976 "Celeste_parser.tab.c"
    break;

  case 521: /* attribute: symbol_name LEFT_SQUARE_BRACKET deamerreserved_arrow__attribute_template_argument__ RIGHT_SQUARE_BRACKET LEFT_PARANTHESIS deamerreserved_arrow__attribute_argument__ RIGHT_PARANTHESIS  */
#line 6272 "./Celeste_parser.y"
                                                                                                                                                                                                  {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_template_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_argument__) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 15991 "Celeste_parser.tab.c"
    break;

  case 522: /* attribute: symbol_name LEFT_SQUARE_BRACKET deamerreserved_arrow__attribute_template_argument__ RIGHT_SQUARE_BRACKET LEFT_PARANTHESIS RIGHT_PARANTHESIS  */
#line 6282 "./Celeste_parser.y"
                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_template_argument__) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16006 "Celeste_parser.tab.c"
    break;

  case 523: /* attribute: symbol_name LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET LEFT_PARANTHESIS deamerreserved_arrow__attribute_argument__ RIGHT_PARANTHESIS  */
#line 6292 "./Celeste_parser.y"
                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_argument__) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16021 "Celeste_parser.tab.c"
    break;

  case 524: /* attribute: symbol_name LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET LEFT_PARANTHESIS RIGHT_PARANTHESIS  */
#line 6302 "./Celeste_parser.y"
                                                                                                   {
		auto* const newNode = new Celeste::ast::node::attribute({::Celeste::ast::Type::attribute, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_symbol_name) });
		((*yyvalp).Celeste_attribute) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16036 "Celeste_parser.tab.c"
    break;

  case 525: /* deamerreserved_arrow__attribute_argument__: attribute_argument deamerreserved_star__COMMA__attribute_argument__  */
#line 6316 "./Celeste_parser.y"
                                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__attribute_argument__({::Celeste::ast::Type::deamerreserved_arrow__attribute_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__attribute_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16047 "Celeste_parser.tab.c"
    break;

  case 526: /* deamerreserved_star__COMMA__attribute_argument__: COMMA attribute_argument deamerreserved_star__COMMA__attribute_argument__  */
#line 6326 "./Celeste_parser.y"
                                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16059 "Celeste_parser.tab.c"
    break;

  case 527: /* deamerreserved_star__COMMA__attribute_argument__: %empty  */
#line 6333 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16070 "Celeste_parser.tab.c"
    break;

  case 528: /* deamerreserved_arrow__attribute_template_argument__: attribute_template_argument deamerreserved_star__COMMA__attribute_template_argument__  */
#line 6343 "./Celeste_parser.y"
                                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__attribute_template_argument__({::Celeste::ast::Type::deamerreserved_arrow__attribute_template_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_template_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_template_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__attribute_template_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16081 "Celeste_parser.tab.c"
    break;

  case 529: /* deamerreserved_star__COMMA__attribute_template_argument__: COMMA attribute_template_argument deamerreserved_star__COMMA__attribute_template_argument__  */
#line 6353 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_template_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_template_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_template_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_template_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_template_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16093 "Celeste_parser.tab.c"
    break;

  case 530: /* deamerreserved_star__COMMA__attribute_template_argument__: %empty  */
#line 6360 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_template_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_template_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_template_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16104 "Celeste_parser.tab.c"
    break;

  case 531: /* attribute_argument: expression  */
#line 6370 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::attribute_argument({::Celeste::ast::Type::attribute_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_attribute_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16115 "Celeste_parser.tab.c"
    break;

  case 532: /* attribute_template_argument: expression  */
#line 6380 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::attribute_template_argument({::Celeste::ast::Type::attribute_template_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_attribute_template_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16126 "Celeste_parser.tab.c"
    break;

  case 533: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6390 "./Celeste_parser.y"
                                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-11)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16142 "Celeste_parser.tab.c"
    break;

  case 534: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6401 "./Celeste_parser.y"
                                                                                                                                                                                                                             {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16158 "Celeste_parser.tab.c"
    break;

  case 535: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6412 "./Celeste_parser.y"
                                                                                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16173 "Celeste_parser.tab.c"
    break;

  case 536: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6422 "./Celeste_parser.y"
                                                                                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16188 "Celeste_parser.tab.c"
    break;

  case 537: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6432 "./Celeste_parser.y"
                                                                                                                                                                                              {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16204 "Celeste_parser.tab.c"
    break;

  case 538: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6443 "./Celeste_parser.y"
                                                                                                                                                                         {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16220 "Celeste_parser.tab.c"
    break;

  case 539: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6454 "./Celeste_parser.y"
                                                                                                                                                                                        {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16235 "Celeste_parser.tab.c"
    break;

  case 540: /* attribute_declaration: attribute_section execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6464 "./Celeste_parser.y"
                                                                                                                                                                   {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_section), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16250 "Celeste_parser.tab.c"
    break;

  case 541: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6474 "./Celeste_parser.y"
                                                                                                                                                                                                                                {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 8, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-10)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16266 "Celeste_parser.tab.c"
    break;

  case 542: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6485 "./Celeste_parser.y"
                                                                                                                                                                                                           {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 9, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16282 "Celeste_parser.tab.c"
    break;

  case 543: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6496 "./Celeste_parser.y"
                                                                                                                                                                                                                          {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 10, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16297 "Celeste_parser.tab.c"
    break;

  case 544: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS deamerreserved_arrow__attribute_function_argument__ RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6506 "./Celeste_parser.y"
                                                                                                                                                                                                     {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 11, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__attribute_function_argument__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16312 "Celeste_parser.tab.c"
    break;

  case 545: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6516 "./Celeste_parser.y"
                                                                                                                                                                            {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 12, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-9)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16328 "Celeste_parser.tab.c"
    break;

  case 546: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6527 "./Celeste_parser.y"
                                                                                                                                                       {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 13, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16344 "Celeste_parser.tab.c"
    break;

  case 547: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS RIGHT_PARANTHESIS trailing_return_type LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6538 "./Celeste_parser.y"
                                                                                                                                                                      {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 14, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-8)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_trailing_return_type), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16359 "Celeste_parser.tab.c"
    break;

  case 548: /* attribute_declaration: execution_keyword_permutation ATTRIBUTETOK attribute_name LEFT_PARANTHESIS RIGHT_PARANTHESIS LEFT_BRACKET function_body RIGHT_BRACKET  */
#line 6548 "./Celeste_parser.y"
                                                                                                                                                 {
		auto* const newNode = new Celeste::ast::node::attribute_declaration({::Celeste::ast::Type::attribute_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 15, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-7)].yystate.yysemantics.yyval.Celeste_execution_keyword_permutation), new Celeste::ast::node::ATTRIBUTETOK({::Celeste::ast::Type::ATTRIBUTETOK, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-6)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_function_body) });
		((*yyvalp).Celeste_attribute_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16374 "Celeste_parser.tab.c"
    break;

  case 549: /* deamerreserved_arrow__attribute_function_argument__: attribute_function_argument deamerreserved_star__COMMA__attribute_function_argument__  */
#line 6562 "./Celeste_parser.y"
                                                                                               {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__attribute_function_argument__({::Celeste::ast::Type::deamerreserved_arrow__attribute_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_function_argument__) });
		((*yyvalp).Celeste_deamerreserved_arrow__attribute_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16385 "Celeste_parser.tab.c"
    break;

  case 550: /* deamerreserved_star__COMMA__attribute_function_argument__: COMMA attribute_function_argument deamerreserved_star__COMMA__attribute_function_argument__  */
#line 6572 "./Celeste_parser.y"
                                                                                                     {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_attribute_function_argument), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__attribute_function_argument__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16397 "Celeste_parser.tab.c"
    break;

  case 551: /* deamerreserved_star__COMMA__attribute_function_argument__: %empty  */
#line 6579 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__attribute_function_argument__({::Celeste::ast::Type::deamerreserved_star__COMMA__attribute_function_argument__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__attribute_function_argument__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16408 "Celeste_parser.tab.c"
    break;

  case 552: /* attribute_function_argument: function_argument  */
#line 6589 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::attribute_function_argument({::Celeste::ast::Type::attribute_function_argument, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_argument) });
		((*yyvalp).Celeste_attribute_function_argument) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16419 "Celeste_parser.tab.c"
    break;

  case 553: /* attribute_name: symbol_name  */
#line 6599 "./Celeste_parser.y"
                     {
		auto* const newNode = new Celeste::ast::node::attribute_name({::Celeste::ast::Type::attribute_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_name) });
		((*yyvalp).Celeste_attribute_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16430 "Celeste_parser.tab.c"
    break;

  case 554: /* enum_declaration: attribute_section ENUM enum_name LEFT_BRACKET deamerreserved_star__enumeration__ RIGHT_BRACKET  */
#line 6609 "./Celeste_parser.y"
                                                                                                        {
		auto* const newNode = new Celeste::ast::node::enum_declaration({::Celeste::ast::Type::enum_declaration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-5)].yystate.yysemantics.yyval.Celeste_attribute_section), new Celeste::ast::node::ENUM({::Celeste::ast::Type::ENUM, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-4)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_enum_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__enumeration__) });
		((*yyvalp).Celeste_enum_declaration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16443 "Celeste_parser.tab.c"
    break;

  case 555: /* deamerreserved_star__enumeration__: enumeration deamerreserved_star__enumeration__  */
#line 6621 "./Celeste_parser.y"
                                                        {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__enumeration__({::Celeste::ast::Type::deamerreserved_star__enumeration__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_enumeration), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__enumeration__) });
		((*yyvalp).Celeste_deamerreserved_star__enumeration__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16454 "Celeste_parser.tab.c"
    break;

  case 556: /* deamerreserved_star__enumeration__: %empty  */
#line 6627 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__enumeration__({::Celeste::ast::Type::deamerreserved_star__enumeration__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__enumeration__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16465 "Celeste_parser.tab.c"
    break;

  case 557: /* enum_name: symbol_reference  */
#line 6637 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::enum_name({::Celeste::ast::Type::enum_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_enum_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16476 "Celeste_parser.tab.c"
    break;

  case 558: /* enumeration: enumeration_name EQ enumeration_value COMMA  */
#line 6647 "./Celeste_parser.y"
                                                     {
		auto* const newNode = new Celeste::ast::node::enumeration({::Celeste::ast::Type::enumeration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Celeste_enumeration_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_enumeration_value) });
		((*yyvalp).Celeste_enumeration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16488 "Celeste_parser.tab.c"
    break;

  case 559: /* enumeration: enumeration_name EQ enumeration_value  */
#line 6654 "./Celeste_parser.y"
                                                 {
		auto* const newNode = new Celeste::ast::node::enumeration({::Celeste::ast::Type::enumeration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_enumeration_name), new Celeste::ast::node::EQ({::Celeste::ast::Type::EQ, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_enumeration_value) });
		((*yyvalp).Celeste_enumeration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16499 "Celeste_parser.tab.c"
    break;

  case 560: /* enumeration: enumeration_name COMMA  */
#line 6660 "./Celeste_parser.y"
                                  {
		auto* const newNode = new Celeste::ast::node::enumeration({::Celeste::ast::Type::enumeration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_enumeration_name) });
		((*yyvalp).Celeste_enumeration) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16511 "Celeste_parser.tab.c"
    break;

  case 561: /* enumeration: enumeration_name  */
#line 6667 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::enumeration({::Celeste::ast::Type::enumeration, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_enumeration_name) });
		((*yyvalp).Celeste_enumeration) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16522 "Celeste_parser.tab.c"
    break;

  case 562: /* enumeration_name: symbol_reference  */
#line 6677 "./Celeste_parser.y"
                          {
		auto* const newNode = new Celeste::ast::node::enumeration_name({::Celeste::ast::Type::enumeration_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_enumeration_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16533 "Celeste_parser.tab.c"
    break;

  case 563: /* enumeration_value: full_value  */
#line 6687 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::enumeration_value({::Celeste::ast::Type::enumeration_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_full_value) });
		((*yyvalp).Celeste_enumeration_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16544 "Celeste_parser.tab.c"
    break;

  case 564: /* symbol_reference: deamerreserved_arrow__symbol__  */
#line 6697 "./Celeste_parser.y"
                                        {
		auto* const newNode = new Celeste::ast::node::symbol_reference({::Celeste::ast::Type::symbol_reference, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__symbol__) });
		((*yyvalp).Celeste_symbol_reference) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16555 "Celeste_parser.tab.c"
    break;

  case 565: /* deamerreserved_arrow__symbol__: symbol deamerreserved_star__DOT__symbol_secondary__  */
#line 6707 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__symbol__({::Celeste::ast::Type::deamerreserved_arrow__symbol__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__DOT__symbol_secondary__) });
		((*yyvalp).Celeste_deamerreserved_arrow__symbol__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16566 "Celeste_parser.tab.c"
    break;

  case 566: /* deamerreserved_star__DOT__symbol_secondary__: DOT symbol_secondary deamerreserved_star__DOT__symbol_secondary__  */
#line 6717 "./Celeste_parser.y"
                                                                           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__DOT__symbol_secondary__({::Celeste::ast::Type::deamerreserved_star__DOT__symbol_secondary__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_secondary), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__DOT__symbol_secondary__) });
		((*yyvalp).Celeste_deamerreserved_star__DOT__symbol_secondary__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16578 "Celeste_parser.tab.c"
    break;

  case 567: /* deamerreserved_star__DOT__symbol_secondary__: %empty  */
#line 6724 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__DOT__symbol_secondary__({::Celeste::ast::Type::deamerreserved_star__DOT__symbol_secondary__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__DOT__symbol_secondary__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16589 "Celeste_parser.tab.c"
    break;

  case 568: /* symbol_secondary: symbol_name_secondary deamerreserved_star__symbol_access__  */
#line 6734 "./Celeste_parser.y"
                                                                    {
		auto* const newNode = new Celeste::ast::node::symbol_secondary({::Celeste::ast::Type::symbol_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_name_secondary), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__symbol_access__) });
		((*yyvalp).Celeste_symbol_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16600 "Celeste_parser.tab.c"
    break;

  case 569: /* deamerreserved_star__symbol_access__: symbol_access deamerreserved_star__symbol_access__  */
#line 6744 "./Celeste_parser.y"
                                                            {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__symbol_access__({::Celeste::ast::Type::deamerreserved_star__symbol_access__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_access), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__symbol_access__) });
		((*yyvalp).Celeste_deamerreserved_star__symbol_access__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16611 "Celeste_parser.tab.c"
    break;

  case 570: /* deamerreserved_star__symbol_access__: %empty  */
#line 6750 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__symbol_access__({::Celeste::ast::Type::deamerreserved_star__symbol_access__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__symbol_access__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16622 "Celeste_parser.tab.c"
    break;

  case 571: /* symbol: symbol_name deamerreserved_star__symbol_access__  */
#line 6760 "./Celeste_parser.y"
                                                          {
		auto* const newNode = new Celeste::ast::node::symbol({::Celeste::ast::Type::symbol, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_symbol_name), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__symbol_access__) });
		((*yyvalp).Celeste_symbol) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16633 "Celeste_parser.tab.c"
    break;

  case 572: /* symbol_access: index_access  */
#line 6770 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::symbol_access({::Celeste::ast::Type::symbol_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_index_access) });
		((*yyvalp).Celeste_symbol_access) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16644 "Celeste_parser.tab.c"
    break;

  case 573: /* symbol_access: anonymous_access  */
#line 6776 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::symbol_access({::Celeste::ast::Type::symbol_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_anonymous_access) });
		((*yyvalp).Celeste_symbol_access) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16655 "Celeste_parser.tab.c"
    break;

  case 574: /* symbol_access: function_access  */
#line 6782 "./Celeste_parser.y"
                           {
		auto* const newNode = new Celeste::ast::node::symbol_access({::Celeste::ast::Type::symbol_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_function_access) });
		((*yyvalp).Celeste_symbol_access) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16666 "Celeste_parser.tab.c"
    break;

  case 575: /* symbol_access: auto_deduce_array  */
#line 6788 "./Celeste_parser.y"
                             {
		auto* const newNode = new Celeste::ast::node::symbol_access({::Celeste::ast::Type::symbol_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_auto_deduce_array) });
		((*yyvalp).Celeste_symbol_access) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16677 "Celeste_parser.tab.c"
    break;

  case 576: /* auto_deduce_array: LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET  */
#line 6798 "./Celeste_parser.y"
                                                  {
		auto* const newNode = new Celeste::ast::node::auto_deduce_array({::Celeste::ast::Type::auto_deduce_array, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_auto_deduce_array) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16690 "Celeste_parser.tab.c"
    break;

  case 577: /* symbol_name_secondary: VARNAME  */
#line 6810 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16701 "Celeste_parser.tab.c"
    break;

  case 578: /* symbol_name_secondary: FOR  */
#line 6816 "./Celeste_parser.y"
               {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16712 "Celeste_parser.tab.c"
    break;

  case 579: /* symbol_name_secondary: CLASS  */
#line 6822 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CLASS({::Celeste::ast::Type::CLASS, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16723 "Celeste_parser.tab.c"
    break;

  case 580: /* symbol_name_secondary: IF  */
#line 6828 "./Celeste_parser.y"
              {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::IF({::Celeste::ast::Type::IF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16734 "Celeste_parser.tab.c"
    break;

  case 581: /* symbol_name_secondary: ELSEIF  */
#line 6834 "./Celeste_parser.y"
                  {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSEIF({::Celeste::ast::Type::ELSEIF, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16745 "Celeste_parser.tab.c"
    break;

  case 582: /* symbol_name_secondary: ELSE  */
#line 6840 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::ELSE({::Celeste::ast::Type::ELSE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16756 "Celeste_parser.tab.c"
    break;

  case 583: /* symbol_name_secondary: OPERATORNAME  */
#line 6846 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 6, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::OPERATORNAME({::Celeste::ast::Type::OPERATORNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16767 "Celeste_parser.tab.c"
    break;

  case 584: /* symbol_name_secondary: CODE  */
#line 6852 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::symbol_name_secondary({::Celeste::ast::Type::symbol_name_secondary, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 7, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name_secondary) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16778 "Celeste_parser.tab.c"
    break;

  case 585: /* symbol_name: VARNAME  */
#line 6862 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::symbol_name({::Celeste::ast::Type::symbol_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::VARNAME({::Celeste::ast::Type::VARNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16789 "Celeste_parser.tab.c"
    break;

  case 586: /* symbol_name: FOR  */
#line 6868 "./Celeste_parser.y"
               {
		auto* const newNode = new Celeste::ast::node::symbol_name({::Celeste::ast::Type::symbol_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::FOR({::Celeste::ast::Type::FOR, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16800 "Celeste_parser.tab.c"
    break;

  case 587: /* symbol_name: OPERATORNAME  */
#line 6874 "./Celeste_parser.y"
                        {
		auto* const newNode = new Celeste::ast::node::symbol_name({::Celeste::ast::Type::symbol_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::OPERATORNAME({::Celeste::ast::Type::OPERATORNAME, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16811 "Celeste_parser.tab.c"
    break;

  case 588: /* symbol_name: CODE  */
#line 6880 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::symbol_name({::Celeste::ast::Type::symbol_name, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CODE({::Celeste::ast::Type::CODE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_symbol_name) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16822 "Celeste_parser.tab.c"
    break;

  case 589: /* function_access: LEFT_PARANTHESIS deamerreserved_arrow__expression__ COMMA RIGHT_PARANTHESIS  */
#line 6890 "./Celeste_parser.y"
                                                                                     {
		auto* const newNode = new Celeste::ast::node::function_access({::Celeste::ast::Type::function_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__expression__) });
		((*yyvalp).Celeste_function_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16836 "Celeste_parser.tab.c"
    break;

  case 590: /* function_access: LEFT_PARANTHESIS deamerreserved_arrow__expression__ RIGHT_PARANTHESIS  */
#line 6899 "./Celeste_parser.y"
                                                                                 {
		auto* const newNode = new Celeste::ast::node::function_access({::Celeste::ast::Type::function_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__expression__) });
		((*yyvalp).Celeste_function_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16849 "Celeste_parser.tab.c"
    break;

  case 591: /* function_access: LEFT_PARANTHESIS COMMA RIGHT_PARANTHESIS  */
#line 6907 "./Celeste_parser.y"
                                                    {
		auto* const newNode = new Celeste::ast::node::function_access({::Celeste::ast::Type::function_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_function_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16863 "Celeste_parser.tab.c"
    break;

  case 592: /* function_access: LEFT_PARANTHESIS RIGHT_PARANTHESIS  */
#line 6916 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::function_access({::Celeste::ast::Type::function_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, {  });
		((*yyvalp).Celeste_function_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16876 "Celeste_parser.tab.c"
    break;

  case 593: /* deamerreserved_arrow__expression__: expression deamerreserved_star__COMMA__expression__  */
#line 6928 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__expression__({::Celeste::ast::Type::deamerreserved_arrow__expression__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__expression__) });
		((*yyvalp).Celeste_deamerreserved_arrow__expression__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16887 "Celeste_parser.tab.c"
    break;

  case 594: /* deamerreserved_star__COMMA__expression__: COMMA expression deamerreserved_star__COMMA__expression__  */
#line 6938 "./Celeste_parser.y"
                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__expression__({::Celeste::ast::Type::deamerreserved_star__COMMA__expression__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__expression__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__expression__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 16899 "Celeste_parser.tab.c"
    break;

  case 595: /* deamerreserved_star__COMMA__expression__: %empty  */
#line 6945 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__expression__({::Celeste::ast::Type::deamerreserved_star__COMMA__expression__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__expression__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16910 "Celeste_parser.tab.c"
    break;

  case 596: /* index_access: LEFT_SQUARE_BRACKET expression RIGHT_SQUARE_BRACKET  */
#line 6955 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::index_access({::Celeste::ast::Type::index_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_index_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16923 "Celeste_parser.tab.c"
    break;

  case 597: /* anonymous_access: LEFT_BRACKET expression RIGHT_BRACKET  */
#line 6967 "./Celeste_parser.y"
                                               {
		auto* const newNode = new Celeste::ast::node::anonymous_access({::Celeste::ast::Type::anonymous_access, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_anonymous_access) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 16936 "Celeste_parser.tab.c"
    break;

  case 598: /* type: deamerreserved_star__type_modifier__ symbol_reference  */
#line 6979 "./Celeste_parser.y"
                                                               {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16947 "Celeste_parser.tab.c"
    break;

  case 599: /* type: deamerreserved_star__type_modifier__ AUTOTYPE array_declaration  */
#line 6985 "./Celeste_parser.y"
                                                                           {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), new Celeste::ast::node::AUTOTYPE({::Celeste::ast::Type::AUTOTYPE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_array_declaration) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16958 "Celeste_parser.tab.c"
    break;

  case 600: /* type: deamerreserved_star__type_modifier__ AUTOTYPE  */
#line 6991 "./Celeste_parser.y"
                                                         {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), new Celeste::ast::node::AUTOTYPE({::Celeste::ast::Type::AUTOTYPE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16969 "Celeste_parser.tab.c"
    break;

  case 601: /* type: deamerreserved_star__type_modifier__ AUTO array_declaration  */
#line 6997 "./Celeste_parser.y"
                                                                       {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), new Celeste::ast::node::AUTO({::Celeste::ast::Type::AUTO, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal) }), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_array_declaration) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16980 "Celeste_parser.tab.c"
    break;

  case 602: /* type: deamerreserved_star__type_modifier__ AUTO  */
#line 7003 "./Celeste_parser.y"
                                                     {
		auto* const newNode = new Celeste::ast::node::type({::Celeste::ast::Type::type, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__), new Celeste::ast::node::AUTO({::Celeste::ast::Type::AUTO, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 16991 "Celeste_parser.tab.c"
    break;

  case 603: /* deamerreserved_star__type_modifier__: type_modifier deamerreserved_star__type_modifier__  */
#line 7013 "./Celeste_parser.y"
                                                            {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__type_modifier__({::Celeste::ast::Type::deamerreserved_star__type_modifier__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_type_modifier), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__type_modifier__) });
		((*yyvalp).Celeste_deamerreserved_star__type_modifier__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17002 "Celeste_parser.tab.c"
    break;

  case 604: /* deamerreserved_star__type_modifier__: %empty  */
#line 7019 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__type_modifier__({::Celeste::ast::Type::deamerreserved_star__type_modifier__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__type_modifier__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17013 "Celeste_parser.tab.c"
    break;

  case 605: /* type_modifier: STATIC  */
#line 7029 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::type_modifier({::Celeste::ast::Type::type_modifier, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::STATIC({::Celeste::ast::Type::STATIC, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type_modifier) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17024 "Celeste_parser.tab.c"
    break;

  case 606: /* type_modifier: CONSTANT  */
#line 7035 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::type_modifier({::Celeste::ast::Type::type_modifier, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::CONSTANT({::Celeste::ast::Type::CONSTANT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type_modifier) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17035 "Celeste_parser.tab.c"
    break;

  case 607: /* type_modifier: INLINE  */
#line 7041 "./Celeste_parser.y"
                  {
		auto* const newNode = new Celeste::ast::node::type_modifier({::Celeste::ast::Type::type_modifier, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::INLINE({::Celeste::ast::Type::INLINE, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_type_modifier) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17046 "Celeste_parser.tab.c"
    break;

  case 608: /* value_list: deamerreserved_arrow__full_value__ COMMA  */
#line 7051 "./Celeste_parser.y"
                                                  {
		auto* const newNode = new Celeste::ast::node::value_list({::Celeste::ast::Type::value_list, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__full_value__) });
		((*yyvalp).Celeste_value_list) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 17058 "Celeste_parser.tab.c"
    break;

  case 609: /* value_list: deamerreserved_arrow__full_value__  */
#line 7058 "./Celeste_parser.y"
                                              {
		auto* const newNode = new Celeste::ast::node::value_list({::Celeste::ast::Type::value_list, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__full_value__) });
		((*yyvalp).Celeste_value_list) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17069 "Celeste_parser.tab.c"
    break;

  case 610: /* deamerreserved_arrow__full_value__: full_value deamerreserved_star__COMMA__full_value__  */
#line 7068 "./Celeste_parser.y"
                                                             {
		auto* const newNode = new Celeste::ast::node::deamerreserved_arrow__full_value__({::Celeste::ast::Type::deamerreserved_arrow__full_value__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_full_value), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__full_value__) });
		((*yyvalp).Celeste_deamerreserved_arrow__full_value__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17080 "Celeste_parser.tab.c"
    break;

  case 611: /* deamerreserved_star__COMMA__full_value__: COMMA full_value deamerreserved_star__COMMA__full_value__  */
#line 7078 "./Celeste_parser.y"
                                                                   {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__full_value__({::Celeste::ast::Type::deamerreserved_star__COMMA__full_value__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_full_value), (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_deamerreserved_star__COMMA__full_value__) });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__full_value__) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
	}
#line 17092 "Celeste_parser.tab.c"
    break;

  case 612: /* deamerreserved_star__COMMA__full_value__: %empty  */
#line 7085 "./Celeste_parser.y"
           {
		auto* const newNode = new Celeste::ast::node::deamerreserved_star__COMMA__full_value__({::Celeste::ast::Type::deamerreserved_star__COMMA__full_value__, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::translation }}, {  });
		((*yyvalp).Celeste_deamerreserved_star__COMMA__full_value__) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17103 "Celeste_parser.tab.c"
    break;

  case 613: /* full_value: expression  */
#line 7095 "./Celeste_parser.y"
                    {
		auto* const newNode = new Celeste::ast::node::full_value({::Celeste::ast::Type::full_value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_expression) });
		((*yyvalp).Celeste_full_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17114 "Celeste_parser.tab.c"
    break;

  case 614: /* value: NUMBER  */
#line 7105 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::NUMBER({::Celeste::ast::Type::NUMBER, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17125 "Celeste_parser.tab.c"
    break;

  case 615: /* value: DECIMAL  */
#line 7111 "./Celeste_parser.y"
                   {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::DECIMAL({::Celeste::ast::Type::DECIMAL, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17136 "Celeste_parser.tab.c"
    break;

  case 616: /* value: TEXT  */
#line 7117 "./Celeste_parser.y"
                {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 2, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { new Celeste::ast::node::TEXT({::Celeste::ast::Type::TEXT, ::deamer::external::cpp::ast::NodeValue::terminal, (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal) }) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17147 "Celeste_parser.tab.c"
    break;

  case 617: /* value: symbol_reference  */
#line 7123 "./Celeste_parser.y"
                            {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 3, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_symbol_reference) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17158 "Celeste_parser.tab.c"
    break;

  case 618: /* value: code_block  */
#line 7129 "./Celeste_parser.y"
                      {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 4, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_code_block) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17169 "Celeste_parser.tab.c"
    break;

  case 619: /* value: tuple  */
#line 7135 "./Celeste_parser.y"
                 {
		auto* const newNode = new Celeste::ast::node::value({::Celeste::ast::Type::value, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 5, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Celeste_tuple) });
		((*yyvalp).Celeste_value) = newNode;

		// Ignored, Deleted, tokens are deleted
	}
#line 17180 "Celeste_parser.tab.c"
    break;

  case 620: /* tuple: LEFT_PARANTHESIS deamerreserved_arrow__full_value__ COMMA RIGHT_PARANTHESIS  */
#line 7145 "./Celeste_parser.y"
                                                                                     {
		auto* const newNode = new Celeste::ast::node::tuple({::Celeste::ast::Type::tuple, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 0, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__full_value__) });
		((*yyvalp).Celeste_tuple) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-3)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 17194 "Celeste_parser.tab.c"
    break;

  case 621: /* tuple: LEFT_PARANTHESIS deamerreserved_arrow__full_value__ RIGHT_PARANTHESIS  */
#line 7154 "./Celeste_parser.y"
                                                                                 {
		auto* const newNode = new Celeste::ast::node::tuple({::Celeste::ast::Type::tuple, ::deamer::external::cpp::ast::NodeValue::nonterminal, { 1, ::deamer::external::cpp::ast::ProductionRuleType::user }}, { (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-1)].yystate.yysemantics.yyval.Celeste_deamerreserved_arrow__full_value__) });
		((*yyvalp).Celeste_tuple) = newNode;

		// Ignored, Deleted, tokens are deleted
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (-2)].yystate.yysemantics.yyval.Terminal);
		delete (YY_CAST (yyGLRStackItem const *, yyvsp)[YYFILL (0)].yystate.yysemantics.yyval.Terminal);
	}
#line 17207 "Celeste_parser.tab.c"
    break;


#line 17211 "Celeste_parser.tab.c"

      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yylhsNonterm (yyrule), yyvalp, yylocp);

  return yyok;
# undef yyerrok
# undef YYABORT
# undef YYACCEPT
# undef YYNOMEM
# undef YYERROR
# undef YYBACKUP
# undef yyclearin
# undef YYRECOVERING
}


static void
yyuserMerge (int yyn, YYSTYPE* yy0, YYSTYPE* yy1)
{
  YY_USE (yy0);
  YY_USE (yy1);

  switch (yyn)
    {

      default: break;
    }
}

                              /* Bison grammar-table manipulation.  */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep)
{
  YY_USE (yyvaluep);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}

/** Number of symbols composing the right hand side of rule #RULE.  */
static inline int
yyrhsLength (yyRuleNum yyrule)
{
  return yyr2[yyrule];
}

static void
yydestroyGLRState (char const *yymsg, yyGLRState *yys)
{
  if (yys->yyresolved)
    yydestruct (yymsg, yy_accessing_symbol (yys->yylrState),
                &yys->yysemantics.yyval);
  else
    {
#if YYDEBUG
      if (yydebug)
        {
          if (yys->yysemantics.yyfirstVal)
            YY_FPRINTF ((stderr, "%s unresolved", yymsg));
          else
            YY_FPRINTF ((stderr, "%s incomplete", yymsg));
          YY_SYMBOL_PRINT ("", yy_accessing_symbol (yys->yylrState), YY_NULLPTR, &yys->yyloc);
        }
#endif

      if (yys->yysemantics.yyfirstVal)
        {
          yySemanticOption *yyoption = yys->yysemantics.yyfirstVal;
          yyGLRState *yyrh;
          int yyn;
          for (yyrh = yyoption->yystate, yyn = yyrhsLength (yyoption->yyrule);
               yyn > 0;
               yyrh = yyrh->yypred, yyn -= 1)
            yydestroyGLRState (yymsg, yyrh);
        }
    }
}

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

/** True iff LR state YYSTATE has only a default reduction (regardless
 *  of token).  */
static inline yybool
yyisDefaultedState (yy_state_t yystate)
{
  return yypact_value_is_default (yypact[yystate]);
}

/** The default reduction for YYSTATE, assuming it has one.  */
static inline yyRuleNum
yydefaultAction (yy_state_t yystate)
{
  return yydefact[yystate];
}

#define yytable_value_is_error(Yyn) \
  0

/** The action to take in YYSTATE on seeing YYTOKEN.
 *  Result R means
 *    R < 0:  Reduce on rule -R.
 *    R = 0:  Error.
 *    R > 0:  Shift to state R.
 *  Set *YYCONFLICTS to a pointer into yyconfl to a 0-terminated list
 *  of conflicting reductions.
 */
static inline int
yygetLRActions (yy_state_t yystate, yysymbol_kind_t yytoken, const short** yyconflicts)
{
  int yyindex = yypact[yystate] + yytoken;
  if (yytoken == YYSYMBOL_YYerror)
    {
      // This is the error token.
      *yyconflicts = yyconfl;
      return 0;
    }
  else if (yyisDefaultedState (yystate)
           || yyindex < 0 || YYLAST < yyindex || yycheck[yyindex] != yytoken)
    {
      *yyconflicts = yyconfl;
      return -yydefact[yystate];
    }
  else if (! yytable_value_is_error (yytable[yyindex]))
    {
      *yyconflicts = yyconfl + yyconflp[yyindex];
      return yytable[yyindex];
    }
  else
    {
      *yyconflicts = yyconfl + yyconflp[yyindex];
      return 0;
    }
}

/** Compute post-reduction state.
 * \param yystate   the current state
 * \param yysym     the nonterminal to push on the stack
 */
static inline yy_state_t
yyLRgotoState (yy_state_t yystate, yysymbol_kind_t yysym)
{
  int yyr = yypgoto[yysym - YYNTOKENS] + yystate;
  if (0 <= yyr && yyr <= YYLAST && yycheck[yyr] == yystate)
    return yytable[yyr];
  else
    return yydefgoto[yysym - YYNTOKENS];
}

static inline yybool
yyisShiftAction (int yyaction)
{
  return 0 < yyaction;
}

static inline yybool
yyisErrorAction (int yyaction)
{
  return yyaction == 0;
}

                                /* GLRStates */

/** Return a fresh GLRStackItem in YYSTACKP.  The item is an LR state
 *  if YYISSTATE, and otherwise a semantic option.  Callers should call
 *  YY_RESERVE_GLRSTACK afterwards to make sure there is sufficient
 *  headroom.  */

static inline yyGLRStackItem*
yynewGLRStackItem (yyGLRStack* yystackp, yybool yyisState)
{
  yyGLRStackItem* yynewItem = yystackp->yynextFree;
  yystackp->yyspaceLeft -= 1;
  yystackp->yynextFree += 1;
  yynewItem->yystate.yyisState = yyisState;
  return yynewItem;
}

/** Add a new semantic action that will execute the action for rule
 *  YYRULE on the semantic values in YYRHS to the list of
 *  alternative actions for YYSTATE.  Assumes that YYRHS comes from
 *  stack #YYK of *YYSTACKP. */
static void
yyaddDeferredAction (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yyGLRState* yystate,
                     yyGLRState* yyrhs, yyRuleNum yyrule)
{
  yySemanticOption* yynewOption =
    &yynewGLRStackItem (yystackp, yyfalse)->yyoption;
  YY_ASSERT (!yynewOption->yyisState);
  yynewOption->yystate = yyrhs;
  yynewOption->yyrule = yyrule;
  if (yystackp->yytops.yylookaheadNeeds[yyk])
    {
      yynewOption->yyrawchar = yychar;
      yynewOption->yyval = yylval;
    }
  else
    yynewOption->yyrawchar = YYEMPTY;
  yynewOption->yynext = yystate->yysemantics.yyfirstVal;
  yystate->yysemantics.yyfirstVal = yynewOption;

  YY_RESERVE_GLRSTACK (yystackp);
}

                                /* GLRStacks */

/** Initialize YYSET to a singleton set containing an empty stack.  */
static yybool
yyinitStateSet (yyGLRStateSet* yyset)
{
  yyset->yysize = 1;
  yyset->yycapacity = 16;
  yyset->yystates
    = YY_CAST (yyGLRState**,
               YYMALLOC (YY_CAST (YYSIZE_T, yyset->yycapacity)
                         * sizeof yyset->yystates[0]));
  if (! yyset->yystates)
    return yyfalse;
  yyset->yystates[0] = YY_NULLPTR;
  yyset->yylookaheadNeeds
    = YY_CAST (yybool*,
               YYMALLOC (YY_CAST (YYSIZE_T, yyset->yycapacity)
                         * sizeof yyset->yylookaheadNeeds[0]));
  if (! yyset->yylookaheadNeeds)
    {
      YYFREE (yyset->yystates);
      return yyfalse;
    }
  memset (yyset->yylookaheadNeeds,
          0,
          YY_CAST (YYSIZE_T, yyset->yycapacity) * sizeof yyset->yylookaheadNeeds[0]);
  return yytrue;
}

static void yyfreeStateSet (yyGLRStateSet* yyset)
{
  YYFREE (yyset->yystates);
  YYFREE (yyset->yylookaheadNeeds);
}

/** Initialize *YYSTACKP to a single empty stack, with total maximum
 *  capacity for all stacks of YYSIZE.  */
static yybool
yyinitGLRStack (yyGLRStack* yystackp, YYPTRDIFF_T yysize)
{
  yystackp->yyerrState = 0;
  yynerrs = 0;
  yystackp->yyspaceLeft = yysize;
  yystackp->yyitems
    = YY_CAST (yyGLRStackItem*,
               YYMALLOC (YY_CAST (YYSIZE_T, yysize)
                         * sizeof yystackp->yynextFree[0]));
  if (!yystackp->yyitems)
    return yyfalse;
  yystackp->yynextFree = yystackp->yyitems;
  yystackp->yysplitPoint = YY_NULLPTR;
  yystackp->yylastDeleted = YY_NULLPTR;
  return yyinitStateSet (&yystackp->yytops);
}


#if YYSTACKEXPANDABLE
# define YYRELOC(YYFROMITEMS, YYTOITEMS, YYX, YYTYPE)                   \
  &((YYTOITEMS)                                                         \
    - ((YYFROMITEMS) - YY_REINTERPRET_CAST (yyGLRStackItem*, (YYX))))->YYTYPE

/** If *YYSTACKP is expandable, extend it.  WARNING: Pointers into the
    stack from outside should be considered invalid after this call.
    We always expand when there are 1 or fewer items left AFTER an
    allocation, so that we can avoid having external pointers exist
    across an allocation.  */
static void
yyexpandGLRStack (yyGLRStack* yystackp)
{
  yyGLRStackItem* yynewItems;
  yyGLRStackItem* yyp0, *yyp1;
  YYPTRDIFF_T yynewSize;
  YYPTRDIFF_T yyn;
  YYPTRDIFF_T yysize = yystackp->yynextFree - yystackp->yyitems;
  if (YYMAXDEPTH - YYHEADROOM < yysize)
    yyMemoryExhausted (yystackp);
  yynewSize = 2*yysize;
  if (YYMAXDEPTH < yynewSize)
    yynewSize = YYMAXDEPTH;
  yynewItems
    = YY_CAST (yyGLRStackItem*,
               YYMALLOC (YY_CAST (YYSIZE_T, yynewSize)
                         * sizeof yynewItems[0]));
  if (! yynewItems)
    yyMemoryExhausted (yystackp);
  for (yyp0 = yystackp->yyitems, yyp1 = yynewItems, yyn = yysize;
       0 < yyn;
       yyn -= 1, yyp0 += 1, yyp1 += 1)
    {
      *yyp1 = *yyp0;
      if (*YY_REINTERPRET_CAST (yybool *, yyp0))
        {
          yyGLRState* yys0 = &yyp0->yystate;
          yyGLRState* yys1 = &yyp1->yystate;
          if (yys0->yypred != YY_NULLPTR)
            yys1->yypred =
              YYRELOC (yyp0, yyp1, yys0->yypred, yystate);
          if (! yys0->yyresolved && yys0->yysemantics.yyfirstVal != YY_NULLPTR)
            yys1->yysemantics.yyfirstVal =
              YYRELOC (yyp0, yyp1, yys0->yysemantics.yyfirstVal, yyoption);
        }
      else
        {
          yySemanticOption* yyv0 = &yyp0->yyoption;
          yySemanticOption* yyv1 = &yyp1->yyoption;
          if (yyv0->yystate != YY_NULLPTR)
            yyv1->yystate = YYRELOC (yyp0, yyp1, yyv0->yystate, yystate);
          if (yyv0->yynext != YY_NULLPTR)
            yyv1->yynext = YYRELOC (yyp0, yyp1, yyv0->yynext, yyoption);
        }
    }
  if (yystackp->yysplitPoint != YY_NULLPTR)
    yystackp->yysplitPoint = YYRELOC (yystackp->yyitems, yynewItems,
                                      yystackp->yysplitPoint, yystate);

  for (yyn = 0; yyn < yystackp->yytops.yysize; yyn += 1)
    if (yystackp->yytops.yystates[yyn] != YY_NULLPTR)
      yystackp->yytops.yystates[yyn] =
        YYRELOC (yystackp->yyitems, yynewItems,
                 yystackp->yytops.yystates[yyn], yystate);
  YYFREE (yystackp->yyitems);
  yystackp->yyitems = yynewItems;
  yystackp->yynextFree = yynewItems + yysize;
  yystackp->yyspaceLeft = yynewSize - yysize;
}
#endif

static void
yyfreeGLRStack (yyGLRStack* yystackp)
{
  YYFREE (yystackp->yyitems);
  yyfreeStateSet (&yystackp->yytops);
}

/** Assuming that YYS is a GLRState somewhere on *YYSTACKP, update the
 *  splitpoint of *YYSTACKP, if needed, so that it is at least as deep as
 *  YYS.  */
static inline void
yyupdateSplit (yyGLRStack* yystackp, yyGLRState* yys)
{
  if (yystackp->yysplitPoint != YY_NULLPTR && yystackp->yysplitPoint > yys)
    yystackp->yysplitPoint = yys;
}

/** Invalidate stack #YYK in *YYSTACKP.  */
static inline void
yymarkStackDeleted (yyGLRStack* yystackp, YYPTRDIFF_T yyk)
{
  if (yystackp->yytops.yystates[yyk] != YY_NULLPTR)
    yystackp->yylastDeleted = yystackp->yytops.yystates[yyk];
  yystackp->yytops.yystates[yyk] = YY_NULLPTR;
}

/** Undelete the last stack in *YYSTACKP that was marked as deleted.  Can
    only be done once after a deletion, and only when all other stacks have
    been deleted.  */
static void
yyundeleteLastStack (yyGLRStack* yystackp)
{
  if (yystackp->yylastDeleted == YY_NULLPTR || yystackp->yytops.yysize != 0)
    return;
  yystackp->yytops.yystates[0] = yystackp->yylastDeleted;
  yystackp->yytops.yysize = 1;
  YY_DPRINTF ((stderr, "Restoring last deleted stack as stack #0.\n"));
  yystackp->yylastDeleted = YY_NULLPTR;
}

static inline void
yyremoveDeletes (yyGLRStack* yystackp)
{
  YYPTRDIFF_T yyi, yyj;
  yyi = yyj = 0;
  while (yyj < yystackp->yytops.yysize)
    {
      if (yystackp->yytops.yystates[yyi] == YY_NULLPTR)
        {
          if (yyi == yyj)
            YY_DPRINTF ((stderr, "Removing dead stacks.\n"));
          yystackp->yytops.yysize -= 1;
        }
      else
        {
          yystackp->yytops.yystates[yyj] = yystackp->yytops.yystates[yyi];
          /* In the current implementation, it's unnecessary to copy
             yystackp->yytops.yylookaheadNeeds[yyi] since, after
             yyremoveDeletes returns, the parser immediately either enters
             deterministic operation or shifts a token.  However, it doesn't
             hurt, and the code might evolve to need it.  */
          yystackp->yytops.yylookaheadNeeds[yyj] =
            yystackp->yytops.yylookaheadNeeds[yyi];
          if (yyj != yyi)
            YY_DPRINTF ((stderr, "Rename stack %ld -> %ld.\n",
                        YY_CAST (long, yyi), YY_CAST (long, yyj)));
          yyj += 1;
        }
      yyi += 1;
    }
}

/** Shift to a new state on stack #YYK of *YYSTACKP, corresponding to LR
 * state YYLRSTATE, at input position YYPOSN, with (resolved) semantic
 * value *YYVALP and source location *YYLOCP.  */
static inline void
yyglrShift (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yy_state_t yylrState,
            YYPTRDIFF_T yyposn,
            YYSTYPE* yyvalp)
{
  yyGLRState* yynewState = &yynewGLRStackItem (yystackp, yytrue)->yystate;

  yynewState->yylrState = yylrState;
  yynewState->yyposn = yyposn;
  yynewState->yyresolved = yytrue;
  yynewState->yypred = yystackp->yytops.yystates[yyk];
  yynewState->yysemantics.yyval = *yyvalp;
  yystackp->yytops.yystates[yyk] = yynewState;

  YY_RESERVE_GLRSTACK (yystackp);
}

/** Shift stack #YYK of *YYSTACKP, to a new state corresponding to LR
 *  state YYLRSTATE, at input position YYPOSN, with the (unresolved)
 *  semantic value of YYRHS under the action for YYRULE.  */
static inline void
yyglrShiftDefer (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yy_state_t yylrState,
                 YYPTRDIFF_T yyposn, yyGLRState* yyrhs, yyRuleNum yyrule)
{
  yyGLRState* yynewState = &yynewGLRStackItem (yystackp, yytrue)->yystate;
  YY_ASSERT (yynewState->yyisState);

  yynewState->yylrState = yylrState;
  yynewState->yyposn = yyposn;
  yynewState->yyresolved = yyfalse;
  yynewState->yypred = yystackp->yytops.yystates[yyk];
  yynewState->yysemantics.yyfirstVal = YY_NULLPTR;
  yystackp->yytops.yystates[yyk] = yynewState;

  /* Invokes YY_RESERVE_GLRSTACK.  */
  yyaddDeferredAction (yystackp, yyk, yynewState, yyrhs, yyrule);
}

#if YYDEBUG

/*----------------------------------------------------------------------.
| Report that stack #YYK of *YYSTACKP is going to be reduced by YYRULE. |
`----------------------------------------------------------------------*/

static inline void
yy_reduce_print (yybool yynormal, yyGLRStackItem* yyvsp, YYPTRDIFF_T yyk,
                 yyRuleNum yyrule)
{
  int yynrhs = yyrhsLength (yyrule);
  int yyi;
  YY_FPRINTF ((stderr, "Reducing stack %ld by rule %d (line %d):\n",
               YY_CAST (long, yyk), yyrule - 1, yyrline[yyrule]));
  if (! yynormal)
    yyfillin (yyvsp, 1, -yynrhs);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YY_FPRINTF ((stderr, "   $%d = ", yyi + 1));
      yy_symbol_print (stderr,
                       yy_accessing_symbol (yyvsp[yyi - yynrhs + 1].yystate.yylrState),
                       &yyvsp[yyi - yynrhs + 1].yystate.yysemantics.yyval                       );
      if (!yyvsp[yyi - yynrhs + 1].yystate.yyresolved)
        YY_FPRINTF ((stderr, " (unresolved)"));
      YY_FPRINTF ((stderr, "\n"));
    }
}
#endif

/** Pop the symbols consumed by reduction #YYRULE from the top of stack
 *  #YYK of *YYSTACKP, and perform the appropriate semantic action on their
 *  semantic values.  Assumes that all ambiguities in semantic values
 *  have been previously resolved.  Set *YYVALP to the resulting value,
 *  and *YYLOCP to the computed location (if any).  Return value is as
 *  for userAction.  */
static inline YYRESULTTAG
yydoAction (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yyRuleNum yyrule,
            YYSTYPE* yyvalp)
{
  int yynrhs = yyrhsLength (yyrule);

  if (yystackp->yysplitPoint == YY_NULLPTR)
    {
      /* Standard special case: single stack.  */
      yyGLRStackItem* yyrhs
        = YY_REINTERPRET_CAST (yyGLRStackItem*, yystackp->yytops.yystates[yyk]);
      YY_ASSERT (yyk == 0);
      yystackp->yynextFree -= yynrhs;
      yystackp->yyspaceLeft += yynrhs;
      yystackp->yytops.yystates[0] = & yystackp->yynextFree[-1].yystate;
      return yyuserAction (yyrule, yynrhs, yyrhs, yystackp, yyk,
                           yyvalp);
    }
  else
    {
      yyGLRStackItem yyrhsVals[YYMAXRHS + YYMAXLEFT + 1];
      yyGLRState* yys = yyrhsVals[YYMAXRHS + YYMAXLEFT].yystate.yypred
        = yystackp->yytops.yystates[yyk];
      int yyi;
      for (yyi = 0; yyi < yynrhs; yyi += 1)
        {
          yys = yys->yypred;
          YY_ASSERT (yys);
        }
      yyupdateSplit (yystackp, yys);
      yystackp->yytops.yystates[yyk] = yys;
      return yyuserAction (yyrule, yynrhs, yyrhsVals + YYMAXRHS + YYMAXLEFT - 1,
                           yystackp, yyk, yyvalp);
    }
}

/** Pop items off stack #YYK of *YYSTACKP according to grammar rule YYRULE,
 *  and push back on the resulting nonterminal symbol.  Perform the
 *  semantic action associated with YYRULE and store its value with the
 *  newly pushed state, if YYFORCEEVAL or if *YYSTACKP is currently
 *  unambiguous.  Otherwise, store the deferred semantic action with
 *  the new state.  If the new state would have an identical input
 *  position, LR state, and predecessor to an existing state on the stack,
 *  it is identified with that existing state, eliminating stack #YYK from
 *  *YYSTACKP.  In this case, the semantic value is
 *  added to the options for the existing state's semantic value.
 */
static inline YYRESULTTAG
yyglrReduce (yyGLRStack* yystackp, YYPTRDIFF_T yyk, yyRuleNum yyrule,
             yybool yyforceEval)
{
  YYPTRDIFF_T yyposn = yystackp->yytops.yystates[yyk]->yyposn;

  if (yyforceEval || yystackp->yysplitPoint == YY_NULLPTR)
    {
      YYSTYPE yyval;

      YYRESULTTAG yyflag = yydoAction (yystackp, yyk, yyrule, &yyval);
      if (yyflag == yyerr && yystackp->yysplitPoint != YY_NULLPTR)
        YY_DPRINTF ((stderr,
                     "Parse on stack %ld rejected by rule %d (line %d).\n",
                     YY_CAST (long, yyk), yyrule - 1, yyrline[yyrule]));
      if (yyflag != yyok)
        return yyflag;
      yyglrShift (yystackp, yyk,
                  yyLRgotoState (yystackp->yytops.yystates[yyk]->yylrState,
                                 yylhsNonterm (yyrule)),
                  yyposn, &yyval);
    }
  else
    {
      YYPTRDIFF_T yyi;
      int yyn;
      yyGLRState* yys, *yys0 = yystackp->yytops.yystates[yyk];
      yy_state_t yynewLRState;

      for (yys = yystackp->yytops.yystates[yyk], yyn = yyrhsLength (yyrule);
           0 < yyn; yyn -= 1)
        {
          yys = yys->yypred;
          YY_ASSERT (yys);
        }
      yyupdateSplit (yystackp, yys);
      yynewLRState = yyLRgotoState (yys->yylrState, yylhsNonterm (yyrule));
      YY_DPRINTF ((stderr,
                   "Reduced stack %ld by rule %d (line %d); action deferred.  "
                   "Now in state %d.\n",
                   YY_CAST (long, yyk), yyrule - 1, yyrline[yyrule],
                   yynewLRState));
      for (yyi = 0; yyi < yystackp->yytops.yysize; yyi += 1)
        if (yyi != yyk && yystackp->yytops.yystates[yyi] != YY_NULLPTR)
          {
            yyGLRState *yysplit = yystackp->yysplitPoint;
            yyGLRState *yyp = yystackp->yytops.yystates[yyi];
            while (yyp != yys && yyp != yysplit && yyp->yyposn >= yyposn)
              {
                if (yyp->yylrState == yynewLRState && yyp->yypred == yys)
                  {
                    yyaddDeferredAction (yystackp, yyk, yyp, yys0, yyrule);
                    yymarkStackDeleted (yystackp, yyk);
                    YY_DPRINTF ((stderr, "Merging stack %ld into stack %ld.\n",
                                 YY_CAST (long, yyk), YY_CAST (long, yyi)));
                    return yyok;
                  }
                yyp = yyp->yypred;
              }
          }
      yystackp->yytops.yystates[yyk] = yys;
      yyglrShiftDefer (yystackp, yyk, yynewLRState, yyposn, yys0, yyrule);
    }
  return yyok;
}

static YYPTRDIFF_T
yysplitStack (yyGLRStack* yystackp, YYPTRDIFF_T yyk)
{
  if (yystackp->yysplitPoint == YY_NULLPTR)
    {
      YY_ASSERT (yyk == 0);
      yystackp->yysplitPoint = yystackp->yytops.yystates[yyk];
    }
  if (yystackp->yytops.yycapacity <= yystackp->yytops.yysize)
    {
      YYPTRDIFF_T state_size = YYSIZEOF (yystackp->yytops.yystates[0]);
      YYPTRDIFF_T half_max_capacity = YYSIZE_MAXIMUM / 2 / state_size;
      if (half_max_capacity < yystackp->yytops.yycapacity)
        yyMemoryExhausted (yystackp);
      yystackp->yytops.yycapacity *= 2;

      {
        yyGLRState** yynewStates
          = YY_CAST (yyGLRState**,
                     YYREALLOC (yystackp->yytops.yystates,
                                (YY_CAST (YYSIZE_T, yystackp->yytops.yycapacity)
                                 * sizeof yynewStates[0])));
        if (yynewStates == YY_NULLPTR)
          yyMemoryExhausted (yystackp);
        yystackp->yytops.yystates = yynewStates;
      }

      {
        yybool* yynewLookaheadNeeds
          = YY_CAST (yybool*,
                     YYREALLOC (yystackp->yytops.yylookaheadNeeds,
                                (YY_CAST (YYSIZE_T, yystackp->yytops.yycapacity)
                                 * sizeof yynewLookaheadNeeds[0])));
        if (yynewLookaheadNeeds == YY_NULLPTR)
          yyMemoryExhausted (yystackp);
        yystackp->yytops.yylookaheadNeeds = yynewLookaheadNeeds;
      }
    }
  yystackp->yytops.yystates[yystackp->yytops.yysize]
    = yystackp->yytops.yystates[yyk];
  yystackp->yytops.yylookaheadNeeds[yystackp->yytops.yysize]
    = yystackp->yytops.yylookaheadNeeds[yyk];
  yystackp->yytops.yysize += 1;
  return yystackp->yytops.yysize - 1;
}

/** True iff YYY0 and YYY1 represent identical options at the top level.
 *  That is, they represent the same rule applied to RHS symbols
 *  that produce the same terminal symbols.  */
static yybool
yyidenticalOptions (yySemanticOption* yyy0, yySemanticOption* yyy1)
{
  if (yyy0->yyrule == yyy1->yyrule)
    {
      yyGLRState *yys0, *yys1;
      int yyn;
      for (yys0 = yyy0->yystate, yys1 = yyy1->yystate,
           yyn = yyrhsLength (yyy0->yyrule);
           yyn > 0;
           yys0 = yys0->yypred, yys1 = yys1->yypred, yyn -= 1)
        if (yys0->yyposn != yys1->yyposn)
          return yyfalse;
      return yytrue;
    }
  else
    return yyfalse;
}

/** Assuming identicalOptions (YYY0,YYY1), destructively merge the
 *  alternative semantic values for the RHS-symbols of YYY1 and YYY0.  */
static void
yymergeOptionSets (yySemanticOption* yyy0, yySemanticOption* yyy1)
{
  yyGLRState *yys0, *yys1;
  int yyn;
  for (yys0 = yyy0->yystate, yys1 = yyy1->yystate,
       yyn = yyrhsLength (yyy0->yyrule);
       0 < yyn;
       yys0 = yys0->yypred, yys1 = yys1->yypred, yyn -= 1)
    {
      if (yys0 == yys1)
        break;
      else if (yys0->yyresolved)
        {
          yys1->yyresolved = yytrue;
          yys1->yysemantics.yyval = yys0->yysemantics.yyval;
        }
      else if (yys1->yyresolved)
        {
          yys0->yyresolved = yytrue;
          yys0->yysemantics.yyval = yys1->yysemantics.yyval;
        }
      else
        {
          yySemanticOption** yyz0p = &yys0->yysemantics.yyfirstVal;
          yySemanticOption* yyz1 = yys1->yysemantics.yyfirstVal;
          while (yytrue)
            {
              if (yyz1 == *yyz0p || yyz1 == YY_NULLPTR)
                break;
              else if (*yyz0p == YY_NULLPTR)
                {
                  *yyz0p = yyz1;
                  break;
                }
              else if (*yyz0p < yyz1)
                {
                  yySemanticOption* yyz = *yyz0p;
                  *yyz0p = yyz1;
                  yyz1 = yyz1->yynext;
                  (*yyz0p)->yynext = yyz;
                }
              yyz0p = &(*yyz0p)->yynext;
            }
          yys1->yysemantics.yyfirstVal = yys0->yysemantics.yyfirstVal;
        }
    }
}

/** Y0 and Y1 represent two possible actions to take in a given
 *  parsing state; return 0 if no combination is possible,
 *  1 if user-mergeable, 2 if Y0 is preferred, 3 if Y1 is preferred.  */
static int
yypreference (yySemanticOption* y0, yySemanticOption* y1)
{
  yyRuleNum r0 = y0->yyrule, r1 = y1->yyrule;
  int p0 = yydprec[r0], p1 = yydprec[r1];

  if (p0 == p1)
    {
      if (yymerger[r0] == 0 || yymerger[r0] != yymerger[r1])
        return 0;
      else
        return 1;
    }
  if (p0 == 0 || p1 == 0)
    return 0;
  if (p0 < p1)
    return 3;
  if (p1 < p0)
    return 2;
  return 0;
}

static YYRESULTTAG
yyresolveValue (yyGLRState* yys, yyGLRStack* yystackp);


/** Resolve the previous YYN states starting at and including state YYS
 *  on *YYSTACKP. If result != yyok, some states may have been left
 *  unresolved possibly with empty semantic option chains.  Regardless
 *  of whether result = yyok, each state has been left with consistent
 *  data so that yydestroyGLRState can be invoked if necessary.  */
static YYRESULTTAG
yyresolveStates (yyGLRState* yys, int yyn,
                 yyGLRStack* yystackp)
{
  if (0 < yyn)
    {
      YY_ASSERT (yys->yypred);
      YYCHK (yyresolveStates (yys->yypred, yyn-1, yystackp));
      if (! yys->yyresolved)
        YYCHK (yyresolveValue (yys, yystackp));
    }
  return yyok;
}

/** Resolve the states for the RHS of YYOPT on *YYSTACKP, perform its
 *  user action, and return the semantic value and location in *YYVALP
 *  and *YYLOCP.  Regardless of whether result = yyok, all RHS states
 *  have been destroyed (assuming the user action destroys all RHS
 *  semantic values if invoked).  */
static YYRESULTTAG
yyresolveAction (yySemanticOption* yyopt, yyGLRStack* yystackp,
                 YYSTYPE* yyvalp)
{
  yyGLRStackItem yyrhsVals[YYMAXRHS + YYMAXLEFT + 1];
  int yynrhs = yyrhsLength (yyopt->yyrule);
  YYRESULTTAG yyflag =
    yyresolveStates (yyopt->yystate, yynrhs, yystackp);
  if (yyflag != yyok)
    {
      yyGLRState *yys;
      for (yys = yyopt->yystate; yynrhs > 0; yys = yys->yypred, yynrhs -= 1)
        yydestroyGLRState ("Cleanup: popping", yys);
      return yyflag;
    }

  yyrhsVals[YYMAXRHS + YYMAXLEFT].yystate.yypred = yyopt->yystate;
  {
    int yychar_current = yychar;
    YYSTYPE yylval_current = yylval;
    yychar = yyopt->yyrawchar;
    yylval = yyopt->yyval;
    yyflag = yyuserAction (yyopt->yyrule, yynrhs,
                           yyrhsVals + YYMAXRHS + YYMAXLEFT - 1,
                           yystackp, -1, yyvalp);
    yychar = yychar_current;
    yylval = yylval_current;
  }
  return yyflag;
}

#if YYDEBUG
static void
yyreportTree (yySemanticOption* yyx, int yyindent)
{
  int yynrhs = yyrhsLength (yyx->yyrule);
  int yyi;
  yyGLRState* yys;
  yyGLRState* yystates[1 + YYMAXRHS];
  yyGLRState yyleftmost_state;

  for (yyi = yynrhs, yys = yyx->yystate; 0 < yyi; yyi -= 1, yys = yys->yypred)
    yystates[yyi] = yys;
  if (yys == YY_NULLPTR)
    {
      yyleftmost_state.yyposn = 0;
      yystates[0] = &yyleftmost_state;
    }
  else
    yystates[0] = yys;

  if (yyx->yystate->yyposn < yys->yyposn + 1)
    YY_FPRINTF ((stderr, "%*s%s -> <Rule %d, empty>\n",
                 yyindent, "", yysymbol_name (yylhsNonterm (yyx->yyrule)),
                 yyx->yyrule - 1));
  else
    YY_FPRINTF ((stderr, "%*s%s -> <Rule %d, tokens %ld .. %ld>\n",
                 yyindent, "", yysymbol_name (yylhsNonterm (yyx->yyrule)),
                 yyx->yyrule - 1, YY_CAST (long, yys->yyposn + 1),
                 YY_CAST (long, yyx->yystate->yyposn)));
  for (yyi = 1; yyi <= yynrhs; yyi += 1)
    {
      if (yystates[yyi]->yyresolved)
        {
          if (yystates[yyi-1]->yyposn+1 > yystates[yyi]->yyposn)
            YY_FPRINTF ((stderr, "%*s%s <empty>\n", yyindent+2, "",
                         yysymbol_name (yy_accessing_symbol (yystates[yyi]->yylrState))));
          else
            YY_FPRINTF ((stderr, "%*s%s <tokens %ld .. %ld>\n", yyindent+2, "",
                         yysymbol_name (yy_accessing_symbol (yystates[yyi]->yylrState)),
                         YY_CAST (long, yystates[yyi-1]->yyposn + 1),
                         YY_CAST (long, yystates[yyi]->yyposn)));
        }
      else
        yyreportTree (yystates[yyi]->yysemantics.yyfirstVal, yyindent+2);
    }
}
#endif

static YYRESULTTAG
yyreportAmbiguity (yySemanticOption* yyx0,
                   yySemanticOption* yyx1)
{
  YY_USE (yyx0);
  YY_USE (yyx1);

#if YYDEBUG
  YY_FPRINTF ((stderr, "Ambiguity detected.\n"));
  YY_FPRINTF ((stderr, "Option 1,\n"));
  yyreportTree (yyx0, 2);
  YY_FPRINTF ((stderr, "\nOption 2,\n"));
  yyreportTree (yyx1, 2);
  YY_FPRINTF ((stderr, "\n"));
#endif

  yyerror (YY_("syntax is ambiguous"));
  return yyabort;
}

/** Resolve the ambiguity represented in state YYS in *YYSTACKP,
 *  perform the indicated actions, and set the semantic value of YYS.
 *  If result != yyok, the chain of semantic options in YYS has been
 *  cleared instead or it has been left unmodified except that
 *  redundant options may have been removed.  Regardless of whether
 *  result = yyok, YYS has been left with consistent data so that
 *  yydestroyGLRState can be invoked if necessary.  */
static YYRESULTTAG
yyresolveValue (yyGLRState* yys, yyGLRStack* yystackp)
{
  yySemanticOption* yyoptionList = yys->yysemantics.yyfirstVal;
  yySemanticOption* yybest = yyoptionList;
  yySemanticOption** yypp;
  yybool yymerge = yyfalse;
  YYSTYPE yyval;
  YYRESULTTAG yyflag;

  for (yypp = &yyoptionList->yynext; *yypp != YY_NULLPTR; )
    {
      yySemanticOption* yyp = *yypp;

      if (yyidenticalOptions (yybest, yyp))
        {
          yymergeOptionSets (yybest, yyp);
          *yypp = yyp->yynext;
        }
      else
        {
          switch (yypreference (yybest, yyp))
            {
            case 0:
              return yyreportAmbiguity (yybest, yyp);
              break;
            case 1:
              yymerge = yytrue;
              break;
            case 2:
              break;
            case 3:
              yybest = yyp;
              yymerge = yyfalse;
              break;
            default:
              /* This cannot happen so it is not worth a YY_ASSERT (yyfalse),
                 but some compilers complain if the default case is
                 omitted.  */
              break;
            }
          yypp = &yyp->yynext;
        }
    }

  if (yymerge)
    {
      yySemanticOption* yyp;
      int yyprec = yydprec[yybest->yyrule];
      yyflag = yyresolveAction (yybest, yystackp, &yyval);
      if (yyflag == yyok)
        for (yyp = yybest->yynext; yyp != YY_NULLPTR; yyp = yyp->yynext)
          {
            if (yyprec == yydprec[yyp->yyrule])
              {
                YYSTYPE yyval_other;
                yyflag = yyresolveAction (yyp, yystackp, &yyval_other);
                if (yyflag != yyok)
                  {
                    yydestruct ("Cleanup: discarding incompletely merged value for",
                                yy_accessing_symbol (yys->yylrState),
                                &yyval);
                    break;
                  }
                yyuserMerge (yymerger[yyp->yyrule], &yyval, &yyval_other);
              }
          }
    }
  else
    yyflag = yyresolveAction (yybest, yystackp, &yyval);

  if (yyflag == yyok)
    {
      yys->yyresolved = yytrue;
      yys->yysemantics.yyval = yyval;
    }
  else
    yys->yysemantics.yyfirstVal = YY_NULLPTR;
  return yyflag;
}

static YYRESULTTAG
yyresolveStack (yyGLRStack* yystackp)
{
  if (yystackp->yysplitPoint != YY_NULLPTR)
    {
      yyGLRState* yys;
      int yyn;

      for (yyn = 0, yys = yystackp->yytops.yystates[0];
           yys != yystackp->yysplitPoint;
           yys = yys->yypred, yyn += 1)
        continue;
      YYCHK (yyresolveStates (yystackp->yytops.yystates[0], yyn, yystackp
                             ));
    }
  return yyok;
}

/** Called when returning to deterministic operation to clean up the extra
 * stacks. */
static void
yycompressStack (yyGLRStack* yystackp)
{
  /* yyr is the state after the split point.  */
  yyGLRState *yyr;

  if (yystackp->yytops.yysize != 1 || yystackp->yysplitPoint == YY_NULLPTR)
    return;

  {
    yyGLRState *yyp, *yyq;
    for (yyp = yystackp->yytops.yystates[0], yyq = yyp->yypred, yyr = YY_NULLPTR;
         yyp != yystackp->yysplitPoint;
         yyr = yyp, yyp = yyq, yyq = yyp->yypred)
      yyp->yypred = yyr;
  }

  yystackp->yyspaceLeft += yystackp->yynextFree - yystackp->yyitems;
  yystackp->yynextFree = YY_REINTERPRET_CAST (yyGLRStackItem*, yystackp->yysplitPoint) + 1;
  yystackp->yyspaceLeft -= yystackp->yynextFree - yystackp->yyitems;
  yystackp->yysplitPoint = YY_NULLPTR;
  yystackp->yylastDeleted = YY_NULLPTR;

  while (yyr != YY_NULLPTR)
    {
      yystackp->yynextFree->yystate = *yyr;
      yyr = yyr->yypred;
      yystackp->yynextFree->yystate.yypred = &yystackp->yynextFree[-1].yystate;
      yystackp->yytops.yystates[0] = &yystackp->yynextFree->yystate;
      yystackp->yynextFree += 1;
      yystackp->yyspaceLeft -= 1;
    }
}

static YYRESULTTAG
yyprocessOneStack (yyGLRStack* yystackp, YYPTRDIFF_T yyk,
                   YYPTRDIFF_T yyposn)
{
  while (yystackp->yytops.yystates[yyk] != YY_NULLPTR)
    {
      yy_state_t yystate = yystackp->yytops.yystates[yyk]->yylrState;
      YY_DPRINTF ((stderr, "Stack %ld Entering state %d\n",
                   YY_CAST (long, yyk), yystate));

      YY_ASSERT (yystate != YYFINAL);

      if (yyisDefaultedState (yystate))
        {
          YYRESULTTAG yyflag;
          yyRuleNum yyrule = yydefaultAction (yystate);
          if (yyrule == 0)
            {
              YY_DPRINTF ((stderr, "Stack %ld dies.\n", YY_CAST (long, yyk)));
              yymarkStackDeleted (yystackp, yyk);
              return yyok;
            }
          yyflag = yyglrReduce (yystackp, yyk, yyrule, yyimmediate[yyrule]);
          if (yyflag == yyerr)
            {
              YY_DPRINTF ((stderr,
                           "Stack %ld dies "
                           "(predicate failure or explicit user error).\n",
                           YY_CAST (long, yyk)));
              yymarkStackDeleted (yystackp, yyk);
              return yyok;
            }
          if (yyflag != yyok)
            return yyflag;
        }
      else
        {
          yysymbol_kind_t yytoken = yygetToken (&yychar);
          const short* yyconflicts;
          const int yyaction = yygetLRActions (yystate, yytoken, &yyconflicts);
          yystackp->yytops.yylookaheadNeeds[yyk] = yytrue;

          for (/* nothing */; *yyconflicts; yyconflicts += 1)
            {
              YYRESULTTAG yyflag;
              YYPTRDIFF_T yynewStack = yysplitStack (yystackp, yyk);
              YY_DPRINTF ((stderr, "Splitting off stack %ld from %ld.\n",
                           YY_CAST (long, yynewStack), YY_CAST (long, yyk)));
              yyflag = yyglrReduce (yystackp, yynewStack,
                                    *yyconflicts,
                                    yyimmediate[*yyconflicts]);
              if (yyflag == yyok)
                YYCHK (yyprocessOneStack (yystackp, yynewStack,
                                          yyposn));
              else if (yyflag == yyerr)
                {
                  YY_DPRINTF ((stderr, "Stack %ld dies.\n", YY_CAST (long, yynewStack)));
                  yymarkStackDeleted (yystackp, yynewStack);
                }
              else
                return yyflag;
            }

          if (yyisShiftAction (yyaction))
            break;
          else if (yyisErrorAction (yyaction))
            {
              YY_DPRINTF ((stderr, "Stack %ld dies.\n", YY_CAST (long, yyk)));
              yymarkStackDeleted (yystackp, yyk);
              break;
            }
          else
            {
              YYRESULTTAG yyflag = yyglrReduce (yystackp, yyk, -yyaction,
                                                yyimmediate[-yyaction]);
              if (yyflag == yyerr)
                {
                  YY_DPRINTF ((stderr,
                               "Stack %ld dies "
                               "(predicate failure or explicit user error).\n",
                               YY_CAST (long, yyk)));
                  yymarkStackDeleted (yystackp, yyk);
                  break;
                }
              else if (yyflag != yyok)
                return yyflag;
            }
        }
    }
  return yyok;
}

/* Put in YYARG at most YYARGN of the expected tokens given the
   current YYSTACKP, and return the number of tokens stored in YYARG.  If
   YYARG is null, return the number of expected tokens (guaranteed to
   be less than YYNTOKENS).  */
static int
yypcontext_expected_tokens (const yyGLRStack* yystackp,
                            yysymbol_kind_t yyarg[], int yyargn)
{
  /* Actual size of YYARG. */
  int yycount = 0;
  int yyn = yypact[yystackp->yytops.yystates[0]->yylrState];
  if (!yypact_value_is_default (yyn))
    {
      /* Start YYX at -YYN if negative to avoid negative indexes in
         YYCHECK.  In other words, skip the first -YYN actions for
         this state because they are default actions.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;
      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yyx;
      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
        if (yycheck[yyx + yyn] == yyx && yyx != YYSYMBOL_YYerror
            && !yytable_value_is_error (yytable[yyx + yyn]))
          {
            if (!yyarg)
              ++yycount;
            else if (yycount == yyargn)
              return 0;
            else
              yyarg[yycount++] = YY_CAST (yysymbol_kind_t, yyx);
          }
    }
  if (yyarg && yycount == 0 && 0 < yyargn)
    yyarg[0] = YYSYMBOL_YYEMPTY;
  return yycount;
}

static int
yy_syntax_error_arguments (const yyGLRStack* yystackp,
                           yysymbol_kind_t yyarg[], int yyargn)
{
  yysymbol_kind_t yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* Actual size of YYARG. */
  int yycount = 0;
  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYSYMBOL_YYEMPTY)
    {
      int yyn;
      if (yyarg)
        yyarg[yycount] = yytoken;
      ++yycount;
      yyn = yypcontext_expected_tokens (yystackp,
                                        yyarg ? yyarg + 1 : yyarg, yyargn - 1);
      if (yyn == YYENOMEM)
        return YYENOMEM;
      else
        yycount += yyn;
    }
  return yycount;
}



static void
yyreportSyntaxError (yyGLRStack* yystackp)
{
  if (yystackp->yyerrState != 0)
    return;
  {
  yybool yysize_overflow = yyfalse;
  char* yymsg = YY_NULLPTR;
  enum { YYARGS_MAX = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat: reported tokens (one for the "unexpected",
     one per "expected"). */
  yysymbol_kind_t yyarg[YYARGS_MAX];
  /* Cumulated lengths of YYARG.  */
  YYPTRDIFF_T yysize = 0;

  /* Actual size of YYARG. */
  int yycount
    = yy_syntax_error_arguments (yystackp, yyarg, YYARGS_MAX);
  if (yycount == YYENOMEM)
    yyMemoryExhausted (yystackp);

  switch (yycount)
    {
#define YYCASE_(N, S)                   \
      case N:                           \
        yyformat = S;                   \
      break
    default: /* Avoid compiler warnings. */
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
#undef YYCASE_
    }

  /* Compute error message size.  Don't count the "%s"s, but reserve
     room for the terminator.  */
  yysize = yystrlen (yyformat) - 2 * yycount + 1;
  {
    int yyi;
    for (yyi = 0; yyi < yycount; ++yyi)
      {
        YYPTRDIFF_T yysz
          = yytnamerr (YY_NULLPTR, yytname[yyarg[yyi]]);
        if (YYSIZE_MAXIMUM - yysize < yysz)
          yysize_overflow = yytrue;
        else
          yysize += yysz;
      }
  }

  if (!yysize_overflow)
    yymsg = YY_CAST (char *, YYMALLOC (YY_CAST (YYSIZE_T, yysize)));

  if (yymsg)
    {
      char *yyp = yymsg;
      int yyi = 0;
      while ((*yyp = *yyformat))
        {
          if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
            {
              yyp += yytnamerr (yyp, yytname[yyarg[yyi++]]);
              yyformat += 2;
            }
          else
            {
              ++yyp;
              ++yyformat;
            }
        }
      yyerror (yymsg);
      YYFREE (yymsg);
    }
  else
    {
      yyerror (YY_("syntax error"));
      yyMemoryExhausted (yystackp);
    }
  }
  yynerrs += 1;
}

/* Recover from a syntax error on *YYSTACKP, assuming that *YYSTACKP->YYTOKENP,
   yylval, and yylloc are the syntactic category, semantic value, and location
   of the lookahead.  */
static void
yyrecoverSyntaxError (yyGLRStack* yystackp)
{
  if (yystackp->yyerrState == 3)
    /* We just shifted the error token and (perhaps) took some
       reductions.  Skip tokens until we can proceed.  */
    while (yytrue)
      {
        yysymbol_kind_t yytoken;
        int yyj;
        if (yychar == YYEOF)
          yyFail (yystackp, YY_NULLPTR);
        if (yychar != YYEMPTY)
          {
            yytoken = YYTRANSLATE (yychar);
            yydestruct ("Error: discarding",
                        yytoken, &yylval);
            yychar = YYEMPTY;
          }
        yytoken = yygetToken (&yychar);
        yyj = yypact[yystackp->yytops.yystates[0]->yylrState];
        if (yypact_value_is_default (yyj))
          return;
        yyj += yytoken;
        if (yyj < 0 || YYLAST < yyj || yycheck[yyj] != yytoken)
          {
            if (yydefact[yystackp->yytops.yystates[0]->yylrState] != 0)
              return;
          }
        else if (! yytable_value_is_error (yytable[yyj]))
          return;
      }

  /* Reduce to one stack.  */
  {
    YYPTRDIFF_T yyk;
    for (yyk = 0; yyk < yystackp->yytops.yysize; yyk += 1)
      if (yystackp->yytops.yystates[yyk] != YY_NULLPTR)
        break;
    if (yyk >= yystackp->yytops.yysize)
      yyFail (yystackp, YY_NULLPTR);
    for (yyk += 1; yyk < yystackp->yytops.yysize; yyk += 1)
      yymarkStackDeleted (yystackp, yyk);
    yyremoveDeletes (yystackp);
    yycompressStack (yystackp);
  }

  /* Pop stack until we find a state that shifts the error token.  */
  yystackp->yyerrState = 3;
  while (yystackp->yytops.yystates[0] != YY_NULLPTR)
    {
      yyGLRState *yys = yystackp->yytops.yystates[0];
      int yyj = yypact[yys->yylrState];
      if (! yypact_value_is_default (yyj))
        {
          yyj += YYSYMBOL_YYerror;
          if (0 <= yyj && yyj <= YYLAST && yycheck[yyj] == YYSYMBOL_YYerror
              && yyisShiftAction (yytable[yyj]))
            {
              /* Shift the error token.  */
              int yyaction = yytable[yyj];
              YY_SYMBOL_PRINT ("Shifting", yy_accessing_symbol (yyaction),
                               &yylval, &yyerrloc);
              yyglrShift (yystackp, 0, yyaction,
                          yys->yyposn, &yylval);
              yys = yystackp->yytops.yystates[0];
              break;
            }
        }
      if (yys->yypred != YY_NULLPTR)
        yydestroyGLRState ("Error: popping", yys);
      yystackp->yytops.yystates[0] = yys->yypred;
      yystackp->yynextFree -= 1;
      yystackp->yyspaceLeft += 1;
    }
  if (yystackp->yytops.yystates[0] == YY_NULLPTR)
    yyFail (yystackp, YY_NULLPTR);
}

#define YYCHK1(YYE)                             \
  do {                                          \
    switch (YYE) {                              \
    case yyok:     break;                       \
    case yyabort:  goto yyabortlab;             \
    case yyaccept: goto yyacceptlab;            \
    case yyerr:    goto yyuser_error;           \
    case yynomem:  goto yyexhaustedlab;         \
    default:       goto yybuglab;               \
    }                                           \
  } while (0)

/*----------.
| yyparse.  |
`----------*/

int
yyparse (void)
{
  int yyresult;
  yyGLRStack yystack;
  yyGLRStack* const yystackp = &yystack;
  YYPTRDIFF_T yyposn;

  YY_DPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY;
  yylval = yyval_default;

  if (! yyinitGLRStack (yystackp, YYINITDEPTH))
    goto yyexhaustedlab;
  switch (YYSETJMP (yystack.yyexception_buffer))
    {
    case 0: break;
    case 1: goto yyabortlab;
    case 2: goto yyexhaustedlab;
    default: goto yybuglab;
    }
  yyglrShift (&yystack, 0, 0, 0, &yylval);
  yyposn = 0;

  while (yytrue)
    {
      /* For efficiency, we have two loops, the first of which is
         specialized to deterministic operation (single stack, no
         potential ambiguity).  */
      /* Standard mode. */
      while (yytrue)
        {
          yy_state_t yystate = yystack.yytops.yystates[0]->yylrState;
          YY_DPRINTF ((stderr, "Entering state %d\n", yystate));
          if (yystate == YYFINAL)
            goto yyacceptlab;
          if (yyisDefaultedState (yystate))
            {
              yyRuleNum yyrule = yydefaultAction (yystate);
              if (yyrule == 0)
                {
                  yyreportSyntaxError (&yystack);
                  goto yyuser_error;
                }
              YYCHK1 (yyglrReduce (&yystack, 0, yyrule, yytrue));
            }
          else
            {
              yysymbol_kind_t yytoken = yygetToken (&yychar);
              const short* yyconflicts;
              int yyaction = yygetLRActions (yystate, yytoken, &yyconflicts);
              if (*yyconflicts)
                /* Enter nondeterministic mode.  */
                break;
              if (yyisShiftAction (yyaction))
                {
                  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
                  yychar = YYEMPTY;
                  yyposn += 1;
                  yyglrShift (&yystack, 0, yyaction, yyposn, &yylval);
                  if (0 < yystack.yyerrState)
                    yystack.yyerrState -= 1;
                }
              else if (yyisErrorAction (yyaction))
                {
                  /* Issue an error message unless the scanner already
                     did. */
                  if (yychar != YYerror)
                    yyreportSyntaxError (&yystack);
                  goto yyuser_error;
                }
              else
                YYCHK1 (yyglrReduce (&yystack, 0, -yyaction, yytrue));
            }
        }

      /* Nondeterministic mode. */
      while (yytrue)
        {
          yysymbol_kind_t yytoken_to_shift;
          YYPTRDIFF_T yys;

          for (yys = 0; yys < yystack.yytops.yysize; yys += 1)
            yystackp->yytops.yylookaheadNeeds[yys] = yychar != YYEMPTY;

          /* yyprocessOneStack returns one of three things:

              - An error flag.  If the caller is yyprocessOneStack, it
                immediately returns as well.  When the caller is finally
                yyparse, it jumps to an error label via YYCHK1.

              - yyok, but yyprocessOneStack has invoked yymarkStackDeleted
                (&yystack, yys), which sets the top state of yys to NULL.  Thus,
                yyparse's following invocation of yyremoveDeletes will remove
                the stack.

              - yyok, when ready to shift a token.

             Except in the first case, yyparse will invoke yyremoveDeletes and
             then shift the next token onto all remaining stacks.  This
             synchronization of the shift (that is, after all preceding
             reductions on all stacks) helps prevent double destructor calls
             on yylval in the event of memory exhaustion.  */

          for (yys = 0; yys < yystack.yytops.yysize; yys += 1)
            YYCHK1 (yyprocessOneStack (&yystack, yys, yyposn));
          yyremoveDeletes (&yystack);
          if (yystack.yytops.yysize == 0)
            {
              yyundeleteLastStack (&yystack);
              if (yystack.yytops.yysize == 0)
                yyFail (&yystack, YY_("syntax error"));
              YYCHK1 (yyresolveStack (&yystack));
              YY_DPRINTF ((stderr, "Returning to deterministic operation.\n"));
              yyreportSyntaxError (&yystack);
              goto yyuser_error;
            }

          /* If any yyglrShift call fails, it will fail after shifting.  Thus,
             a copy of yylval will already be on stack 0 in the event of a
             failure in the following loop.  Thus, yychar is set to YYEMPTY
             before the loop to make sure the user destructor for yylval isn't
             called twice.  */
          yytoken_to_shift = YYTRANSLATE (yychar);
          yychar = YYEMPTY;
          yyposn += 1;
          for (yys = 0; yys < yystack.yytops.yysize; yys += 1)
            {
              yy_state_t yystate = yystack.yytops.yystates[yys]->yylrState;
              const short* yyconflicts;
              int yyaction = yygetLRActions (yystate, yytoken_to_shift,
                              &yyconflicts);
              /* Note that yyconflicts were handled by yyprocessOneStack.  */
              YY_DPRINTF ((stderr, "On stack %ld, ", YY_CAST (long, yys)));
              YY_SYMBOL_PRINT ("shifting", yytoken_to_shift, &yylval, &yylloc);
              yyglrShift (&yystack, yys, yyaction, yyposn,
                          &yylval);
              YY_DPRINTF ((stderr, "Stack %ld now in state %d\n",
                           YY_CAST (long, yys),
                           yystack.yytops.yystates[yys]->yylrState));
            }

          if (yystack.yytops.yysize == 1)
            {
              YYCHK1 (yyresolveStack (&yystack));
              YY_DPRINTF ((stderr, "Returning to deterministic operation.\n"));
              yycompressStack (&yystack);
              break;
            }
        }
      continue;
    yyuser_error:
      yyrecoverSyntaxError (&yystack);
      yyposn = yystack.yytops.yystates[0]->yyposn;
    }

 yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;

 yybuglab:
  YY_ASSERT (yyfalse);
  goto yyabortlab;

 yyabortlab:
  yyresult = 1;
  goto yyreturnlab;

 yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;

 yyreturnlab:
  if (yychar != YYEMPTY)
    yydestruct ("Cleanup: discarding lookahead",
                YYTRANSLATE (yychar), &yylval);

  /* If the stack is well-formed, pop the stack until it is empty,
     destroying its entries as we go.  But free the stack regardless
     of whether it is well-formed.  */
  if (yystack.yyitems)
    {
      yyGLRState** yystates = yystack.yytops.yystates;
      if (yystates)
        {
          YYPTRDIFF_T yysize = yystack.yytops.yysize;
          YYPTRDIFF_T yyk;
          for (yyk = 0; yyk < yysize; yyk += 1)
            if (yystates[yyk])
              {
                while (yystates[yyk])
                  {
                    yyGLRState *yys = yystates[yyk];
                    if (yys->yypred != YY_NULLPTR)
                      yydestroyGLRState ("Cleanup: popping", yys);
                    yystates[yyk] = yys->yypred;
                    yystack.yynextFree -= 1;
                    yystack.yyspaceLeft += 1;
                  }
                break;
              }
        }
      yyfreeGLRStack (&yystack);
    }

  return yyresult;
}

/* DEBUGGING ONLY */
#if YYDEBUG
/* Print *YYS and its predecessors. */
static void
yy_yypstack (yyGLRState* yys)
{
  if (yys->yypred)
    {
      yy_yypstack (yys->yypred);
      YY_FPRINTF ((stderr, " -> "));
    }
  YY_FPRINTF ((stderr, "%d@%ld", yys->yylrState, YY_CAST (long, yys->yyposn)));
}

/* Print YYS (possibly NULL) and its predecessors. */
static void
yypstates (yyGLRState* yys)
{
  if (yys == YY_NULLPTR)
    YY_FPRINTF ((stderr, "<null>"));
  else
    yy_yypstack (yys);
  YY_FPRINTF ((stderr, "\n"));
}

/* Print the stack #YYK.  */
static void
yypstack (yyGLRStack* yystackp, YYPTRDIFF_T yyk)
{
  yypstates (yystackp->yytops.yystates[yyk]);
}

/* Print all the stacks.  */
static void
yypdumpstack (yyGLRStack* yystackp)
{
#define YYINDEX(YYX)                                                    \
  YY_CAST (long,                                                        \
           ((YYX)                                                       \
            ? YY_REINTERPRET_CAST (yyGLRStackItem*, (YYX)) - yystackp->yyitems \
            : -1))

  yyGLRStackItem* yyp;
  for (yyp = yystackp->yyitems; yyp < yystackp->yynextFree; yyp += 1)
    {
      YY_FPRINTF ((stderr, "%3ld. ",
                   YY_CAST (long, yyp - yystackp->yyitems)));
      if (*YY_REINTERPRET_CAST (yybool *, yyp))
        {
          YY_ASSERT (yyp->yystate.yyisState);
          YY_ASSERT (yyp->yyoption.yyisState);
          YY_FPRINTF ((stderr, "Res: %d, LR State: %d, posn: %ld, pred: %ld",
                       yyp->yystate.yyresolved, yyp->yystate.yylrState,
                       YY_CAST (long, yyp->yystate.yyposn),
                       YYINDEX (yyp->yystate.yypred)));
          if (! yyp->yystate.yyresolved)
            YY_FPRINTF ((stderr, ", firstVal: %ld",
                         YYINDEX (yyp->yystate.yysemantics.yyfirstVal)));
        }
      else
        {
          YY_ASSERT (!yyp->yystate.yyisState);
          YY_ASSERT (!yyp->yyoption.yyisState);
          YY_FPRINTF ((stderr, "Option. rule: %d, state: %ld, next: %ld",
                       yyp->yyoption.yyrule - 1,
                       YYINDEX (yyp->yyoption.yystate),
                       YYINDEX (yyp->yyoption.yynext)));
        }
      YY_FPRINTF ((stderr, "\n"));
    }

  YY_FPRINTF ((stderr, "Tops:"));
  {
    YYPTRDIFF_T yyi;
    for (yyi = 0; yyi < yystackp->yytops.yysize; yyi += 1)
      YY_FPRINTF ((stderr, "%ld: %ld; ", YY_CAST (long, yyi),
                   YYINDEX (yystackp->yytops.yystates[yyi])));
    YY_FPRINTF ((stderr, "\n"));
  }
#undef YYINDEX
}
#endif

#undef yylval
#undef yychar
#undef yynerrs

/* Substitute the variable and function names.  */
#define yyparse Celesteparse
#define yylex   Celestelex
#define yyerror Celesteerror
#define yylval  Celestelval
#define yychar  Celestechar
#define yydebug Celestedebug
#define yynerrs Celestenerrs


#line 7166 "./Celeste_parser.y"


void Celesteerror(const char* s)
{
	std::cout << "Error: " << s << "\n";
	std::cout << "In line: " << Celestelineno << ", Column: " << Celeste_column << '\n';

	std::size_t currentLineCount = 1;
	auto index = 0;
	static constexpr auto offsetShow = 2;

	while (index < Celeste_input_text->size())
	{
		if ((*Celeste_input_text)[index] == '\n')
		{
			currentLineCount += 1;
		}
		index++;

		if (currentLineCount + offsetShow >= Celestelineno)
		{
			break;
		}

	}

	bool donePreShow = false;
	while (!donePreShow && offsetShow > 0)
	{
		if ((*Celeste_input_text)[index] == '\t')
		{
			std::cout << ' ';
		}
		else if ((*Celeste_input_text)[index] == '\r')
		{
			// skip
		}
		else
		{
			std::cout << (*Celeste_input_text)[index];
		}

		if ((*Celeste_input_text)[index] == '\n')
		{
			if (currentLineCount + 1 == Celestelineno)
			{
				donePreShow = true;
			}
			currentLineCount += 1;
		}

		index++;
	}
	
	bool endLine = false;
	while (!endLine && index < Celeste_input_text->size())
	{
		if ((*Celeste_input_text)[index] == '\t')
		{
			std::cout << ' ';
		}
		else if ((*Celeste_input_text)[index] == '\r')
		{
			// skip
		}
		else
		{
			std::cout << (*Celeste_input_text)[index];
		}
		
		if ((*Celeste_input_text)[index] == '\n')
		{
			endLine = true;
		}
		
		index++;
	}

    for(int i = 0; i < Celeste_column - 1; i++)
	{
		std::cout << "_";
	}
	std::cout << "^\n";
}

deamer::external::cpp::ast::Tree* Celeste::bison::parser::Parser::Parse(const std::string& text) const
{
	Celeste_input_text = &text;
	outputTree = nullptr;
	YY_BUFFER_STATE buf;
	buf = Celeste_scan_string(text.c_str());
	Celesteparse();
	Celeste_delete_buffer(buf);
	Celestelex_destroy();

	return outputTree;
}
